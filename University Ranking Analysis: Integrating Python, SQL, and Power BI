{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "5ff76af3-6e99-4ab5-88b8-757b26f14f4a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      world_rank                            institution         country  \\\n",
      "0              1                     Harvard University             USA   \n",
      "1              2  Massachusetts Institute of Technology             USA   \n",
      "2              3                    Stanford University             USA   \n",
      "3              4                University of Cambridge  United Kingdom   \n",
      "4              5     California Institute of Technology             USA   \n",
      "...          ...                                    ...             ...   \n",
      "2195         996              University of the Algarve        Portugal   \n",
      "2196         997                  Alexandria University           Egypt   \n",
      "2197         998           Federal University of CearÃ¡          Brazil   \n",
      "2198         999                University of A CoruÃ±a           Spain   \n",
      "2199        1000        China Pharmaceutical University           China   \n",
      "\n",
      "      national_rank  quality_of_education  alumni_employment  \\\n",
      "0                 1                     7                  9   \n",
      "1                 2                     9                 17   \n",
      "2                 3                    17                 11   \n",
      "3                 1                    10                 24   \n",
      "4                 4                     2                 29   \n",
      "...             ...                   ...                ...   \n",
      "2195              7                   367                567   \n",
      "2196              4                   236                566   \n",
      "2197             18                   367                549   \n",
      "2198             40                   367                567   \n",
      "2199             83                   367                567   \n",
      "\n",
      "      quality_of_faculty  publications  influence  citations  broad_impact  \\\n",
      "0                      1             1          1          1           NaN   \n",
      "1                      3            12          4          4           NaN   \n",
      "2                      5             4          2          2           NaN   \n",
      "3                      4            16         16         11           NaN   \n",
      "4                      7            37         22         22           NaN   \n",
      "...                  ...           ...        ...        ...           ...   \n",
      "2195                 218           926        845        812         969.0   \n",
      "2196                 218           997        908        645         981.0   \n",
      "2197                 218           830        823        812         975.0   \n",
      "2198                 218           886        974        812         975.0   \n",
      "2199                 218           861        991        812         981.0   \n",
      "\n",
      "      patents   score  year  \n",
      "0           5  100.00  2012  \n",
      "1           1   91.67  2012  \n",
      "2          15   89.50  2012  \n",
      "3          50   86.17  2012  \n",
      "4          18   85.21  2012  \n",
      "...       ...     ...   ...  \n",
      "2195      816   44.03  2015  \n",
      "2196      871   44.03  2015  \n",
      "2197      824   44.03  2015  \n",
      "2198      651   44.02  2015  \n",
      "2199      547   44.02  2015  \n",
      "\n",
      "[2200 rows x 14 columns]\n"
     ]
    }
   ],
   "source": [
    "#TASK 1 = Import the Dataset in python Its Called World Ranking Universities.\n",
    "import pandas as pd\n",
    "df=pd.read_excel(\"G:\\\\CoachX\\\\Python\\\\Project Mega\\\\WorldUniversity.xlsx\")\n",
    "print(df)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f02ebc2e-464d-429f-9498-714d641a114d",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "broad_impact    200\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "#TASK 2 Data Cleaning\n",
    "\n",
    "# 1) Find the Missing values \n",
    "missing_values = df.isnull().sum()\n",
    "# print(\"Missing Values= \")\n",
    "print(missing_values[missing_values > 0])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6386ba6f-a200-4f94-90da-e1395141a78c",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Duplicate Rows:\n",
      "Empty DataFrame\n",
      "Columns: [world_rank, institution, country, national_rank, quality_of_education, alumni_employment, quality_of_faculty, publications, influence, citations, broad_impact, patents, score, year]\n",
      "Index: []\n"
     ]
    }
   ],
   "source": [
    "# 2) Remove the duplicates from the datasets\n",
    "# Find duplicate rows based on all columns\n",
    "duplicate_rows = df[df.duplicated()]\n",
    "\n",
    "# Display duplicate rows\n",
    "print(\"Duplicate Rows:\")\n",
    "print(duplicate_rows)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f1158f12-5611-483d-8721-e9d78298362c",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Cleaned Dataset after handling inconsistencies:\n",
      "   world_rank                            institution         country  \\\n",
      "0           1                     HARVARD UNIVERSITY             USA   \n",
      "1           2  MASSACHUSETTS INSTITUTE OF TECHNOLOGY             USA   \n",
      "2           3                    STANFORD UNIVERSITY             USA   \n",
      "3           4                UNIVERSITY OF CAMBRIDGE  UNITED KINGDOM   \n",
      "4           5     CALIFORNIA INSTITUTE OF TECHNOLOGY             USA   \n",
      "\n",
      "   national_rank  quality_of_education  alumni_employment  quality_of_faculty  \\\n",
      "0              1                     7                  9                   1   \n",
      "1              2                     9                 17                   3   \n",
      "2              3                    17                 11                   5   \n",
      "3              1                    10                 24                   4   \n",
      "4              4                     2                 29                   7   \n",
      "\n",
      "   publications  influence  citations  broad_impact  patents   score  year  \n",
      "0             1          1          1           NaN        5  100.00  2012  \n",
      "1            12          4          4           NaN        1   91.67  2012  \n",
      "2             4          2          2           NaN       15   89.50  2012  \n",
      "3            16         16         11           NaN       50   86.17  2012  \n",
      "4            37         22         22           NaN       18   85.21  2012  \n"
     ]
    }
   ],
   "source": [
    "# 3) Remove the inconsistencies from the datasets\n",
    "# Loop through each column and apply cleaning steps\n",
    "for column in df.columns:\n",
    "    if column == 'world_rank':\n",
    "        # Remove rows with negative values in the 'world_rank' column\n",
    "        df = df[df['world_rank'] >= 0]\n",
    "    elif column == 'institution':\n",
    "        # Standardize 'institution' names to uppercase\n",
    "        df['institution'] = df['institution'].str.upper()\n",
    "    elif column == 'country':\n",
    "        # Standardize country names to uppercase\n",
    "        df['country'] = df['country'].str.upper()\n",
    "    elif column == 'national_rank':\n",
    "        # Remove rows with negative values in the 'national_rank' column\n",
    "        df = df[df['national_rank'] >= 0]\n",
    "    elif column == 'quality_of_education':\n",
    "        # Remove rows with negative values in the 'quality_of_education' column\n",
    "        df = df[df['quality_of_education'] >= 0]\n",
    "    elif column == 'alumni_employment':\n",
    "        # Convert string representations of numbers to numeric types in the 'alumni_employment' column\n",
    "        df['alumni_employment'] = pd.to_numeric(df['alumni_employment'], errors='coerce')\n",
    "    elif column == 'quality_of_faculty':\n",
    "        # Remove rows with negative values in the 'quality_of_faculty' column\n",
    "        df = df[df['quality_of_faculty'] >= 0]\n",
    "    elif column == 'publications':\n",
    "        # Remove rows with negative values in the 'publications' column\n",
    "        df = df[df['publications'] >= 0]\n",
    "    elif column == 'influence':\n",
    "        # Remove rows with negative values in the 'influence' column\n",
    "        df = df[df['influence'] >= 0]\n",
    "    elif column == 'citations':\n",
    "        # Remove rows with negative values in the 'citations' column\n",
    "        df = df[df['citations'] >= 0]\n",
    "    elif column == 'patents':\n",
    "        # Remove rows with negative values in the 'patents' column\n",
    "        df = df[df['patents'] >= 0]\n",
    "    elif column == 'score':\n",
    "        # Remove rows with negative values in the 'score' column\n",
    "        df = df[df['score'] >= 0]\n",
    "    \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "        \n",
    "# Display the cleaned dataset\n",
    "print(\"Cleaned Dataset after handling inconsistencies:\")\n",
    "print(df.head())\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e754986c-22b2-4727-8840-115c84ef2c32",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "done\n"
     ]
    }
   ],
   "source": [
    "# TASK 3 = Make Connection wit SQL Server\n",
    "\n",
    "# Import Necessary Libraries\n",
    "import pyodbc as odbc \n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd \n",
    "import sqlite3\n",
    "import matplotlib.pyplot as plt\n",
    "import sqlalchemy as sa\n",
    "print(\"done\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "78eb926d-59af-40fb-8a6d-5952ac0bbd66",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<pyodbc.Connection object at 0x000001B98FFED550>\n",
      "Connection successful!\n"
     ]
    }
   ],
   "source": [
    "# Make a Connection String with python\n",
    "Connection_string = (\n",
    "\n",
    "        r'DRIVER={ODBC Driver 17 for SQL Server};'\n",
    "        r'SERVER= DESKTOP-D0U5H38\\SQLEXPRESS;'\n",
    "        r'DATABASE=Mega_Project;'\n",
    "        r'Trusted_Connection=yes;'\n",
    "        \n",
    "\n",
    ")\n",
    "Conn = odbc.connect(Connection_string)\n",
    "print(Conn)\n",
    "print(\"Connection successful!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6679cd05-c90f-4f63-b829-fef462c2cea7",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Connection successful!\n"
     ]
    }
   ],
   "source": [
    "# Connect with MS-SQL Server\n",
    "\n",
    "from sqlalchemy.engine import URL\n",
    "connection_url = URL.create(\"mssql+pyodbc\", query={\"odbc_connect\": Connection_string})\n",
    "\n",
    "from sqlalchemy import create_engine\n",
    "engine = create_engine(connection_url)\n",
    "print(\"Connection successful!\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "a37f15a6-623a-4bf2-9d14-4939cd79a4f8",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank                     institution         country  national_rank  \\\n",
      "0       673.0            University of Girona           Spain           21.0   \n",
      "1       674.0                Keele University  United Kingdom           49.0   \n",
      "2       675.0          University of Poitiers          France           30.0   \n",
      "3       676.0          University of Insubria           Italy           36.0   \n",
      "4       677.0  Wuhan University of Technology           China           38.0   \n",
      "5       678.0          University of Pretoria    South Africa            5.0   \n",
      "6       679.0        Banaras Hindu University           India           10.0   \n",
      "7       680.0          University of L'Aquila           Italy           37.0   \n",
      "8       681.0          University of Alicante           Spain           22.0   \n",
      "9       682.0   American University of Beirut         Lebanon            1.0   \n",
      "\n",
      "   quality_of_education  alumni_employment  quality_of_faculty  publications  \\\n",
      "0                 367.0              567.0               218.0         662.0   \n",
      "1                 367.0              567.0               218.0         659.0   \n",
      "2                 255.0              567.0               148.0         636.0   \n",
      "3                 367.0              567.0               218.0         705.0   \n",
      "4                 367.0              499.0               218.0         738.0   \n",
      "5                 367.0              262.0               218.0         620.0   \n",
      "6                 243.0              260.0               218.0         754.0   \n",
      "7                 367.0              567.0               218.0         655.0   \n",
      "8                 367.0              567.0               218.0         666.0   \n",
      "9                 114.0              247.0               218.0         915.0   \n",
      "\n",
      "   influence  citations broad_impact  patents  score    year  \n",
      "0      843.0      645.0         None    756.0  44.40  2015.0  \n",
      "1      533.0      321.0         None    853.0  44.40  2015.0  \n",
      "2      470.0      645.0         None    754.0  44.39  2015.0  \n",
      "3      564.0      645.0         None    871.0  44.39  2015.0  \n",
      "4      931.0      428.0         None    763.0  44.39  2015.0  \n",
      "5      513.0      511.0         None    604.0  44.39  2015.0  \n",
      "6      904.0      511.0         None    871.0  44.39  2015.0  \n",
      "7      678.0      645.0         None    871.0  44.38  2015.0  \n",
      "8      779.0      812.0         None    262.0  44.38  2015.0  \n",
      "9      892.0      812.0         None    871.0  44.38  2015.0  \n"
     ]
    }
   ],
   "source": [
    "# Start with SQL Database\n",
    "import sqlalchemy as sa\n",
    "\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT TOP 10  * FROM WorldUniversity\"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b4ff272c-3c14-4f73-9611-c53501d189f6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     world_rank                                    institution country  \\\n",
      "0         687.0                University of Nevada, Las Vegas     USA   \n",
      "1         710.0              Rochester Institute of Technology     USA   \n",
      "2         712.0                 San Francisco State University     USA   \n",
      "3         717.0                           Marquette University     USA   \n",
      "4         718.0  Missouri University of Science and Technology     USA   \n",
      "..          ...                                            ...     ...   \n",
      "568       655.0                            University of Idaho     USA   \n",
      "569       656.0                        Old Dominion University     USA   \n",
      "570       661.0                      Portland State University     USA   \n",
      "571       665.0                          Loma Linda University     USA   \n",
      "572       668.0                     University of Maine, Orono     USA   \n",
      "\n",
      "     national_rank  quality_of_education  alumni_employment  \\\n",
      "0            195.0                 367.0              448.0   \n",
      "1            196.0                 367.0              431.0   \n",
      "2            197.0                 271.0              567.0   \n",
      "3            198.0                 367.0              201.0   \n",
      "4            199.0                 367.0              246.0   \n",
      "..             ...                   ...                ...   \n",
      "568          190.0                 367.0              567.0   \n",
      "569          191.0                 367.0              567.0   \n",
      "570          192.0                 367.0              245.0   \n",
      "571          193.0                 367.0              567.0   \n",
      "572          194.0                 345.0              567.0   \n",
      "\n",
      "     quality_of_faculty  publications  influence  citations broad_impact  \\\n",
      "0                 218.0         640.0      473.0      812.0         None   \n",
      "1                 218.0         905.0      643.0      287.0         None   \n",
      "2                 218.0         864.0      572.0      511.0         None   \n",
      "3                 218.0         912.0      785.0      812.0         None   \n",
      "4                 218.0         718.0      923.0      645.0         None   \n",
      "..                  ...           ...        ...        ...          ...   \n",
      "568               218.0         664.0      417.0      511.0         None   \n",
      "569               218.0         719.0      590.0      511.0         None   \n",
      "570               218.0         800.0      548.0      812.0         None   \n",
      "571               218.0         848.0      755.0      645.0         None   \n",
      "572               218.0         788.0      427.0      368.0         None   \n",
      "\n",
      "     patents  score    year  \n",
      "0      861.0  44.38  2015.0  \n",
      "1      587.0  44.35  2015.0  \n",
      "2      871.0  44.35  2015.0  \n",
      "3      682.0  44.34  2015.0  \n",
      "4      592.0  44.34  2015.0  \n",
      "..       ...    ...     ...  \n",
      "568    469.0  44.42  2015.0  \n",
      "569    379.0  44.42  2015.0  \n",
      "570    484.0  44.41  2015.0  \n",
      "571    555.0  44.41  2015.0  \n",
      "572    346.0  44.40  2015.0  \n",
      "\n",
      "[573 rows x 14 columns]\n"
     ]
    }
   ],
   "source": [
    "# Task 4 :-\n",
    "# Questions using SQL: \n",
    "# 1)Retrieve all columns for universities in the USA.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT * FROM WorldUniversity WHERE country = 'USA';\"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "85798345-fff2-4ee4-944c-5429d27e9abf",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank                            institution         country  \\\n",
      "0         1.0                     Harvard University             USA   \n",
      "1         2.0  Massachusetts Institute of Technology             USA   \n",
      "2         3.0                    Stanford University             USA   \n",
      "3         4.0                University of Cambridge  United Kingdom   \n",
      "4         5.0     California Institute of Technology             USA   \n",
      "5         6.0                   Princeton University             USA   \n",
      "6         7.0                   University of Oxford  United Kingdom   \n",
      "7         8.0                        Yale University             USA   \n",
      "8         9.0                    Columbia University             USA   \n",
      "9        10.0     University of California, Berkeley             USA   \n",
      "\n",
      "   national_rank  quality_of_education  alumni_employment  quality_of_faculty  \\\n",
      "0            1.0                   7.0                9.0                 1.0   \n",
      "1            2.0                   9.0               17.0                 3.0   \n",
      "2            3.0                  17.0               11.0                 5.0   \n",
      "3            1.0                  10.0               24.0                 4.0   \n",
      "4            4.0                   2.0               29.0                 7.0   \n",
      "5            5.0                   8.0               14.0                 2.0   \n",
      "6            2.0                  13.0               28.0                 9.0   \n",
      "7            6.0                  14.0               31.0                12.0   \n",
      "8            7.0                  23.0               21.0                10.0   \n",
      "9            8.0                  16.0               52.0                 6.0   \n",
      "\n",
      "   publications  influence  citations broad_impact  patents   score    year  \n",
      "0           1.0        1.0        1.0         None      5.0  100.00  2012.0  \n",
      "1          12.0        4.0        4.0         None      1.0   91.67  2012.0  \n",
      "2           4.0        2.0        2.0         None     15.0   89.50  2012.0  \n",
      "3          16.0       16.0       11.0         None     50.0   86.17  2012.0  \n",
      "4          37.0       22.0       22.0         None     18.0   85.21  2012.0  \n",
      "5          53.0       33.0       26.0         None    101.0   82.50  2012.0  \n",
      "6          15.0       13.0       19.0         None     26.0   82.34  2012.0  \n",
      "7          14.0        6.0       15.0         None     66.0   79.14  2012.0  \n",
      "8          13.0       12.0       14.0         None      5.0   78.86  2012.0  \n",
      "9           6.0        5.0        3.0         None     16.0   78.55  2012.0  \n"
     ]
    }
   ],
   "source": [
    "#2) Find the top 10 universities with the highest scores in 2012.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT TOP 10 * FROM WorldUniversity WHERE year = 2012 ORDER BY score DESC; \"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a0e7db59-3cee-4239-8e69-be6058561d3f",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank              institution         country  national_rank  \\\n",
      "0         3.0     University of Oxford  United Kingdom            1.0   \n",
      "1         5.0  University of Cambridge  United Kingdom            2.0   \n",
      "\n",
      "   quality_of_education  alumni_employment  quality_of_faculty  publications  \\\n",
      "0                   7.0               12.0                10.0          11.0   \n",
      "1                   3.0               15.0                 5.0           9.0   \n",
      "\n",
      "   influence  citations broad_impact  patents  score    year  \n",
      "0        7.0       13.0         None     15.0  92.54  2013.0  \n",
      "1       11.0       10.0         None     39.0  90.24  2013.0  \n"
     ]
    }
   ],
   "source": [
    "#3) List universities in the United Kingdom with a score above 80 in 2013.\n",
    "\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT * FROM WorldUniversity WHERE country = 'United Kingdom' AND score > 80 AND year = 2013; \"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "5656901d-ae34-4c32-809f-2c963f18e64f",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                 country  university_count\n",
      "0            Puerto Rico                 2\n",
      "1                Finland                20\n",
      "2            South Korea                72\n",
      "3                    USA               573\n",
      "4            New Zealand                12\n",
      "5                 Uganda                 2\n",
      "6                  Egypt                 8\n",
      "7                  Italy                96\n",
      "8                 Brazil                36\n",
      "9            Netherlands                29\n",
      "10             Hong Kong                12\n",
      "11              Malaysia                 6\n",
      "12               Germany               115\n",
      "13             Lithuania                 2\n",
      "14               Iceland                 2\n",
      "15               Hungary                12\n",
      "16                Cyprus                 2\n",
      "17           Switzerland                26\n",
      "18               Estonia                 2\n",
      "19       Slovak Republic                 2\n",
      "20               Lebanon                 2\n",
      "21          Saudi Arabia                 8\n",
      "22             Australia                58\n",
      "23        United Kingdom               144\n",
      "24                Mexico                 4\n",
      "25                Sweden                24\n",
      "26                 China               167\n",
      "27             Argentina                 7\n",
      "28                Serbia                 2\n",
      "29                 India                31\n",
      "30               Croatia                 2\n",
      "31                Greece                14\n",
      "32               Austria                24\n",
      "33  United Arab Emirates                 2\n",
      "34                Russia                 9\n",
      "35                Israel                22\n",
      "36               Uruguay                 2\n",
      "37                Poland                18\n",
      "38                Canada                72\n",
      "39              Bulgaria                 2\n",
      "40              Slovenia                 4\n",
      "41               Ireland                16\n",
      "42              Thailand                 6\n",
      "43                Norway                12\n",
      "44                France               109\n",
      "45               Belgium                20\n",
      "46                 Japan               159\n",
      "47                 Spain                81\n",
      "48                Turkey                20\n",
      "49               Romania                 3\n",
      "50               Denmark                12\n",
      "51             Singapore                 5\n",
      "52              Colombia                 4\n",
      "53                  Iran                16\n",
      "54                 Chile                 8\n",
      "55          South Africa                10\n",
      "56        Czech Republic                10\n",
      "57              Portugal                14\n",
      "58                Taiwan                46\n"
     ]
    }
   ],
   "source": [
    "# 4) Count the number of universities in each country.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT country, COUNT(*) AS university_count FROM WorldUniversity GROUP BY country;  \"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "aeac6a35-2fed-4191-856d-7c761444753b",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                 country  average_score\n",
      "0              Argentina      44.732500\n",
      "1              Australia      46.050741\n",
      "2                Austria      45.291667\n",
      "3                Belgium      47.256000\n",
      "4                 Brazil      44.929444\n",
      "5               Bulgaria      44.480000\n",
      "6                 Canada      47.287500\n",
      "7                  Chile      44.862500\n",
      "8                  China      45.109286\n",
      "9               Colombia      44.620000\n",
      "10               Croatia      44.920000\n",
      "11                Cyprus      44.320000\n",
      "12        Czech Republic      44.842000\n",
      "13               Denmark      48.350000\n",
      "14                 Egypt      44.365000\n",
      "15               Estonia      44.940000\n",
      "16               Finland      45.862222\n",
      "17                France      46.332600\n",
      "18               Germany      46.654909\n",
      "19                Greece      44.984286\n",
      "20             Hong Kong      46.556667\n",
      "21               Hungary      44.795000\n",
      "22               Iceland      45.050000\n",
      "23                 India      44.888667\n",
      "24                  Iran      44.376250\n",
      "25               Ireland      45.353750\n",
      "26                Israel      52.138571\n",
      "27                 Italy      45.580426\n",
      "28                 Japan      46.873649\n",
      "29               Lebanon      44.930000\n",
      "30             Lithuania      44.460000\n",
      "31              Malaysia      45.310000\n",
      "32                Mexico      45.285000\n",
      "33           Netherlands      48.412308\n",
      "34           New Zealand      45.300000\n",
      "35                Norway      46.596000\n",
      "36                Poland      44.653333\n",
      "37              Portugal      45.235714\n",
      "38           Puerto Rico      44.290000\n",
      "39               Romania      44.320000\n",
      "40                Russia      49.096667\n",
      "41          Saudi Arabia      44.730000\n",
      "42                Serbia      44.510000\n",
      "43             Singapore      51.435000\n",
      "44       Slovak Republic      44.600000\n",
      "45              Slovenia      44.740000\n",
      "46          South Africa      46.700000\n",
      "47           South Korea      46.370000\n",
      "48                 Spain      45.133171\n",
      "49                Sweden      48.251818\n",
      "50           Switzerland      51.661111\n",
      "51                Taiwan      45.061600\n",
      "52              Thailand      45.313333\n",
      "53                Turkey      44.628000\n",
      "54                Uganda      44.400000\n",
      "55  United Arab Emirates      44.360000\n",
      "56        United Kingdom      48.445937\n",
      "57               Uruguay      44.350000\n",
      "58                   USA      50.642489\n"
     ]
    }
   ],
   "source": [
    "#5) Calculate the average score for universities in each country in 2014.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT country, AVG(score) AS average_score FROM WorldUniversity WHERE year = 2014 GROUP BY country; \"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "39891641-254f-4321-a6fb-c13e67264a14",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      world_rank                     institution         country  \\\n",
      "0          673.0            University of Girona           Spain   \n",
      "1          674.0                Keele University  United Kingdom   \n",
      "2          675.0          University of Poitiers          France   \n",
      "3          676.0          University of Insubria           Italy   \n",
      "4          677.0  Wuhan University of Technology           China   \n",
      "...          ...                             ...             ...   \n",
      "2121       668.0      University of Maine, Orono             USA   \n",
      "2122       669.0   Graz University of Technology         Austria   \n",
      "2123       670.0                 Gifu University           Japan   \n",
      "2124       671.0       University of JyvÃ¤skylÃ¤         Finland   \n",
      "2125       672.0          University of Paris 13          France   \n",
      "\n",
      "      national_rank  quality_of_education  alumni_employment  \\\n",
      "0              21.0                 367.0              567.0   \n",
      "1              49.0                 367.0              567.0   \n",
      "2              30.0                 255.0              567.0   \n",
      "3              36.0                 367.0              567.0   \n",
      "4              38.0                 367.0              499.0   \n",
      "...             ...                   ...                ...   \n",
      "2121          194.0                 345.0              567.0   \n",
      "2122            8.0                 367.0              567.0   \n",
      "2123           43.0                 367.0              567.0   \n",
      "2124            8.0                 367.0              525.0   \n",
      "2125           29.0                 367.0              567.0   \n",
      "\n",
      "      quality_of_faculty  publications  influence  citations broad_impact  \\\n",
      "0                  218.0         662.0      843.0      645.0         None   \n",
      "1                  218.0         659.0      533.0      321.0         None   \n",
      "2                  148.0         636.0      470.0      645.0         None   \n",
      "3                  218.0         705.0      564.0      645.0         None   \n",
      "4                  218.0         738.0      931.0      428.0         None   \n",
      "...                  ...           ...        ...        ...          ...   \n",
      "2121               218.0         788.0      427.0      368.0         None   \n",
      "2122               218.0         677.0      715.0      368.0         None   \n",
      "2123               218.0         701.0      658.0      645.0         None   \n",
      "2124               218.0         456.0      443.0      812.0         None   \n",
      "2125               218.0         669.0      744.0      645.0         None   \n",
      "\n",
      "      patents  score    year  \n",
      "0       756.0  44.40  2015.0  \n",
      "1       853.0  44.40  2015.0  \n",
      "2       754.0  44.39  2015.0  \n",
      "3       871.0  44.39  2015.0  \n",
      "4       763.0  44.39  2015.0  \n",
      "...       ...    ...     ...  \n",
      "2121    346.0  44.40  2015.0  \n",
      "2122    404.0  44.40  2015.0  \n",
      "2123    403.0  44.40  2015.0  \n",
      "2124    805.0  44.40  2015.0  \n",
      "2125    700.0  44.40  2015.0  \n",
      "\n",
      "[2126 rows x 14 columns]\n"
     ]
    }
   ],
   "source": [
    "#6)Find universities with a quality_of_education score greater than 20.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT * FROM WorldUniversity WHERE quality_of_education > 20; \"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "2e4374a3-de2e-420f-a0ea-2652fbbcf5af",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    world_rank                                      institution      country  \\\n",
      "0          8.0                                  Yale University          USA   \n",
      "1          9.0                              Columbia University          USA   \n",
      "2         10.0               University of California, Berkeley          USA   \n",
      "3         11.0                            University of Chicago          USA   \n",
      "4         12.0                               Cornell University          USA   \n",
      "5         13.0                       University of Pennsylvania          USA   \n",
      "6          9.0                            University of Chicago          USA   \n",
      "7         10.0                                  Yale University          USA   \n",
      "8         11.0               California Institute of Technology          USA   \n",
      "9         12.0                       University of Pennsylvania          USA   \n",
      "10        13.0                               Cornell University          USA   \n",
      "11        14.0                              University of Tokyo        Japan   \n",
      "12        14.0                       University of Pennsylvania          USA   \n",
      "13        15.0            University of California, Los Angeles          USA   \n",
      "14        16.0                                 Kyoto University        Japan   \n",
      "15        17.0                              New York University          USA   \n",
      "16        18.0  Swiss Federal Institute of Technology in Zurich  Switzerland   \n",
      "17        19.0                         Johns Hopkins University          USA   \n",
      "18        13.0                              University of Tokyo        Japan   \n",
      "19        14.0                       University of Pennsylvania          USA   \n",
      "20        15.0            University of California, Los Angeles          USA   \n",
      "21        16.0                         Johns Hopkins University          USA   \n",
      "\n",
      "    national_rank  quality_of_education  alumni_employment  \\\n",
      "0             6.0                  14.0               31.0   \n",
      "1             7.0                  23.0               21.0   \n",
      "2             8.0                  16.0               52.0   \n",
      "3             9.0                  15.0               26.0   \n",
      "4            10.0                  21.0               42.0   \n",
      "5            11.0                  31.0               16.0   \n",
      "6             7.0                   9.0               19.0   \n",
      "7             8.0                  10.0               25.0   \n",
      "8             9.0                   5.0              101.0   \n",
      "9            10.0                  22.0                5.0   \n",
      "10           11.0                  12.0               23.0   \n",
      "11            1.0                  17.0                3.0   \n",
      "12           11.0                  21.0                4.0   \n",
      "13           12.0                  27.0               27.0   \n",
      "14            2.0                  30.0               23.0   \n",
      "15           13.0                  33.0               21.0   \n",
      "16            1.0                  16.0              105.0   \n",
      "17           14.0                  24.0               75.0   \n",
      "18            1.0                  16.0                3.0   \n",
      "19           11.0                  20.0                4.0   \n",
      "20           12.0                  28.0               27.0   \n",
      "21           13.0                  18.0               84.0   \n",
      "\n",
      "    quality_of_faculty  publications  influence  citations broad_impact  \\\n",
      "0                 12.0          14.0        6.0       15.0         None   \n",
      "1                 10.0          13.0       12.0       14.0         None   \n",
      "2                  6.0           6.0        5.0        3.0         None   \n",
      "3                  8.0          34.0       20.0       28.0         None   \n",
      "4                 14.0          22.0       21.0       16.0         None   \n",
      "5                 24.0           9.0       10.0        8.0         None   \n",
      "6                  8.0          37.0       21.0       30.0         None   \n",
      "7                 13.0          20.0       12.0       22.0         None   \n",
      "8                  7.0          38.0       24.0       25.0         None   \n",
      "9                 25.0          10.0       10.0        9.0         None   \n",
      "10                18.0          21.0       19.0       15.0         None   \n",
      "11                32.0          14.0       23.0       29.0         None   \n",
      "12                26.0           8.0       17.0       13.0         None   \n",
      "13                12.0           6.0       14.0        7.0         None   \n",
      "14                15.0          27.0       41.0       61.0         None   \n",
      "15                17.0          49.0       29.0       32.0         None   \n",
      "16                13.0          42.0       28.0       45.0         None   \n",
      "17                18.0           4.0       10.0        6.0         None   \n",
      "18                38.0          14.0       19.0       31.0         None   \n",
      "19                28.0           8.0       18.0       14.0         None   \n",
      "20                13.0           6.0       14.0        8.0         None   \n",
      "21                16.0           4.0       11.0        5.0         None   \n",
      "\n",
      "    patents  score    year  \n",
      "0      66.0  79.14  2012.0  \n",
      "1       5.0  78.86  2012.0  \n",
      "2      16.0  78.55  2012.0  \n",
      "3     101.0  73.82  2012.0  \n",
      "4      10.0  73.69  2012.0  \n",
      "5       9.0  73.64  2012.0  \n",
      "6     101.0  79.16  2013.0  \n",
      "7      42.0  78.83  2013.0  \n",
      "8      17.0  77.59  2013.0  \n",
      "9      14.0  77.24  2013.0  \n",
      "10      7.0  76.99  2013.0  \n",
      "11      5.0  76.23  2013.0  \n",
      "12     28.0  79.30  2014.0  \n",
      "13     10.0  78.35  2014.0  \n",
      "14     18.0  73.21  2014.0  \n",
      "15     48.0  72.29  2014.0  \n",
      "16     84.0  72.18  2014.0  \n",
      "17      3.0  71.17  2014.0  \n",
      "18      7.0  78.23  2015.0  \n",
      "19     14.0  77.60  2015.0  \n",
      "20      9.0  76.91  2015.0  \n",
      "21      2.0  71.60  2015.0  \n"
     ]
    }
   ],
   "source": [
    "#7)Retrieve universities with a score between 70 and 80.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT * FROM WorldUniversity WHERE score BETWEEN 70 AND 80; \"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "bab9163d-b7b5-4e36-b5f7-08fadbb74b64",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank                                   institution country  \\\n",
      "0        18.0                 Weizmann Institute of Science  Israel   \n",
      "1        20.0           University of California, San Diego     USA   \n",
      "2        21.0                        Rockefeller University     USA   \n",
      "3        24.0       University of California, San Francisco     USA   \n",
      "4        26.0  University of Illinois at Urbanaâ€“Champaign     USA   \n",
      "\n",
      "   national_rank  quality_of_education  alumni_employment  quality_of_faculty  \\\n",
      "0            1.0                   4.0              101.0                22.0   \n",
      "1           14.0                  61.0              101.0                15.0   \n",
      "2           15.0                   1.0              101.0                16.0   \n",
      "3           17.0                 101.0              101.0                21.0   \n",
      "4           19.0                  82.0              101.0                18.0   \n",
      "\n",
      "   publications  influence  citations broad_impact  patents  score    year  \n",
      "0         101.0       67.0      101.0         None     29.0  65.09  2012.0  \n",
      "1          10.0        8.0       10.0         None     22.0  63.11  2012.0  \n",
      "2         101.0       28.0       96.0         None    101.0  61.74  2012.0  \n",
      "3          19.0        3.0       13.0         None     33.0  59.70  2012.0  \n",
      "4          35.0       71.0       39.0         None     44.0  59.00  2012.0  \n"
     ]
    }
   ],
   "source": [
    "#8)List the top 5 universities with the highest alumni employment scores in 2012.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT TOP 5 * FROM WorldUniversity WHERE year = 2012 ORDER BY alumni_employment DESC;\"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "e46035b8-c32b-4ab5-b0d0-6e38977df6cd",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank              institution country  national_rank  \\\n",
      "0        28.0  Northwestern University     USA           21.0   \n",
      "\n",
      "   quality_of_education  alumni_employment  quality_of_faculty  publications  \\\n",
      "0                 101.0               21.0               101.0          27.0   \n",
      "\n",
      "   influence  citations broad_impact  patents  score    year  \n",
      "0       26.0       24.0         None     30.0  56.12  2013.0  \n"
     ]
    }
   ],
   "source": [
    "#9)Find the university with the highest quality_of_faculty in 2013.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT TOP 1 * FROM WorldUniversity WHERE year = 2013 ORDER BY quality_of_faculty DESC; \"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "4a25dc60-0c31-4194-ba27-f421129ef7db",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   university_count\n",
      "0               448\n"
     ]
    }
   ],
   "source": [
    "#10)Count the number of universities that have a national_rank less than 5.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT COUNT(*) AS university_count FROM WorldUniversity WHERE national_rank < 5; \"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "a1270b80-1eb3-4316-b5dd-aa26fb9bc7b5",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank             institution country  national_rank  \\\n",
      "0        21.0  Rockefeller University     USA           15.0   \n",
      "1         1.0      Harvard University     USA            1.0   \n",
      "2         1.0      Harvard University     USA            1.0   \n",
      "3         1.0      Harvard University     USA            1.0   \n",
      "\n",
      "   quality_of_education  alumni_employment  quality_of_faculty  publications  \\\n",
      "0                   1.0              101.0                16.0         101.0   \n",
      "1                   1.0                1.0                 1.0           1.0   \n",
      "2                   1.0                1.0                 1.0           1.0   \n",
      "3                   1.0                1.0                 1.0           1.0   \n",
      "\n",
      "   influence  citations broad_impact  patents   score    year  \n",
      "0       28.0       96.0         None    101.0   61.74  2012.0  \n",
      "1        1.0        1.0         None      7.0  100.00  2013.0  \n",
      "2        1.0        1.0         None      2.0  100.00  2014.0  \n",
      "3        1.0        1.0         None      3.0  100.00  2015.0  \n"
     ]
    }
   ],
   "source": [
    "#11)Retrieve universities with a quality_of_education rank equal to 1.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT * FROM WorldUniversity WHERE quality_of_education = 1; \"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "51e33b60-e780-4226-ac89-08593e45101f",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank                           institution         country  \\\n",
      "0       246.0        National Cheng Kung University          Taiwan   \n",
      "1       299.0                    Leipzig University         Germany   \n",
      "2       328.0  Indian Institute of Technology Delhi           India   \n",
      "3       347.0                 University of Navarra           Spain   \n",
      "4       394.0                    Tianjin University           China   \n",
      "5       397.0                  Cranfield University  United Kingdom   \n",
      "6       399.0             Xi'an Jiaotong University           China   \n",
      "7       406.0           Chonbuk National University     South Korea   \n",
      "8       420.0                  King Saud University    Saudi Arabia   \n",
      "9       428.0                     Sogang University     South Korea   \n",
      "\n",
      "   national_rank  quality_of_education  alumni_employment  quality_of_faculty  \\\n",
      "0            2.0                 355.0               60.0               210.0   \n",
      "1           25.0                 308.0              478.0               201.0   \n",
      "2            1.0                 355.0               57.0               210.0   \n",
      "3            6.0                 355.0               72.0               210.0   \n",
      "4           14.0                 355.0               87.0               210.0   \n",
      "5           35.0                 355.0               71.0               210.0   \n",
      "6           15.0                 355.0              127.0               210.0   \n",
      "7           13.0                 355.0              478.0               210.0   \n",
      "8            1.0                 355.0              133.0               210.0   \n",
      "9           14.0                 355.0              478.0               210.0   \n",
      "\n",
      "   publications  influence  citations broad_impact  patents  score    year  \n",
      "0         157.0      545.0      800.0         None    307.0  47.16  2014.0  \n",
      "1         287.0      268.0      800.0         None    307.0  46.36  2014.0  \n",
      "2         644.0      928.0      800.0         None    426.0  46.10  2014.0  \n",
      "3         582.0      734.0      800.0         None    426.0  45.88  2014.0  \n",
      "4         406.0      926.0      800.0         None    426.0  45.57  2014.0  \n",
      "5         728.0      731.0      800.0         None    737.0  45.56  2014.0  \n",
      "6         307.0      595.0      800.0         None    181.0  45.55  2014.0  \n",
      "7         512.0      741.0      800.0         None     78.0  45.51  2014.0  \n",
      "8         611.0      537.0      800.0         None    115.0  45.45  2014.0  \n",
      "9         781.0      792.0      800.0         None     68.0  45.43  2014.0  \n"
     ]
    }
   ],
   "source": [
    "#12) List the top 10 universities with the highest citations in 2014.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT TOP 10 * FROM WorldUniversity WHERE year = 2014 ORDER BY citations DESC; \"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "7ea3cedb-c23f-4e3c-afa9-003cdae06a96",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   average_influence\n",
      "0          280.13438\n"
     ]
    }
   ],
   "source": [
    "#13)Calculate the average influence score for universities in the USA.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT AVG(influence) AS average_influence FROM WorldUniversity WHERE country = 'USA'; \"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "dc6cec26-d75d-4957-af50-c221386b448c",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Empty DataFrame\n",
      "Columns: [world_rank, institution, country, national_rank, quality_of_education, alumni_employment, quality_of_faculty, publications, influence, citations, broad_impact, patents, score, year]\n",
      "Index: []\n"
     ]
    }
   ],
   "source": [
    "#14) Find universities with a broad_impact rank less than or equal to 50.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT * FROM WorldUniversity WHERE broad_impact <= 50; \"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "b094c58c-1ecf-4023-a641-5e43d212e80a",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank          institution country  national_rank  \\\n",
      "0        14.0  University of Tokyo   Japan            1.0   \n",
      "1        17.0     Kyoto University   Japan            2.0   \n",
      "\n",
      "   quality_of_education  alumni_employment  quality_of_faculty  publications  \\\n",
      "0                  32.0               19.0                31.0           8.0   \n",
      "1                  42.0               38.0                19.0          25.0   \n",
      "\n",
      "   influence  citations broad_impact  patents  score    year  \n",
      "0       19.0       23.0         None      3.0  69.49  2012.0  \n",
      "1       36.0       43.0         None     23.0  65.76  2012.0  \n"
     ]
    }
   ],
   "source": [
    "#15)Retrieve universities in Japan with a score greater than 60 in 2012.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT * FROM WorldUniversity WHERE country = 'Japan' AND score > 60 AND year = 2012; \"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "d7f35f47-579a-454c-8bfe-035d95c61d67",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank                              institution country  national_rank  \\\n",
      "0         8.0                     Princeton University     USA            6.0   \n",
      "1         9.0                    University of Chicago     USA            7.0   \n",
      "2        29.0                    University of Toronto  Canada            1.0   \n",
      "3        36.0                  University of Paris-Sud  France            1.0   \n",
      "4        37.0  University of California, Santa Barbara     USA           25.0   \n",
      "\n",
      "   quality_of_education  alumni_employment  quality_of_faculty  publications  \\\n",
      "0                   4.0               14.0                 3.0          58.0   \n",
      "1                   9.0               19.0                 8.0          37.0   \n",
      "2                  91.0               81.0                34.0           2.0   \n",
      "3                  26.0              101.0                26.0          73.0   \n",
      "4                 101.0              101.0                28.0          89.0   \n",
      "\n",
      "   influence  citations broad_impact  patents  score    year  \n",
      "0       35.0       27.0         None    101.0  82.17  2013.0  \n",
      "1       21.0       30.0         None    101.0  79.16  2013.0  \n",
      "2       13.0       12.0         None    101.0  56.11  2013.0  \n",
      "3      101.0      101.0         None    101.0  51.72  2013.0  \n",
      "4       91.0       38.0         None    101.0  51.67  2013.0  \n"
     ]
    }
   ],
   "source": [
    "#16)List the top 5 universities with the highest patents in 2013.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT TOP 5 * FROM WorldUniversity WHERE year = 2013 ORDER BY patents DESC; \"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "061337d3-62b9-45cf-91f3-ac85c2ae95b7",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   university_count\n",
      "0                24\n"
     ]
    }
   ],
   "source": [
    "#17)Count the number of universities with a quality_of_faculty score between 5 and 10.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT COUNT(*) AS university_count FROM WorldUniversity WHERE quality_of_faculty BETWEEN 5 AND 10; \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "4396a360-5bc5-4c86-bd60-5da9d6fb8eac",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   average_score\n",
      "0      48.445937\n"
     ]
    }
   ],
   "source": [
    "#18)Calculate the average score for universities in the United Kingdom in 2014.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT AVG(score) AS average_score FROM WorldUniversity WHERE country = 'United Kingdom' AND year = 2014;\"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "2682b32f-7b10-442a-bfbf-1d379f63803d",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    world_rank                                        institution  \\\n",
      "0          1.0                                 Harvard University   \n",
      "1          2.0              Massachusetts Institute of Technology   \n",
      "2          3.0                                Stanford University   \n",
      "3          4.0                            University of Cambridge   \n",
      "4          7.0                               University of Oxford   \n",
      "5         14.0                                University of Tokyo   \n",
      "6         16.0    Swiss Federal Institute of Technology in Zurich   \n",
      "7         17.0                                   Kyoto University   \n",
      "8         18.0                      Weizmann Institute of Science   \n",
      "9         22.0                     Hebrew University of Jerusalem   \n",
      "10        28.0                            Imperial College London   \n",
      "11        32.0                                   Osaka University   \n",
      "12        35.0                              University of Toronto   \n",
      "13        41.0                                  McGill University   \n",
      "14        48.0                            University of Paris-Sud   \n",
      "15        51.0        Technion â€“ Israel Institute of Technology   \n",
      "16        54.0                 Ã‰cole normale supÃ©rieure - Paris   \n",
      "17        60.0                            University of Edinburgh   \n",
      "18        61.0                               Ã‰cole Polytechnique   \n",
      "19        65.0                               University of Geneva   \n",
      "20        67.0                     University of British Columbia   \n",
      "21        69.0  Swiss Federal Institute of Technology in Lausanne   \n",
      "22        70.0                               Karolinska Institute   \n",
      "23        75.0                          Seoul National University   \n",
      "24        77.0                        Sapienza University of Rome   \n",
      "25        82.0             Ruprecht Karl University of Heidelberg   \n",
      "26        83.0             Ludwig Maximilian University of Munich   \n",
      "27        85.0                                  Leiden University   \n",
      "28        89.0                             University of Helsinki   \n",
      "29        90.0                     Technical University of Munich   \n",
      "30        91.0                                 University of Oslo   \n",
      "31        92.0                           University of Queensland   \n",
      "32        93.0                           University of Copenhagen   \n",
      "33        94.0                               University of Sydney   \n",
      "34        99.0                                 Utrecht University   \n",
      "\n",
      "           country  national_rank  quality_of_education  alumni_employment  \\\n",
      "0              USA            1.0                   7.0                9.0   \n",
      "1              USA            2.0                   9.0               17.0   \n",
      "2              USA            3.0                  17.0               11.0   \n",
      "3   United Kingdom            1.0                  10.0               24.0   \n",
      "4   United Kingdom            2.0                  13.0               28.0   \n",
      "5            Japan            1.0                  32.0               19.0   \n",
      "6      Switzerland            1.0                  26.0               66.0   \n",
      "7            Japan            2.0                  42.0               38.0   \n",
      "8           Israel            1.0                   4.0              101.0   \n",
      "9           Israel            2.0                  24.0               93.0   \n",
      "10  United Kingdom            3.0                  84.0               73.0   \n",
      "11           Japan            3.0                  77.0              101.0   \n",
      "12          Canada            1.0                 101.0              101.0   \n",
      "13          Canada            2.0                  70.0               91.0   \n",
      "14          France            1.0                  48.0              101.0   \n",
      "15          Israel            3.0                  45.0               89.0   \n",
      "16          France            2.0                   3.0               61.0   \n",
      "17  United Kingdom            1.0                  71.0              101.0   \n",
      "18          France            3.0                  47.0                3.0   \n",
      "19     Switzerland            2.0                  46.0              101.0   \n",
      "20          Canada            3.0                 101.0              101.0   \n",
      "21     Switzerland            3.0                 101.0               30.0   \n",
      "22          Sweden            1.0                  51.0              101.0   \n",
      "23     South Korea            1.0                 101.0               34.0   \n",
      "24           Italy            1.0                 101.0              101.0   \n",
      "25         Germany            1.0                  87.0              101.0   \n",
      "26         Germany            2.0                  90.0              101.0   \n",
      "27     Netherlands            1.0                  88.0              101.0   \n",
      "28         Finland            1.0                  96.0              101.0   \n",
      "29         Germany            3.0                  52.0              101.0   \n",
      "30          Norway            1.0                 101.0              101.0   \n",
      "31       Australia            1.0                 101.0              101.0   \n",
      "32         Denmark            1.0                 101.0              101.0   \n",
      "33       Australia            2.0                 101.0              101.0   \n",
      "34     Netherlands            2.0                 100.0              101.0   \n",
      "\n",
      "    quality_of_faculty  publications  influence  citations broad_impact  \\\n",
      "0                  1.0           1.0        1.0        1.0         None   \n",
      "1                  3.0          12.0        4.0        4.0         None   \n",
      "2                  5.0           4.0        2.0        2.0         None   \n",
      "3                  4.0          16.0       16.0       11.0         None   \n",
      "4                  9.0          15.0       13.0       19.0         None   \n",
      "5                 31.0           8.0       19.0       23.0         None   \n",
      "6                 11.0          40.0       51.0       44.0         None   \n",
      "7                 19.0          25.0       36.0       43.0         None   \n",
      "8                 22.0         101.0       67.0      101.0         None   \n",
      "9                 13.0         101.0       91.0      101.0         None   \n",
      "10                35.0          26.0       26.0       29.0         None   \n",
      "11                44.0          39.0       44.0       51.0         None   \n",
      "12                34.0           7.0       14.0       18.0         None   \n",
      "13                54.0          33.0       39.0       47.0         None   \n",
      "14                25.0          73.0       96.0      101.0         None   \n",
      "15                36.0         101.0      101.0      101.0         None   \n",
      "16                77.0         101.0      101.0      101.0         None   \n",
      "17                43.0          64.0       41.0       70.0         None   \n",
      "18               101.0         101.0      101.0      101.0         None   \n",
      "19                29.0         101.0       93.0      101.0         None   \n",
      "20                93.0          28.0       38.0       48.0         None   \n",
      "21                82.0         101.0      101.0      101.0         None   \n",
      "22                42.0          84.0       49.0       95.0         None   \n",
      "23               101.0          44.0      101.0       69.0         None   \n",
      "24                30.0          70.0      101.0      101.0         None   \n",
      "25                52.0          86.0       58.0      100.0         None   \n",
      "26                90.0          60.0       45.0       62.0         None   \n",
      "27                76.0          81.0       65.0      101.0         None   \n",
      "28                79.0          62.0       64.0       54.0         None   \n",
      "29               101.0          91.0       76.0       94.0         None   \n",
      "30                39.0         101.0      101.0      101.0         None   \n",
      "31               101.0          67.0       90.0       89.0         None   \n",
      "32                60.0          85.0       66.0      101.0         None   \n",
      "33               101.0          56.0       92.0       85.0         None   \n",
      "34               101.0          65.0      101.0       60.0         None   \n",
      "\n",
      "    patents   score    year  \n",
      "0       5.0  100.00  2012.0  \n",
      "1       1.0   91.67  2012.0  \n",
      "2      15.0   89.50  2012.0  \n",
      "3      50.0   86.17  2012.0  \n",
      "4      26.0   82.34  2012.0  \n",
      "5       3.0   69.49  2012.0  \n",
      "6      34.0   66.69  2012.0  \n",
      "7      23.0   65.76  2012.0  \n",
      "8      29.0   65.09  2012.0  \n",
      "9      28.0   60.76  2012.0  \n",
      "10     41.0   57.53  2012.0  \n",
      "11     11.0   54.43  2012.0  \n",
      "12    101.0   53.43  2012.0  \n",
      "13    101.0   51.72  2012.0  \n",
      "14    101.0   50.44  2012.0  \n",
      "15     51.0   50.01  2012.0  \n",
      "16    101.0   49.10  2012.0  \n",
      "17    101.0   48.43  2012.0  \n",
      "18    101.0   48.33  2012.0  \n",
      "19    101.0   47.94  2012.0  \n",
      "20    101.0   47.74  2012.0  \n",
      "21     74.0   47.68  2012.0  \n",
      "22    101.0   47.61  2012.0  \n",
      "23      4.0   46.74  2012.0  \n",
      "24    101.0   46.34  2012.0  \n",
      "25    101.0   45.33  2012.0  \n",
      "26    101.0   45.21  2012.0  \n",
      "27    101.0   45.13  2012.0  \n",
      "28    101.0   44.44  2012.0  \n",
      "29    101.0   44.32  2012.0  \n",
      "30    101.0   44.26  2012.0  \n",
      "31     46.0   44.18  2012.0  \n",
      "32    101.0   44.15  2012.0  \n",
      "33     69.0   44.13  2012.0  \n",
      "34    101.0   43.47  2012.0  \n"
     ]
    }
   ],
   "source": [
    "#19)Find universities with a national_rank between 1 and 3 in 2012.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT * FROM WorldUniversity WHERE national_rank BETWEEN 1 AND 3 AND year = 2012;\"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "d27b2c14-4875-4893-bfe8-22a366a44034",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    world_rank                            institution         country  \\\n",
      "0          1.0                     Harvard University             USA   \n",
      "1          2.0  Massachusetts Institute of Technology             USA   \n",
      "2          3.0                    Stanford University             USA   \n",
      "3         10.0     University of California, Berkeley             USA   \n",
      "4         13.0             University of Pennsylvania             USA   \n",
      "5         15.0               Johns Hopkins University             USA   \n",
      "6         19.0  University of California, Los Angeles             USA   \n",
      "7         34.0      University of Michigan, Ann Arbor             USA   \n",
      "8         39.0     University of Washington - Seattle             USA   \n",
      "9          1.0                     Harvard University             USA   \n",
      "10         2.0                    Stanford University             USA   \n",
      "11         4.0  Massachusetts Institute of Technology             USA   \n",
      "12         7.0     University of California, Berkeley             USA   \n",
      "13        12.0             University of Pennsylvania             USA   \n",
      "14        16.0  University of California, Los Angeles             USA   \n",
      "15        17.0               Johns Hopkins University             USA   \n",
      "16        31.0     University of Washington - Seattle             USA   \n",
      "17        32.0      University of Michigan, Ann Arbor             USA   \n",
      "18         1.0                     Harvard University             USA   \n",
      "19         2.0                    Stanford University             USA   \n",
      "20         3.0  Massachusetts Institute of Technology             USA   \n",
      "21         6.0                    Columbia University             USA   \n",
      "22         7.0     University of California, Berkeley             USA   \n",
      "23        15.0  University of California, Los Angeles             USA   \n",
      "24        19.0               Johns Hopkins University             USA   \n",
      "25        21.0      University of Michigan, Ann Arbor             USA   \n",
      "26        32.0     University of Washington - Seattle             USA   \n",
      "27         1.0                     Harvard University             USA   \n",
      "28         2.0                    Stanford University             USA   \n",
      "29         3.0  Massachusetts Institute of Technology             USA   \n",
      "30         5.0                   University of Oxford  United Kingdom   \n",
      "31         7.0     University of California, Berkeley             USA   \n",
      "32        15.0  University of California, Los Angeles             USA   \n",
      "33        16.0               Johns Hopkins University             USA   \n",
      "34        19.0      University of Michigan, Ann Arbor             USA   \n",
      "35        32.0                  University of Toronto          Canada   \n",
      "\n",
      "    national_rank  quality_of_education  alumni_employment  \\\n",
      "0             1.0                   7.0                9.0   \n",
      "1             2.0                   9.0               17.0   \n",
      "2             3.0                  17.0               11.0   \n",
      "3             8.0                  16.0               52.0   \n",
      "4            11.0                  31.0               16.0   \n",
      "5            12.0                  34.0               77.0   \n",
      "6            13.0                  62.0               59.0   \n",
      "7            24.0                  68.0               60.0   \n",
      "8            28.0                 101.0              101.0   \n",
      "9             1.0                   1.0                1.0   \n",
      "10            2.0                  11.0                2.0   \n",
      "11            3.0                   2.0               16.0   \n",
      "12            5.0                   6.0               28.0   \n",
      "13           10.0                  22.0                5.0   \n",
      "14           12.0                  38.0               35.0   \n",
      "15           13.0                  23.0               96.0   \n",
      "16           22.0                 101.0              101.0   \n",
      "17           23.0                  35.0               27.0   \n",
      "18            1.0                   1.0                1.0   \n",
      "19            2.0                  11.0                2.0   \n",
      "20            3.0                   3.0               11.0   \n",
      "21            4.0                  13.0                8.0   \n",
      "22            5.0                   4.0               22.0   \n",
      "23           12.0                  27.0               27.0   \n",
      "24           14.0                  24.0               75.0   \n",
      "25           16.0                  29.0               19.0   \n",
      "26           23.0                  89.0              107.0   \n",
      "27            1.0                   1.0                1.0   \n",
      "28            2.0                   9.0                2.0   \n",
      "29            3.0                   3.0               11.0   \n",
      "30            2.0                   7.0               13.0   \n",
      "31            5.0                   5.0               21.0   \n",
      "32           12.0                  28.0               27.0   \n",
      "33           13.0                  18.0               84.0   \n",
      "34           15.0                  24.0               17.0   \n",
      "35            1.0                  70.0               51.0   \n",
      "\n",
      "    quality_of_faculty  publications  influence  citations broad_impact  \\\n",
      "0                  1.0           1.0        1.0        1.0         None   \n",
      "1                  3.0          12.0        4.0        4.0         None   \n",
      "2                  5.0           4.0        2.0        2.0         None   \n",
      "3                  6.0           6.0        5.0        3.0         None   \n",
      "4                 24.0           9.0       10.0        8.0         None   \n",
      "5                 20.0          11.0        9.0        9.0         None   \n",
      "6                 23.0           3.0       11.0        6.0         None   \n",
      "7                101.0           2.0       17.0        7.0         None   \n",
      "8                 40.0           5.0        7.0        5.0         None   \n",
      "9                  1.0           1.0        1.0        1.0         None   \n",
      "10                 4.0           6.0        2.0        2.0         None   \n",
      "11                 2.0          16.0        3.0        3.0         None   \n",
      "12                 6.0           8.0        6.0        4.0         None   \n",
      "13                25.0          10.0       10.0        9.0         None   \n",
      "14                12.0           5.0       15.0        6.0         None   \n",
      "15                21.0           4.0        5.0        7.0         None   \n",
      "16                41.0           7.0        8.0        5.0         None   \n",
      "17               101.0           3.0       18.0        8.0         None   \n",
      "18                 1.0           1.0        1.0        1.0         None   \n",
      "19                 4.0           5.0        3.0        3.0         None   \n",
      "20                 2.0          15.0        2.0        2.0         None   \n",
      "21                 9.0          14.0       13.0        9.0         None   \n",
      "22                 6.0           7.0        4.0        3.0         None   \n",
      "23                12.0           6.0       14.0        7.0         None   \n",
      "24                18.0           4.0       10.0        6.0         None   \n",
      "25               131.0           3.0       20.0        5.0         None   \n",
      "26                46.0           9.0       11.0        8.0         None   \n",
      "27                 1.0           1.0        1.0        1.0         None   \n",
      "28                 4.0           5.0        3.0        3.0         None   \n",
      "29                 2.0          15.0        2.0        2.0         None   \n",
      "30                10.0           7.0       12.0        7.0         None   \n",
      "31                 6.0          10.0        4.0        4.0         None   \n",
      "32                13.0           6.0       14.0        8.0         None   \n",
      "33                16.0           4.0       11.0        5.0         None   \n",
      "34               140.0           3.0       20.0        6.0         None   \n",
      "35                32.0           2.0       17.0        9.0         None   \n",
      "\n",
      "    patents   score    year  \n",
      "0       5.0  100.00  2012.0  \n",
      "1       1.0   91.67  2012.0  \n",
      "2      15.0   89.50  2012.0  \n",
      "3      16.0   78.55  2012.0  \n",
      "4       9.0   73.64  2012.0  \n",
      "5       7.0   66.94  2012.0  \n",
      "6      13.0   64.05  2012.0  \n",
      "7       8.0   53.72  2012.0  \n",
      "8     101.0   52.25  2012.0  \n",
      "9       7.0  100.00  2013.0  \n",
      "10     11.0   93.94  2013.0  \n",
      "11      1.0   91.45  2013.0  \n",
      "12     19.0   85.07  2013.0  \n",
      "13     14.0   77.24  2013.0  \n",
      "14     12.0   67.84  2013.0  \n",
      "15      2.0   65.64  2013.0  \n",
      "16     51.0   55.79  2013.0  \n",
      "17      6.0   55.77  2013.0  \n",
      "18      2.0  100.00  2014.0  \n",
      "19      6.0   99.09  2014.0  \n",
      "20      1.0   98.69  2014.0  \n",
      "21      4.0   97.41  2014.0  \n",
      "22     28.0   92.84  2014.0  \n",
      "23     10.0   78.35  2014.0  \n",
      "24      3.0   71.17  2014.0  \n",
      "25     19.0   68.27  2014.0  \n",
      "26     54.0   60.28  2014.0  \n",
      "27      3.0  100.00  2015.0  \n",
      "28     10.0   98.66  2015.0  \n",
      "29      1.0   97.54  2015.0  \n",
      "30     15.0   96.46  2015.0  \n",
      "31     29.0   92.25  2015.0  \n",
      "32      9.0   76.91  2015.0  \n",
      "33      2.0   71.60  2015.0  \n",
      "34     12.0   68.36  2015.0  \n",
      "35    145.0   60.04  2015.0  \n"
     ]
    }
   ],
   "source": [
    "#20)List universities with a citations rank less than 10.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT * FROM WorldUniversity WHERE citations < 10; \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "4b0c8bb4-d17f-4e88-83fd-d39274e6a9aa",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank                         institution country  national_rank  \\\n",
      "0        11.0  California Institute of Technology     USA            9.0   \n",
      "\n",
      "   quality_of_education  alumni_employment  quality_of_faculty  publications  \\\n",
      "0                   5.0              101.0                 7.0          38.0   \n",
      "\n",
      "   influence  citations broad_impact  patents  score    year  \n",
      "0       24.0       25.0         None     17.0  77.59  2013.0  \n"
     ]
    }
   ],
   "source": [
    "#21)Retrieve the university with the highest alumni_employment in 2013.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT TOP 1 * FROM WorldUniversity WHERE year = 2013 ORDER BY alumni_employment DESC;\"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "c87d1f5f-4add-4c70-925b-3212583270b9",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank                                      institution country  \\\n",
      "0        18.0                    Weizmann Institute of Science  Israel   \n",
      "1        21.0                           Rockefeller University     USA   \n",
      "2        22.0                   Hebrew University of Jerusalem  Israel   \n",
      "3        29.0  University of Texas Southwestern Medical Center     USA   \n",
      "4        43.0                       Carnegie Mellon University     USA   \n",
      "\n",
      "   national_rank  quality_of_education  alumni_employment  quality_of_faculty  \\\n",
      "0            1.0                   4.0              101.0                22.0   \n",
      "1           15.0                   1.0              101.0                16.0   \n",
      "2            2.0                  24.0               93.0                13.0   \n",
      "3           21.0                  19.0              101.0                32.0   \n",
      "4           31.0                  30.0               81.0                26.0   \n",
      "\n",
      "   publications  influence  citations broad_impact  patents  score    year  \n",
      "0         101.0       67.0      101.0         None     29.0  65.09  2012.0  \n",
      "1         101.0       28.0       96.0         None    101.0  61.74  2012.0  \n",
      "2         101.0       91.0      101.0         None     28.0  60.76  2012.0  \n",
      "3         101.0       43.0       84.0         None    101.0  56.43  2012.0  \n",
      "4         101.0      101.0       61.0         None    101.0  51.60  2012.0  \n"
     ]
    }
   ],
   "source": [
    "#22)Find the top 5 universities with the highest publications in 2012.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT TOP 5 * FROM WorldUniversity WHERE year = 2012 ORDER BY publications DESC; \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "fe71a7ae-004b-448b-8194-c80bf265aeb8",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     year  university_count\n",
      "0  2015.0              1000\n",
      "1  2014.0              1000\n",
      "2  2013.0               100\n",
      "3  2012.0               100\n"
     ]
    }
   ],
   "source": [
    "#23)Count the number of universities in each year.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT year, COUNT(*) AS university_count FROM WorldUniversity GROUP BY year; \"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "56050a68-8df5-4717-8bc4-b8a86ccc2421",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   average_alumni_employment\n",
      "0                 257.514834\n"
     ]
    }
   ],
   "source": [
    "#24)Calculate the average alumni_employment score for universities in the USA.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT AVG(alumni_employment) AS average_alumni_employment FROM WorldUniversity WHERE country = 'USA'; \"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "3be8083c-d011-470a-aa43-0cf7e937d304",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Empty DataFrame\n",
      "Columns: [world_rank, institution, country, national_rank, quality_of_education, alumni_employment, quality_of_faculty, publications, influence, citations, broad_impact, patents, score, year]\n",
      "Index: []\n"
     ]
    }
   ],
   "source": [
    "#25)Retrieve universities with a broad_impact score greater than 70.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT * FROM WorldUniversity WHERE broad_impact > 70; \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "49be6184-0394-4cd0-b59f-0bbd55404698",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank                            institution country  national_rank  \\\n",
      "0       855.0        National Chung Cheng University  Taiwan           14.0   \n",
      "1       865.0       Nanjing University of Technology   China           50.0   \n",
      "2       904.0                    Jadavpur University   India           14.0   \n",
      "3       928.0                   Feng Chia University  Taiwan           18.0   \n",
      "4       947.0  Northwestern Polytechnical University   China           67.0   \n",
      "5       950.0          Chung Shan Medical University  Taiwan           19.0   \n",
      "6       960.0            Beijing Jiaotong University   China           69.0   \n",
      "7       975.0        China Pharmaceutical University   China           72.0   \n",
      "8       976.0             Tarbiat Modares University    Iran            7.0   \n",
      "9       979.0  University of Pau and Pays de l'Adour  France           49.0   \n",
      "\n",
      "   quality_of_education  alumni_employment  quality_of_faculty  publications  \\\n",
      "0                 355.0              478.0               210.0         760.0   \n",
      "1                 355.0              478.0               210.0         810.0   \n",
      "2                 355.0              478.0               210.0         871.0   \n",
      "3                 355.0              376.0               210.0         869.0   \n",
      "4                 355.0              417.0               210.0         628.0   \n",
      "5                 355.0              478.0               210.0         750.0   \n",
      "6                 355.0              478.0               210.0         971.0   \n",
      "7                 355.0              478.0               210.0         919.0   \n",
      "8                 355.0              478.0               210.0         811.0   \n",
      "9                 355.0              478.0               210.0         988.0   \n",
      "\n",
      "   influence  citations broad_impact  patents  score    year  \n",
      "0      987.0      800.0         None    737.0  44.44  2014.0  \n",
      "1      987.0      800.0         None    227.0  44.44  2014.0  \n",
      "2      987.0      493.0         None    737.0  44.39  2014.0  \n",
      "3      987.0      800.0         None    737.0  44.36  2014.0  \n",
      "4      987.0      800.0         None    737.0  44.33  2014.0  \n",
      "5      987.0      609.0         None    737.0  44.32  2014.0  \n",
      "6      987.0      800.0         None    280.0  44.31  2014.0  \n",
      "7      987.0      800.0         None    552.0  44.30  2014.0  \n",
      "8      987.0      800.0         None    737.0  44.29  2014.0  \n",
      "9      987.0      800.0         None    737.0  44.29  2014.0  \n"
     ]
    }
   ],
   "source": [
    "#26)List the top 10 universities with the highest influence in 2014.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT TOP 10 * FROM WorldUniversity WHERE year = 2014 ORDER BY influence DESC; \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "42761f96-fa07-47e2-9fea-b72324989cce",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank                            institution country  national_rank  \\\n",
      "0         2.0  Massachusetts Institute of Technology     USA            2.0   \n",
      "1         4.0  Massachusetts Institute of Technology     USA            3.0   \n",
      "2         3.0  Massachusetts Institute of Technology     USA            3.0   \n",
      "3         3.0  Massachusetts Institute of Technology     USA            3.0   \n",
      "\n",
      "   quality_of_education  alumni_employment  quality_of_faculty  publications  \\\n",
      "0                   9.0               17.0                 3.0          12.0   \n",
      "1                   2.0               16.0                 2.0          16.0   \n",
      "2                   3.0               11.0                 2.0          15.0   \n",
      "3                   3.0               11.0                 2.0          15.0   \n",
      "\n",
      "   influence  citations broad_impact  patents  score    year  \n",
      "0        4.0        4.0         None      1.0  91.67  2012.0  \n",
      "1        3.0        3.0         None      1.0  91.45  2013.0  \n",
      "2        2.0        2.0         None      1.0  98.69  2014.0  \n",
      "3        2.0        2.0         None      1.0  97.54  2015.0  \n"
     ]
    }
   ],
   "source": [
    "#27)Find universities with a patents rank equal to 1.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT * FROM WorldUniversity WHERE patents = 1; \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "4e2be908-ab96-4f4a-94b9-c445c7010fa3",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   university_count\n",
      "0                 0\n"
     ]
    }
   ],
   "source": [
    "#28)Count the number of universities with a broad_impact between 20 and 30.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT COUNT(*) AS university_count FROM WorldUniversity WHERE broad_impact BETWEEN 20 AND 30; \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "576ac2a4-f902-491f-8a33-ab4abebc22e7",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   average_quality_of_faculty\n",
      "0                      166.75\n"
     ]
    }
   ],
   "source": [
    "#29)Calculate the average quality_of_faculty score for universities in the United Kingdom.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT AVG(quality_of_faculty) AS average_quality_of_faculty FROM WorldUniversity WHERE country = 'United Kingdom';\"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "ac6e8514-0400-40d3-aeed-ffaab59d9a82",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    world_rank                              institution country  \\\n",
      "0          1.0                       Harvard University     USA   \n",
      "1          2.0    Massachusetts Institute of Technology     USA   \n",
      "2          3.0                      Stanford University     USA   \n",
      "3         24.0  University of California, San Francisco     USA   \n",
      "4          1.0                       Harvard University     USA   \n",
      "5          2.0                      Stanford University     USA   \n",
      "6          4.0    Massachusetts Institute of Technology     USA   \n",
      "7         22.0  University of California, San Francisco     USA   \n",
      "8          1.0                       Harvard University     USA   \n",
      "9          2.0                      Stanford University     USA   \n",
      "10         3.0    Massachusetts Institute of Technology     USA   \n",
      "11         7.0       University of California, Berkeley     USA   \n",
      "12         1.0                       Harvard University     USA   \n",
      "13         2.0                      Stanford University     USA   \n",
      "14         3.0    Massachusetts Institute of Technology     USA   \n",
      "15         7.0       University of California, Berkeley     USA   \n",
      "\n",
      "    national_rank  quality_of_education  alumni_employment  \\\n",
      "0             1.0                   7.0                9.0   \n",
      "1             2.0                   9.0               17.0   \n",
      "2             3.0                  17.0               11.0   \n",
      "3            17.0                 101.0              101.0   \n",
      "4             1.0                   1.0                1.0   \n",
      "5             2.0                  11.0                2.0   \n",
      "6             3.0                   2.0               16.0   \n",
      "7            16.0                 101.0              101.0   \n",
      "8             1.0                   1.0                1.0   \n",
      "9             2.0                  11.0                2.0   \n",
      "10            3.0                   3.0               11.0   \n",
      "11            5.0                   4.0               22.0   \n",
      "12            1.0                   1.0                1.0   \n",
      "13            2.0                   9.0                2.0   \n",
      "14            3.0                   3.0               11.0   \n",
      "15            5.0                   5.0               21.0   \n",
      "\n",
      "    quality_of_faculty  publications  influence  citations broad_impact  \\\n",
      "0                  1.0           1.0        1.0        1.0         None   \n",
      "1                  3.0          12.0        4.0        4.0         None   \n",
      "2                  5.0           4.0        2.0        2.0         None   \n",
      "3                 21.0          19.0        3.0       13.0         None   \n",
      "4                  1.0           1.0        1.0        1.0         None   \n",
      "5                  4.0           6.0        2.0        2.0         None   \n",
      "6                  2.0          16.0        3.0        3.0         None   \n",
      "7                 22.0          23.0        4.0       18.0         None   \n",
      "8                  1.0           1.0        1.0        1.0         None   \n",
      "9                  4.0           5.0        3.0        3.0         None   \n",
      "10                 2.0          15.0        2.0        2.0         None   \n",
      "11                 6.0           7.0        4.0        3.0         None   \n",
      "12                 1.0           1.0        1.0        1.0         None   \n",
      "13                 4.0           5.0        3.0        3.0         None   \n",
      "14                 2.0          15.0        2.0        2.0         None   \n",
      "15                 6.0          10.0        4.0        4.0         None   \n",
      "\n",
      "    patents   score    year  \n",
      "0       5.0  100.00  2012.0  \n",
      "1       1.0   91.67  2012.0  \n",
      "2      15.0   89.50  2012.0  \n",
      "3      33.0   59.70  2012.0  \n",
      "4       7.0  100.00  2013.0  \n",
      "5      11.0   93.94  2013.0  \n",
      "6       1.0   91.45  2013.0  \n",
      "7      63.0   59.38  2013.0  \n",
      "8       2.0  100.00  2014.0  \n",
      "9       6.0   99.09  2014.0  \n",
      "10      1.0   98.69  2014.0  \n",
      "11     28.0   92.84  2014.0  \n",
      "12      3.0  100.00  2015.0  \n",
      "13     10.0   98.66  2015.0  \n",
      "14      1.0   97.54  2015.0  \n",
      "15     29.0   92.25  2015.0  \n"
     ]
    }
   ],
   "source": [
    "#30)Find universities with an influence rank less than 5.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT * FROM WorldUniversity WHERE influence < 5; \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "a021ea99-3f7c-422b-be71-5684e2afbaaf",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    world_rank                            institution         country  \\\n",
      "0          1.0                     Harvard University             USA   \n",
      "1          2.0                    Stanford University             USA   \n",
      "2          3.0                   University of Oxford  United Kingdom   \n",
      "3          4.0  Massachusetts Institute of Technology             USA   \n",
      "4          5.0                University of Cambridge  United Kingdom   \n",
      "5          6.0                    Columbia University             USA   \n",
      "6          7.0     University of California, Berkeley             USA   \n",
      "7          8.0                   Princeton University             USA   \n",
      "8          9.0                  University of Chicago             USA   \n",
      "9         10.0                        Yale University             USA   \n",
      "10        11.0     California Institute of Technology             USA   \n",
      "11        12.0             University of Pennsylvania             USA   \n",
      "12        14.0                    University of Tokyo           Japan   \n",
      "\n",
      "    national_rank  quality_of_education  alumni_employment  \\\n",
      "0             1.0                   1.0                1.0   \n",
      "1             2.0                  11.0                2.0   \n",
      "2             1.0                   7.0               12.0   \n",
      "3             3.0                   2.0               16.0   \n",
      "4             2.0                   3.0               15.0   \n",
      "5             4.0                  13.0                8.0   \n",
      "6             5.0                   6.0               28.0   \n",
      "7             6.0                   4.0               14.0   \n",
      "8             7.0                   9.0               19.0   \n",
      "9             8.0                  10.0               25.0   \n",
      "10            9.0                   5.0              101.0   \n",
      "11           10.0                  22.0                5.0   \n",
      "12            1.0                  17.0                3.0   \n",
      "\n",
      "    quality_of_faculty  publications  influence  citations broad_impact  \\\n",
      "0                  1.0           1.0        1.0        1.0         None   \n",
      "1                  4.0           6.0        2.0        2.0         None   \n",
      "2                 10.0          11.0        7.0       13.0         None   \n",
      "3                  2.0          16.0        3.0        3.0         None   \n",
      "4                  5.0           9.0       11.0       10.0         None   \n",
      "5                  9.0          13.0        9.0       11.0         None   \n",
      "6                  6.0           8.0        6.0        4.0         None   \n",
      "7                  3.0          58.0       35.0       27.0         None   \n",
      "8                  8.0          37.0       21.0       30.0         None   \n",
      "9                 13.0          20.0       12.0       22.0         None   \n",
      "10                 7.0          38.0       24.0       25.0         None   \n",
      "11                25.0          10.0       10.0        9.0         None   \n",
      "12                32.0          14.0       23.0       29.0         None   \n",
      "\n",
      "    patents   score    year  \n",
      "0       7.0  100.00  2013.0  \n",
      "1      11.0   93.94  2013.0  \n",
      "2      15.0   92.54  2013.0  \n",
      "3       1.0   91.45  2013.0  \n",
      "4      39.0   90.24  2013.0  \n",
      "5      10.0   88.21  2013.0  \n",
      "6      19.0   85.07  2013.0  \n",
      "7     101.0   82.17  2013.0  \n",
      "8     101.0   79.16  2013.0  \n",
      "9      42.0   78.83  2013.0  \n",
      "10     17.0   77.59  2013.0  \n",
      "11     14.0   77.24  2013.0  \n",
      "12      5.0   76.23  2013.0  \n"
     ]
    }
   ],
   "source": [
    "#31)Retrieve universities with a score greater than 75 and a national_rank less than or equal to 10 in 2013.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\" SELECT * FROM WorldUniversity WHERE score > 75 AND national_rank <= 10 AND year = 2013; \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "91df9882-8a5a-4e7a-8460-2a2e8650693e",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank                         institution country  national_rank  \\\n",
      "0        35.0  Ã‰cole normale supÃ©rieure - Paris  France            1.0   \n",
      "1        48.0   Lomonosov Moscow State University  Russia            1.0   \n",
      "2        73.0                Karolinska Institute  Sweden            1.0   \n",
      "3       116.0                     Lund University  Sweden            3.0   \n",
      "4       124.0                  Uppsala University  Sweden            4.0   \n",
      "\n",
      "   quality_of_education  alumni_employment  quality_of_faculty  publications  \\\n",
      "0                   8.0              478.0                59.0         362.0   \n",
      "1                  14.0              210.0                50.0         264.0   \n",
      "2                 126.0              478.0                37.0          55.0   \n",
      "3                 132.0              478.0               165.0          81.0   \n",
      "4                  62.0              336.0               111.0          94.0   \n",
      "\n",
      "   influence  citations broad_impact  patents  score    year  \n",
      "0      156.0      493.0         None    737.0  59.72  2014.0  \n",
      "1      247.0      310.0         None    737.0  56.42  2014.0  \n",
      "2       61.0       38.0         None    737.0  53.64  2014.0  \n",
      "3      133.0       48.0         None    737.0  50.34  2014.0  \n",
      "4       77.0       99.0         None    737.0  49.96  2014.0  \n"
     ]
    }
   ],
   "source": [
    "#32)List the top 5 universities with the highest patents in 2014.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT TOP 5 * FROM WorldUniversity WHERE year = 2014 ORDER BY patents DESC;\"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "eb124e68-d97f-4f42-836a-e81ec6dfcaa3",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   university_count\n",
      "0              2049\n"
     ]
    }
   ],
   "source": [
    "#33)Count the number of universities with an alumni_employment score greater than 50.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT COUNT(*) AS university_count FROM WorldUniversity WHERE alumni_employment > 50;\"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "5bea8c60-a47f-4705-944d-592fe72c70ea",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   average_quality_of_education\n",
      "0                    291.930818\n"
     ]
    }
   ],
   "source": [
    "#34)Calculate the average quality_of_education score for universities in Japan.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT AVG(quality_of_education) AS average_quality_of_education FROM WorldUniversity WHERE country = 'Japan'; \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "c2ec2378-4361-43b8-bb78-07109839fe4e",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank         institution country  national_rank  \\\n",
      "0         1.0  Harvard University     USA            1.0   \n",
      "\n",
      "   quality_of_education  alumni_employment  quality_of_faculty  publications  \\\n",
      "0                   1.0                1.0                 1.0           1.0   \n",
      "\n",
      "   influence  citations broad_impact  patents  score    year  \n",
      "0        1.0        1.0         None      2.0  100.0  2014.0  \n"
     ]
    }
   ],
   "source": [
    "#35)Find universities with a quality_of_education rank equal to 1 in 2014.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\" SELECT * FROM WorldUniversity WHERE quality_of_education = 1 AND year = 2014; \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "fe474873-9d8b-4f4d-8411-c7277975bc90",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank          institution country  national_rank  \\\n",
      "0         1.0   Harvard University     USA            1.0   \n",
      "1         2.0  Stanford University     USA            2.0   \n",
      "2         1.0   Harvard University     USA            1.0   \n",
      "3         2.0  Stanford University     USA            2.0   \n",
      "4        13.0  University of Tokyo   Japan            1.0   \n",
      "5         1.0   Harvard University     USA            1.0   \n",
      "6         2.0  Stanford University     USA            2.0   \n",
      "\n",
      "   quality_of_education  alumni_employment  quality_of_faculty  publications  \\\n",
      "0                   1.0                1.0                 1.0           1.0   \n",
      "1                  11.0                2.0                 4.0           6.0   \n",
      "2                   1.0                1.0                 1.0           1.0   \n",
      "3                  11.0                2.0                 4.0           5.0   \n",
      "4                  17.0                3.0                33.0          12.0   \n",
      "5                   1.0                1.0                 1.0           1.0   \n",
      "6                   9.0                2.0                 4.0           5.0   \n",
      "\n",
      "   influence  citations broad_impact  patents   score    year  \n",
      "0        1.0        1.0         None      7.0  100.00  2013.0  \n",
      "1        2.0        2.0         None     11.0   93.94  2013.0  \n",
      "2        1.0        1.0         None      2.0  100.00  2014.0  \n",
      "3        3.0        3.0         None      6.0   99.09  2014.0  \n",
      "4       16.0       28.0         None     14.0   80.64  2014.0  \n",
      "5        1.0        1.0         None      3.0  100.00  2015.0  \n",
      "6        3.0        3.0         None     10.0   98.66  2015.0  \n"
     ]
    }
   ],
   "source": [
    "#36)Retrieve universities with a score greater than 80 and an alumni_employment rank less than 5.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\" SELECT * FROM WorldUniversity WHERE score > 80 AND alumni_employment < 5; \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "a628b4ec-2506-4283-9301-dc2b3e19b749",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank                                      institution      country  \\\n",
      "0        21.0                   Hebrew University of Jerusalem       Israel   \n",
      "1        33.0                    Weizmann Institute of Science       Israel   \n",
      "2        46.0  University of Texas Southwestern Medical Center          USA   \n",
      "3        49.0                           Rockefeller University          USA   \n",
      "4        51.0                       Carnegie Mellon University          USA   \n",
      "5        56.0                             University of Geneva  Switzerland   \n",
      "6        64.0               Ã‰cole normale supÃ©rieure - Paris       France   \n",
      "7        66.0      Technion â€“ Israel Institute of Technology       Israel   \n",
      "8        70.0                                  Keio University        Japan   \n",
      "9        73.0                         Arizona State University          USA   \n",
      "\n",
      "   national_rank  quality_of_education  alumni_employment  quality_of_faculty  \\\n",
      "0            1.0                  15.0              101.0                15.0   \n",
      "1            2.0                  18.0              101.0                23.0   \n",
      "2           32.0                  46.0              101.0                29.0   \n",
      "3           33.0                  55.0              101.0                17.0   \n",
      "4           35.0                  30.0              101.0                27.0   \n",
      "5            2.0                  52.0              101.0                30.0   \n",
      "6            3.0                   8.0              101.0                57.0   \n",
      "7            4.0                  50.0              101.0                36.0   \n",
      "8            4.0                 101.0                6.0               101.0   \n",
      "9           46.0                 101.0              101.0                73.0   \n",
      "\n",
      "   publications  influence  citations broad_impact  patents  score    year  \n",
      "0         101.0       96.0      101.0         None     24.0  59.98  2013.0  \n",
      "1         101.0       85.0      101.0         None     48.0  54.34  2013.0  \n",
      "2         101.0       28.0       82.0         None    101.0  50.79  2013.0  \n",
      "3         101.0       34.0      101.0         None    101.0  50.43  2013.0  \n",
      "4         101.0      101.0       74.0         None    101.0  49.56  2013.0  \n",
      "5         101.0       78.0      101.0         None    101.0  48.83  2013.0  \n",
      "6         101.0      101.0      101.0         None    101.0  47.70  2013.0  \n",
      "7         101.0      101.0      101.0         None     73.0  47.45  2013.0  \n",
      "8         101.0      101.0      101.0         None     73.0  47.05  2013.0  \n",
      "9         101.0      101.0       89.0         None     20.0  46.72  2013.0  \n"
     ]
    }
   ],
   "source": [
    "#37)List the top 10 universities with the highest publications in 2013.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\" SELECT TOP 10 * FROM WorldUniversity WHERE year = 2013 ORDER BY publications DESC; \"), conn)\n",
    "    print(df)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8a4e1361-f6de-4188-b15a-52e3c9b51e3d",
   "metadata": {},
   "outputs": [],
   "source": [
    "#38)Count the number of universities with a broad_impact score between 40 and 50.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\" \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "ffb17d20-a258-4717-9523-ffdf8d1b4e40",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   average_score\n",
      "0      45.825517\n"
     ]
    }
   ],
   "source": [
    "#39)Calculate the average score for universities in Australia.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT AVG(score) AS average_score FROM WorldUniversity WHERE country = 'Australia';  \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "52718aba-5999-42ec-991c-75de02cf9a06",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "    world_rank                                        institution  \\\n",
      "0         42.0                  Purdue University, West Lafayette   \n",
      "1         43.0                         Carnegie Mellon University   \n",
      "2         51.0        Technion â€“ Israel Institute of Technology   \n",
      "3         54.0                 Ã‰cole normale supÃ©rieure - Paris   \n",
      "4         56.0                                Tel Aviv University   \n",
      "5         57.0                                    Rice University   \n",
      "6         58.0                                  Dartmouth College   \n",
      "7         61.0                               Ã‰cole Polytechnique   \n",
      "8         73.0              Texas A&M University, College Station   \n",
      "9         74.0                                  Nagoya University   \n",
      "10        75.0                          Seoul National University   \n",
      "11        69.0  Swiss Federal Institute of Technology in Lausanne   \n",
      "12        77.0                        Sapienza University of Rome   \n",
      "13        80.0                           Arizona State University   \n",
      "14        87.0                    Georgia Institute of Technology   \n",
      "15        91.0                                 University of Oslo   \n",
      "16        95.0                                   Williams College   \n",
      "17        97.0                           University of Nottingham   \n",
      "18        99.0                                 Utrecht University   \n",
      "19       100.0                                    Mines ParisTech   \n",
      "\n",
      "           country  national_rank  quality_of_education  alumni_employment  \\\n",
      "0              USA           30.0                  95.0               70.0   \n",
      "1              USA           31.0                  30.0               81.0   \n",
      "2           Israel            3.0                  45.0               89.0   \n",
      "3           France            2.0                   3.0               61.0   \n",
      "4           Israel            4.0                  97.0              101.0   \n",
      "5              USA           41.0                  28.0               53.0   \n",
      "6              USA           42.0                  27.0               13.0   \n",
      "7           France            3.0                  47.0                3.0   \n",
      "8              USA           50.0                 101.0              101.0   \n",
      "9            Japan            4.0                  56.0              101.0   \n",
      "10     South Korea            1.0                 101.0               34.0   \n",
      "11     Switzerland            3.0                 101.0               30.0   \n",
      "12           Italy            1.0                 101.0              101.0   \n",
      "13             USA           52.0                 101.0              101.0   \n",
      "14             USA           56.0                 101.0               67.0   \n",
      "15          Norway            1.0                 101.0              101.0   \n",
      "16             USA           57.0                  18.0               15.0   \n",
      "17  United Kingdom            6.0                 101.0              101.0   \n",
      "18     Netherlands            2.0                 100.0              101.0   \n",
      "19          France            5.0                  44.0                4.0   \n",
      "\n",
      "    quality_of_faculty  publications  influence  citations broad_impact  \\\n",
      "0                 49.0          61.0      101.0       58.0         None   \n",
      "1                 26.0         101.0      101.0       61.0         None   \n",
      "2                 36.0         101.0      101.0      101.0         None   \n",
      "3                 77.0         101.0      101.0      101.0         None   \n",
      "4                 51.0          72.0      101.0      101.0         None   \n",
      "5                 94.0         101.0      101.0       53.0         None   \n",
      "6                101.0         101.0      101.0      101.0         None   \n",
      "7                101.0         101.0      101.0      101.0         None   \n",
      "8                 46.0          58.0      101.0       80.0         None   \n",
      "9                 69.0         101.0      101.0      101.0         None   \n",
      "10               101.0          44.0      101.0       69.0         None   \n",
      "11                82.0         101.0      101.0      101.0         None   \n",
      "12                30.0          70.0      101.0      101.0         None   \n",
      "13                70.0         101.0      101.0       77.0         None   \n",
      "14               101.0          79.0      101.0       46.0         None   \n",
      "15                39.0         101.0      101.0      101.0         None   \n",
      "16               101.0         101.0      101.0      101.0         None   \n",
      "17                87.0         101.0      101.0      101.0         None   \n",
      "18               101.0          65.0      101.0       60.0         None   \n",
      "19               101.0         101.0      101.0      101.0         None   \n",
      "\n",
      "    patents  score    year  \n",
      "0      19.0  51.66  2012.0  \n",
      "1     101.0  51.60  2012.0  \n",
      "2      51.0  50.01  2012.0  \n",
      "3     101.0  49.10  2012.0  \n",
      "4      35.0  48.76  2012.0  \n",
      "5     101.0  48.76  2012.0  \n",
      "6      92.0  48.50  2012.0  \n",
      "7     101.0  48.33  2012.0  \n",
      "8     101.0  47.31  2012.0  \n",
      "9      46.0  46.89  2012.0  \n",
      "10      4.0  46.74  2012.0  \n",
      "11     74.0  47.68  2012.0  \n",
      "12    101.0  46.34  2012.0  \n",
      "13     49.0  45.70  2012.0  \n",
      "14     40.0  44.71  2012.0  \n",
      "15    101.0  44.26  2012.0  \n",
      "16    101.0  43.89  2012.0  \n",
      "17     92.0  43.79  2012.0  \n",
      "18    101.0  43.47  2012.0  \n",
      "19    101.0  43.36  2012.0  \n"
     ]
    }
   ],
   "source": [
    "#40)Find universities with an influence rank equal to 1 in 2012.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"WITH MaxInfluence AS ( SELECT MAX(influence) AS max_influence FROM WorldUniversity WHERE year = 2012) SELECT * FROM WorldUniversity WHERE year = 2012 AND influence = (SELECT max_influence FROM MaxInfluence); \"), conn)\n",
    "    print(df)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "b20d5b0f-8c54-4da9-bac4-e6eee7f8c8bf",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      world_rank                     institution         country  \\\n",
      "0          673.0            University of Girona           Spain   \n",
      "1          674.0                Keele University  United Kingdom   \n",
      "2          675.0          University of Poitiers          France   \n",
      "3          676.0          University of Insubria           Italy   \n",
      "4          677.0  Wuhan University of Technology           China   \n",
      "...          ...                             ...             ...   \n",
      "2135       668.0      University of Maine, Orono             USA   \n",
      "2136       669.0   Graz University of Technology         Austria   \n",
      "2137       670.0                 Gifu University           Japan   \n",
      "2138       671.0       University of JyvÃ¤skylÃ¤         Finland   \n",
      "2139       672.0          University of Paris 13          France   \n",
      "\n",
      "      national_rank  quality_of_education  alumni_employment  \\\n",
      "0              21.0                 367.0              567.0   \n",
      "1              49.0                 367.0              567.0   \n",
      "2              30.0                 255.0              567.0   \n",
      "3              36.0                 367.0              567.0   \n",
      "4              38.0                 367.0              499.0   \n",
      "...             ...                   ...                ...   \n",
      "2135          194.0                 345.0              567.0   \n",
      "2136            8.0                 367.0              567.0   \n",
      "2137           43.0                 367.0              567.0   \n",
      "2138            8.0                 367.0              525.0   \n",
      "2139           29.0                 367.0              567.0   \n",
      "\n",
      "      quality_of_faculty  publications  influence  citations broad_impact  \\\n",
      "0                  218.0         662.0      843.0      645.0         None   \n",
      "1                  218.0         659.0      533.0      321.0         None   \n",
      "2                  148.0         636.0      470.0      645.0         None   \n",
      "3                  218.0         705.0      564.0      645.0         None   \n",
      "4                  218.0         738.0      931.0      428.0         None   \n",
      "...                  ...           ...        ...        ...          ...   \n",
      "2135               218.0         788.0      427.0      368.0         None   \n",
      "2136               218.0         677.0      715.0      368.0         None   \n",
      "2137               218.0         701.0      658.0      645.0         None   \n",
      "2138               218.0         456.0      443.0      812.0         None   \n",
      "2139               218.0         669.0      744.0      645.0         None   \n",
      "\n",
      "      patents  score    year  \n",
      "0       756.0  44.40  2015.0  \n",
      "1       853.0  44.40  2015.0  \n",
      "2       754.0  44.39  2015.0  \n",
      "3       871.0  44.39  2015.0  \n",
      "4       763.0  44.39  2015.0  \n",
      "...       ...    ...     ...  \n",
      "2135    346.0  44.40  2015.0  \n",
      "2136    404.0  44.40  2015.0  \n",
      "2137    403.0  44.40  2015.0  \n",
      "2138    805.0  44.40  2015.0  \n",
      "2139    700.0  44.40  2015.0  \n",
      "\n",
      "[2140 rows x 14 columns]\n"
     ]
    }
   ],
   "source": [
    "#41) Retrieve universities with a quality_of_faculty score greater than 15.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\" SELECT * FROM WorldUniversity WHERE quality_of_faculty > 15; \"), conn)\n",
    "    print(df)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "759c1815-a7eb-41ce-a523-9387b425b537",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank                              institution country  national_rank  \\\n",
      "0        20.0      University of California, San Diego     USA           15.0   \n",
      "1        27.0  University of California, San Francisco     USA           20.0   \n",
      "2        35.0       Ã‰cole normale supÃ©rieure - Paris  France            1.0   \n",
      "3        37.0                   Rockefeller University     USA           25.0   \n",
      "4        38.0            Weizmann Institute of Science  Israel            2.0   \n",
      "\n",
      "   quality_of_education  alumni_employment  quality_of_faculty  publications  \\\n",
      "0                  32.0              478.0                20.0          16.0   \n",
      "1                 355.0              478.0                23.0          24.0   \n",
      "2                   8.0              478.0                59.0         362.0   \n",
      "3                  72.0              478.0                14.0         347.0   \n",
      "4                  18.0              478.0                22.0         233.0   \n",
      "\n",
      "   influence  citations broad_impact  patents  score    year  \n",
      "0        5.0       19.0         None     13.0  68.36  2014.0  \n",
      "1        8.0       17.0         None     57.0  63.36  2014.0  \n",
      "2      156.0      493.0         None    737.0  59.72  2014.0  \n",
      "3       26.0      107.0         None    227.0  59.49  2014.0  \n",
      "4       63.0      250.0         None     51.0  59.17  2014.0  \n"
     ]
    }
   ],
   "source": [
    "#42) List the top 5 universities with the highest alumni_employment in 2014.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT TOP 5 * FROM WorldUniversity WHERE year = 2014 ORDER BY alumni_employment DESC; \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "349428ea-dc47-48f5-b625-2b7824eda601",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   university_count\n",
      "0                62\n"
     ]
    }
   ],
   "source": [
    "#43) Count the number of universities with a national_rank less than 20 in 2013.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT COUNT(*) AS university_count FROM WorldUniversity WHERE national_rank < 20 AND year = 2013;\"), conn)\n",
    "    print(df) \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "7f7c1cfe-3ee9-4ab9-b33c-3b304ac585ec",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   average_citations_score\n",
      "0                364.73913\n"
     ]
    }
   ],
   "source": [
    "#44) Calculate the average citations score for universities in Germany.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT AVG(citations) AS average_citations_score FROM WorldUniversity WHERE country = 'Germany'; \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "91994049-5db9-417f-ae7d-1a1da6f6e0cc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank                               institution         country  \\\n",
      "0       830.0  University of Wales, Trinity Saint David  United Kingdom   \n",
      "1       820.0  National University of Ireland, Maynooth         Ireland   \n",
      "\n",
      "   national_rank  quality_of_education  alumni_employment  quality_of_faculty  \\\n",
      "0           62.0                 367.0              567.0               218.0   \n",
      "1            7.0                 215.0              478.0               210.0   \n",
      "\n",
      "   publications  influence  citations broad_impact  patents  score    year  \n",
      "0        1000.0      927.0      645.0         None    871.0  44.20  2015.0  \n",
      "1        1000.0      716.0      800.0         None    552.0  44.49  2014.0  \n"
     ]
    }
   ],
   "source": [
    "#45) Find universities with a publications rank equal to 1.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"WITH MaxPublications AS (SELECT MAX(publications) AS max_publications FROM WorldUniversity) SELECT * FROM WorldUniversity WHERE publications = (SELECT max_publications FROM MaxPublications); \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "231c832d-417a-410c-a181-8ea5d2c3a15e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Empty DataFrame\n",
      "Columns: [world_rank, institution, country, national_rank, quality_of_education, alumni_employment, quality_of_faculty, publications, influence, citations, broad_impact, patents, score, year]\n",
      "Index: []\n"
     ]
    }
   ],
   "source": [
    "#46) Retrieve universities with a broad_impact score greater than 60 and a national_rank less than or equal to 5.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT * FROM WorldUniversity WHERE broad_impact > 60 AND national_rank <= 5; \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "cc5c3f2e-d239-429f-8768-7247bd06e63a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank                                  institution country  \\\n",
      "0        24.0      University of California, San Francisco     USA   \n",
      "1        30.0                University of Texas at Austin     USA   \n",
      "2        33.0                      Northwestern University     USA   \n",
      "3        35.0                        University of Toronto  Canada   \n",
      "4        36.0  University of North Carolina at Chapel Hill     USA   \n",
      "5        39.0           University of Washington - Seattle     USA   \n",
      "6        40.0      University of California, Santa Barbara     USA   \n",
      "7        44.0            University of Southern California     USA   \n",
      "8        47.0             University of California, Irvine     USA   \n",
      "9        49.0         University of Minnesota, Twin Cities     USA   \n",
      "\n",
      "   national_rank  quality_of_education  alumni_employment  quality_of_faculty  \\\n",
      "0           17.0                 101.0              101.0                21.0   \n",
      "1           22.0                 101.0               78.0                27.0   \n",
      "2           23.0                 101.0               32.0               101.0   \n",
      "3            1.0                 101.0              101.0                34.0   \n",
      "4           25.0                 101.0               86.0                56.0   \n",
      "5           28.0                 101.0              101.0                40.0   \n",
      "6           29.0                 101.0              101.0                28.0   \n",
      "7           32.0                 101.0              101.0                63.0   \n",
      "8           35.0                 101.0              101.0                38.0   \n",
      "9           36.0                 101.0              101.0                85.0   \n",
      "\n",
      "   publications  influence  citations broad_impact  patents  score    year  \n",
      "0          19.0        3.0       13.0         None     33.0  59.70  2012.0  \n",
      "1          41.0       47.0       40.0         None     57.0  56.18  2012.0  \n",
      "2          24.0       25.0       20.0         None     35.0  54.40  2012.0  \n",
      "3           7.0       14.0       18.0         None    101.0  53.43  2012.0  \n",
      "4          31.0       29.0       31.0         None     29.0  53.09  2012.0  \n",
      "5           5.0        7.0        5.0         None    101.0  52.25  2012.0  \n",
      "6          68.0       72.0       36.0         None    101.0  52.15  2012.0  \n",
      "7          46.0       48.0       32.0         None     23.0  51.38  2012.0  \n",
      "8          59.0       57.0       52.0         None     65.0  50.64  2012.0  \n",
      "9          18.0       31.0       17.0         None     84.0  50.30  2012.0  \n"
     ]
    }
   ],
   "source": [
    "#47) List the top 10 universities with the highest quality_of_education in 2012.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT TOP 10 * FROM WorldUniversity WHERE year = 2012 ORDER BY quality_of_education DESC;\"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "e7d48372-c36c-454c-bd74-3d22511d6ee7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   university_count\n",
      "0                23\n"
     ]
    }
   ],
   "source": [
    "#48) Count the number of universities with a score greater than 90.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT COUNT(*) AS university_count FROM WorldUniversity WHERE score > 90; \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "bf2355c0-9c2f-46fd-a2d2-b9adb7192ded",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   average_influence\n",
      "0         347.791667\n"
     ]
    }
   ],
   "source": [
    "#49) Calculate the average influence score for universities in the United Kingdom.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT AVG(influence) AS average_influence FROM WorldUniversity WHERE country = 'United Kingdom'; \"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "6c37d47d-2216-4b57-99a9-0f67b7cd7507",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   world_rank                            institution         country  \\\n",
      "0         1.0                     Harvard University             USA   \n",
      "1         3.0  Massachusetts Institute of Technology             USA   \n",
      "2         4.0                University of Cambridge  United Kingdom   \n",
      "3         7.0     University of California, Berkeley             USA   \n",
      "4         9.0                   Princeton University             USA   \n",
      "\n",
      "   national_rank  quality_of_education  alumni_employment  quality_of_faculty  \\\n",
      "0            1.0                   1.0                1.0                 1.0   \n",
      "1            3.0                   3.0               11.0                 2.0   \n",
      "2            1.0                   2.0               10.0                 5.0   \n",
      "3            5.0                   4.0               22.0                 6.0   \n",
      "4            7.0                   5.0               16.0                 3.0   \n",
      "\n",
      "   publications  influence  citations broad_impact  patents   score    year  \n",
      "0           1.0        1.0        1.0         None      2.0  100.00  2014.0  \n",
      "1          15.0        2.0        2.0         None      1.0   98.69  2014.0  \n",
      "2          10.0        9.0       12.0         None     48.0   97.64  2014.0  \n",
      "3           7.0        4.0        3.0         None     28.0   92.84  2014.0  \n",
      "4          70.0       25.0       19.0         None    204.0   88.56  2014.0  \n"
     ]
    }
   ],
   "source": [
    "#50) Find universities with a quality_of_education rank less than or equal to 5 in 2014.\n",
    "with engine.begin() as conn:\n",
    "    df = pd.read_sql_query(sa.text(\"SELECT * FROM WorldUniversity WHERE quality_of_education <= 5 AND year = 2014;\"), conn)\n",
    "    print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "79f3618d-3e34-432a-a86e-1f9b22b87dd3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The total number of records in the dataset is: 1\n"
     ]
    }
   ],
   "source": [
    "#TASK 5 :-\n",
    "#Questions Using Python \n",
    "#1) What is the total number of records in the dataset?\n",
    "total_records = len(df)\n",
    "\n",
    "print(f'The total number of records in the dataset is: {total_records}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "6e150f4e-24b6-4166-9cc8-391dc6631c84",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The number of columns in the dataset is: 1\n"
     ]
    }
   ],
   "source": [
    "#2) How many columns are there in the dataset?\n",
    "num_columns = df.shape[1]\n",
    "\n",
    "print(f'The number of columns in the dataset is: {num_columns}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "0c668bb7-7d64-4948-b7fc-4e069f17a842",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "int64\n"
     ]
    }
   ],
   "source": [
    "#3) What is the datatype of the \"world_rank\" column?\n",
    "\n",
    "world_rank_datatype = df['world_rank'].dtype\n",
    "\n",
    "print(world_rank_datatype)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "d1b735e4-5e2c-4cdf-811b-3f9fad6b667d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The country represented the most in the dataset is: USA\n"
     ]
    }
   ],
   "source": [
    "#4) Which country is represented the most in the dataset?\n",
    "\n",
    "most_represented_country = df['country'].value_counts().idxmax()\n",
    "\n",
    "print(f'The country represented the most in the dataset is: {most_represented_country}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "802e7e54-540a-4b81-acb1-f0f46c132fd7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The average \"quality_of_education\" across all institutions is: 275.10045454545457\n"
     ]
    }
   ],
   "source": [
    "#5) What is the average \"quality_of_education\" across all institutions?\n",
    "average_quality_of_education = df['quality_of_education'].mean()\n",
    "\n",
    "print(f'The average \"quality_of_education\" across all institutions is: {average_quality_of_education}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "70d75b18-ee7f-407a-8a15-fd2182208b34",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The institution with the highest \"alumni_employment\" value is: University of California, San Diego\n"
     ]
    }
   ],
   "source": [
    "#6) Find the institution with the highest \"alumni_employment\" value.\n",
    "\n",
    "highest_alumni_employment_institution = df.loc[df['alumni_employment'].idxmax()]['institution']\n",
    "\n",
    "print(f'The institution with the highest \"alumni_employment\" value is: {highest_alumni_employment_institution}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "9c4182e8-ebd2-4431-8f4b-43a492fa1ce6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The dataset ends in the year: 2015\n"
     ]
    }
   ],
   "source": [
    "#7) In which year does the dataset end?\n",
    "\n",
    "last_year = df['year'].max()\n",
    "\n",
    "print(f'The dataset ends in the year: {last_year}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "3fb79849-6b6c-411c-8452-489170da5097",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The number of unique countries in the dataset is: 59\n"
     ]
    }
   ],
   "source": [
    "#8) How many unique countries are present in the dataset?\n",
    "unique_countries_count = df['country'].nunique()\n",
    "\n",
    "print(f'The number of unique countries in the dataset is: {unique_countries_count}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "a63d8381-9928-4006-b6f0-b99ffeaf004c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The institution with the highest \"score\" in the year 2012 is: Harvard University\n"
     ]
    }
   ],
   "source": [
    "#9) Which institution has the highest \"score\" in the year 2012?\n",
    "highest_score_institution_2012 = df[df['year'] == 2012].loc[df['score'].idxmax()]['institution']\n",
    "\n",
    "print(f'The institution with the highest \"score\" in the year 2012 is: {highest_score_institution_2012}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "72290b06-7858-4918-9d15-60f0eb519a39",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The national rank of Harvard University in the year 2012 is: 1\n"
     ]
    }
   ],
   "source": [
    "#10)What is the national rank of Harvard University in the year 2012?\n",
    "\n",
    "harvard_rank_2012 = df[(df['institution'] == 'Harvard University') & (df['year'] == 2012)]['national_rank'].values[0]\n",
    "\n",
    "print(f'The national rank of Harvard University in the year 2012 is: {harvard_rank_2012}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "e38b22a8-4e49-4c4c-9610-770cc2180ebd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The average \"publications\" value for institutions in the United Kingdom is: 395.9513888888889\n"
     ]
    }
   ],
   "source": [
    "#11)Find the average \"publications\" value for institutions in the United Kingdom.\n",
    "uk_average_publications = df[df['country'] == 'United Kingdom']['publications'].mean()\n",
    "\n",
    "print(f'The average \"publications\" value for institutions in the United Kingdom is: {uk_average_publications}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "a5db4a2e-46f0-46ce-b779-8b52c788486e",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The institution with the highest \"influence\" in the year 2013 is: University of Paris-Sud\n"
     ]
    }
   ],
   "source": [
    "#12)Identify the institution with the highest \"influence\" in the year 2013.\n",
    "\n",
    "df_2013 = df[df['year'] == 2013]\n",
    "\n",
    "# Identify the institution with the highest \"influence\" in 2013\n",
    "highest_influence_institution_2013 = df_2013.loc[df_2013['influence'].idxmax()]['institution']\n",
    "\n",
    "print(f'The institution with the highest \"influence\" in the year 2013 is: {highest_influence_institution_2013}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "b1a4e562-806d-4989-9974-cde44c9dbf88",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The minimum \"broad_impact\" value in the dataset is: 1.0\n"
     ]
    }
   ],
   "source": [
    "#13)What is the minimum \"broad_impact\" value in the dataset?\n",
    "min_broad_impact = df['broad_impact'].min()\n",
    "\n",
    "print(f'The minimum \"broad_impact\" value in the dataset is: {min_broad_impact}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "8b140c1f-f6aa-4f49-9d02-d9505194b760",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The number of institutions from Japan in the year 2012 is: 5\n"
     ]
    }
   ],
   "source": [
    "#14)How many institutions are from Japan in the year 2012?\n",
    "japan_institutions_2012_count = df[(df['country'] == 'Japan') & (df['year'] == 2012)].shape[0]\n",
    "\n",
    "print(f'The number of institutions from Japan in the year 2012 is: {japan_institutions_2012_count}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "7c5fde52-b4d3-46df-a6e1-8cb3ad160bea",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The average \"patents\" value for institutions in the USA in the year 2013 is: 56.75438596491228\n"
     ]
    }
   ],
   "source": [
    "#15)What is the average \"patents\" value for institutions in the USA in the year 2013?\n",
    "\n",
    "usa_average_patents_2013 = df[(df['country'] == 'USA') & (df['year'] == 2013)]['patents'].mean()\n",
    "\n",
    "print(f'The average \"patents\" value for institutions in the USA in the year 2013 is: {usa_average_patents_2013}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "b7f05f58-f428-41f4-911f-02a64a0686b8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The top 5 institutions with the highest \"citations\" in the year 2015 are:\n",
      "                                     institution  citations\n",
      "1303                             Mines ParisTech        812\n",
      "1425              National Cheng Kung University        812\n",
      "1449  Moscow Institute of Physics and Technology        812\n",
      "1540        Indian Institute of Technology Delhi        812\n",
      "1550                         Wesleyan University        812\n"
     ]
    }
   ],
   "source": [
    "#16)Find the top 5 institutions with the highest \"citations\" in the year 2015.\n",
    "\n",
    "top5_citations_2015 = df[df['year'] == 2015].nlargest(5, 'citations')[['institution', 'citations']]\n",
    "\n",
    "print(f'The top 5 institutions with the highest \"citations\" in the year 2015 are:\\n{top5_citations_2015}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "69e05a2d-47d1-4c74-a396-c4e32be5ee48",
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'international_students'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3653\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3652\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m-> 3653\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcasted_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3654\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\_libs\\index.pyx:147\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\_libs\\index.pyx:176\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:7080\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:7088\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'international_students'",
      "\nThe above exception was the direct cause of the following exception:\n",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[43], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m#17)What is the median \"international_students\" percentage across all institutions?\u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m median_international_students \u001b[38;5;241m=\u001b[39m \u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43minternational_students\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[38;5;241m.\u001b[39mstr\u001b[38;5;241m.\u001b[39mrstrip(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m%\u001b[39m\u001b[38;5;124m'\u001b[39m)\u001b[38;5;241m.\u001b[39mastype(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mfloat\u001b[39m\u001b[38;5;124m'\u001b[39m)\u001b[38;5;241m.\u001b[39mmedian()\n\u001b[0;32m      4\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mThe median \u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124minternational_students\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m percentage across all institutions is: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mmedian_international_students\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m%\u001b[39m\u001b[38;5;124m'\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\frame.py:3761\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3759\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39mnlevels \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[0;32m   3760\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_getitem_multilevel(key)\n\u001b[1;32m-> 3761\u001b[0m indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3762\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[0;32m   3763\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m [indexer]\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3655\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3653\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine\u001b[38;5;241m.\u001b[39mget_loc(casted_key)\n\u001b[0;32m   3654\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[1;32m-> 3655\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[0;32m   3656\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[0;32m   3657\u001b[0m     \u001b[38;5;66;03m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[0;32m   3658\u001b[0m     \u001b[38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[0;32m   3659\u001b[0m     \u001b[38;5;66;03m#  the TypeError.\u001b[39;00m\n\u001b[0;32m   3660\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_indexing_error(key)\n",
      "\u001b[1;31mKeyError\u001b[0m: 'international_students'"
     ]
    }
   ],
   "source": [
    "#17)What is the median \"international_students\" percentage across all institutions?\n",
    "median_international_students = df['international_students'].str.rstrip('%').astype('float').median()\n",
    "\n",
    "print(f'The median \"international_students\" percentage across all institutions is: {median_international_students}%')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "36abe0e5-8a2e-4a73-94fa-fbc27e2c1a1f",
   "metadata": {},
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'income'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3653\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3652\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m-> 3653\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcasted_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3654\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\_libs\\index.pyx:147\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\_libs\\index.pyx:176\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:7080\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:7088\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'income'",
      "\nThe above exception was the direct cause of the following exception:\n",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[44], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m#18)Identify the institution with the lowest \"income\" in the year 2014.\u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m lowest_income_institution_2014 \u001b[38;5;241m=\u001b[39m df[df[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124myear\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m==\u001b[39m \u001b[38;5;241m2014\u001b[39m]\u001b[38;5;241m.\u001b[39mloc[\u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mincome\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[38;5;241m.\u001b[39midxmin()][\u001b[38;5;124m'\u001b[39m\u001b[38;5;124minstitution\u001b[39m\u001b[38;5;124m'\u001b[39m]\n\u001b[0;32m      4\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mThe institution with the lowest \u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mincome\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m in the year 2014 is: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mlowest_income_institution_2014\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\frame.py:3761\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3759\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39mnlevels \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[0;32m   3760\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_getitem_multilevel(key)\n\u001b[1;32m-> 3761\u001b[0m indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3762\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[0;32m   3763\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m [indexer]\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3655\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3653\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine\u001b[38;5;241m.\u001b[39mget_loc(casted_key)\n\u001b[0;32m   3654\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[1;32m-> 3655\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[0;32m   3656\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[0;32m   3657\u001b[0m     \u001b[38;5;66;03m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[0;32m   3658\u001b[0m     \u001b[38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[0;32m   3659\u001b[0m     \u001b[38;5;66;03m#  the TypeError.\u001b[39;00m\n\u001b[0;32m   3660\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_indexing_error(key)\n",
      "\u001b[1;31mKeyError\u001b[0m: 'income'"
     ]
    }
   ],
   "source": [
    "#18)Identify the institution with the lowest \"income\" in the year 2014.\n",
    "lowest_income_institution_2014 = df[df['year'] == 2014].loc[df['income'].idxmin()]['institution']\n",
    "\n",
    "print(f'The institution with the lowest \"income\" in the year 2014 is: {lowest_income_institution_2014}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "f70a65f7-7e26-4cf4-bb8f-2622f4e28b9c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The number of missing values in the \"score\" column is: 0\n"
     ]
    }
   ],
   "source": [
    "#19)How many missing values are there in the \"score\" column?\n",
    "missing_values_score = df['score'].isnull().sum()\n",
    "\n",
    "print(f'The number of missing values in the \"score\" column is: {missing_values_score}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "15d94df7-3b1a-4cae-9d23-60d70378be95",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Top 3 countries with the most institutions:\n",
      "country\n",
      "USA      573\n",
      "China    167\n",
      "Japan    159\n",
      "Name: count, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "#20) Find the top 3 countries with the most institutions in the dataset.\n",
    "top_countries = df['country'].value_counts().nlargest(3)\n",
    "print(f'Top 3 countries with the most institutions:\\n{top_countries}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "d3076c44-5e71-44e8-a7c1-4dc07729ca63",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Percentage of institutions with a \"research\" score greater than 70: 87.22727272727273%\n"
     ]
    }
   ],
   "source": [
    "#21) Calculate the percentage of institutions with a \"research\" score greater than 70.\n",
    "percentage_high_research = (df['citations'] > 70).mean() * 100\n",
    "print(f'Percentage of institutions with a \"research\" score greater than 70: {percentage_high_research}%')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 106,
   "id": "65c280bd-170a-458e-9613-881d698b1563",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The difference in \"quality_of_education\" score between MIT and Stanford University in 2015 is:\n",
      "year\n",
      "2015   -6\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "#22) What is the difference in \"teaching\" score between MIT and Stanford University in 2015?\n",
    "\n",
    "# Filter data for the year 2015 and institutions MIT and Stanford University\n",
    "filtered_data = df[(df['year'] == 2015) & (df['institution'].isin(['Massachusetts Institute of Technology', 'Stanford University']))]\n",
    "\n",
    "# Pivot the data to have institutions as columns\n",
    "pivoted_data = filtered_data.pivot(index='year', columns='institution', values='quality_of_education')\n",
    "\n",
    "# Fill NaN values with 0\n",
    "pivoted_data = pivoted_data.fillna(0)\n",
    "\n",
    "# Calculate the difference in quality_of_education score between MIT and Stanford University\n",
    "quality_difference = pivoted_data['Massachusetts Institute of Technology'] - pivoted_data['Stanford University']\n",
    "\n",
    "print(f'The difference in \"quality_of_education\" score between MIT and Stanford University in 2015 is:\\n{quality_difference}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "id": "e5981aee-3cd5-40e1-8152-e228c2b9fb34",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of institutions with a \"world_rank\" between 50 and 100 in the year 2011: 0\n"
     ]
    }
   ],
   "source": [
    "#23) How many institutions have a \"world_rank\" between 50 and 100 in the year 2011?\n",
    "count_institutions_50_100_2011 = df[(df['world_rank'] >= 50) & (df['world_rank'] <= 100) & (df['year'] == 2011)].shape[0]\n",
    "print(f'Number of institutions with a \"world_rank\" between 50 and 100 in the year 2011: {count_institutions_50_100_2011}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 104,
   "id": "dceac496-32a4-4825-b2d5-3812adbb543f",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'Column not found: industry_income'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[104], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m#24)Find the country with the highest average \"industry_income\" across all years.\u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m highest_avg_industry_income_country \u001b[38;5;241m=\u001b[39m \u001b[43mdf\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mgroupby\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mcountry\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mindustry_income\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[38;5;241m.\u001b[39mmean()\u001b[38;5;241m.\u001b[39midxmax()\n\u001b[0;32m      3\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mCountry with the highest average \u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mindustry_income\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m across all years: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mhighest_avg_industry_income_country\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\groupby\\generic.py:1771\u001b[0m, in \u001b[0;36mDataFrameGroupBy.__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   1764\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(key, \u001b[38;5;28mtuple\u001b[39m) \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(key) \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[0;32m   1765\u001b[0m     \u001b[38;5;66;03m# if len == 1, then it becomes a SeriesGroupBy and this is actually\u001b[39;00m\n\u001b[0;32m   1766\u001b[0m     \u001b[38;5;66;03m# valid syntax, so don't raise\u001b[39;00m\n\u001b[0;32m   1767\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m   1768\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mCannot subset columns with a tuple with more than one element. \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1769\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mUse a list instead.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1770\u001b[0m     )\n\u001b[1;32m-> 1771\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[38;5;21;43m__getitem__\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\base.py:244\u001b[0m, in \u001b[0;36mSelectionMixin.__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m    242\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    243\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m key \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mobj:\n\u001b[1;32m--> 244\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mColumn not found: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mkey\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m    245\u001b[0m     ndim \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mobj[key]\u001b[38;5;241m.\u001b[39mndim\n\u001b[0;32m    246\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_gotitem(key, ndim\u001b[38;5;241m=\u001b[39mndim)\n",
      "\u001b[1;31mKeyError\u001b[0m: 'Column not found: industry_income'"
     ]
    }
   ],
   "source": [
    "#24)Find the country with the highest average \"industry_income\" across all years.\n",
    "highest_avg_industry_income_country = df.groupby('country')['industry_income'].mean().idxmax()\n",
    "print(f'Country with the highest average \"industry_income\" across all years: {highest_avg_industry_income_country}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "d669f9ab-781b-43e5-bde8-66e1e4b7d35c",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Standard deviation of \"research\" scores for institutions in the United States: 248.10946085958196\n"
     ]
    }
   ],
   "source": [
    "#25) What is the standard deviation of \"research\" scores for institutions in the United States?\n",
    "std_dev_research_scores_usa = df[df['country'] == 'USA']['citations'].std()\n",
    "print(f'Standard deviation of \"research\" scores for institutions in the United States: {std_dev_research_scores_usa}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "3a4910dd-51bf-46f2-bbc9-398cebb77c24",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The institution with the highest \"alumni_employment\" in the year 2015 is: University of California, San Diego\n"
     ]
    }
   ],
   "source": [
    "#26) Identify the institution with the highest \"alumni_employment\" in the year 2015.\n",
    "highest_alumni_employment_2015 = df[df['year'] == 2015].loc[df['alumni_employment'].idxmax()]['institution']\n",
    "print(f'The institution with the highest \"alumni_employment\" in the year 2015 is: {highest_alumni_employment_2015}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "92956f93-ab72-4335-a721-877f13c483d9",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Correlation between \"score\" and \"research\" across all years: -0.5224383145766376\n"
     ]
    }
   ],
   "source": [
    "#27) Calculate the correlation between \"score\" and \"research\" across all years.\n",
    "correlation_score_research = df[['score', 'citations']].corr().iloc[0, 1]\n",
    "print(f'Correlation between \"score\" and \"research\" across all years: {correlation_score_research}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "6455c729-5919-4156-a41f-66bb0062261d",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of institutions with a \"broad_impact\" greater than 800 in the year 2014: 182\n"
     ]
    }
   ],
   "source": [
    "#28) How many institutions have a \"broad_impact\" greater than 800 in the year 2014?\n",
    "count_high_broad_impact_2014 = df[(df['broad_impact'] > 800) & (df['year'] == 2014)].shape[0]\n",
    "print(f'Number of institutions with a \"broad_impact\" greater than 800 in the year 2014: {count_high_broad_impact_2014}')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "39e1a754-6bdb-458d-bff6-2327424b8964",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'international_students'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3653\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3652\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m-> 3653\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcasted_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3654\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\_libs\\index.pyx:147\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\_libs\\index.pyx:176\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:7080\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:7088\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'international_students'",
      "\nThe above exception was the direct cause of the following exception:\n",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[60], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m#29) Find the average \"international_students\" percentage for institutions in Australia.\u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m avg_international_students_australia \u001b[38;5;241m=\u001b[39m \u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mcountry\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m==\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mAustralia\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43minternational_students\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[38;5;241m.\u001b[39mstr\u001b[38;5;241m.\u001b[39mrstrip(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m%\u001b[39m\u001b[38;5;124m'\u001b[39m)\u001b[38;5;241m.\u001b[39mastype(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mfloat\u001b[39m\u001b[38;5;124m'\u001b[39m)\u001b[38;5;241m.\u001b[39mmean()\n\u001b[0;32m      3\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mAverage \u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124minternational_students\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m percentage for institutions in Australia: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mavg_international_students_australia\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m%\u001b[39m\u001b[38;5;124m'\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\frame.py:3761\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3759\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39mnlevels \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[0;32m   3760\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_getitem_multilevel(key)\n\u001b[1;32m-> 3761\u001b[0m indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3762\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[0;32m   3763\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m [indexer]\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3655\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3653\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine\u001b[38;5;241m.\u001b[39mget_loc(casted_key)\n\u001b[0;32m   3654\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[1;32m-> 3655\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[0;32m   3656\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[0;32m   3657\u001b[0m     \u001b[38;5;66;03m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[0;32m   3658\u001b[0m     \u001b[38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[0;32m   3659\u001b[0m     \u001b[38;5;66;03m#  the TypeError.\u001b[39;00m\n\u001b[0;32m   3660\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_indexing_error(key)\n",
      "\u001b[1;31mKeyError\u001b[0m: 'international_students'"
     ]
    }
   ],
   "source": [
    "#29) Find the average \"international_students\" percentage for institutions in Australia.\n",
    "avg_international_students_australia = df[df['country'] == 'Australia']['international_students'].str.rstrip('%').astype('float').mean()\n",
    "print(f'Average \"international_students\" percentage for institutions in Australia: {avg_international_students_australia}%')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "703df369-415a-4cdd-b663-c568b7f3d98c",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The institution with the highest \"score\" in the year 2015 is:\n",
      "             institution  score\n",
      "1200  Harvard University  100.0\n"
     ]
    }
   ],
   "source": [
    "#30) Identify the institution with the highest \"total_score\" in the year 2015.\n",
    "\n",
    "highest_score_2015 = df[df['year'] == 2015].nlargest(1, 'score')[['institution', 'score']]\n",
    "\n",
    "print(f'The institution with the highest \"score\" in the year 2015 is:\\n{highest_score_2015}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "a90d7c94-2f54-4c2a-bb6e-5124455b8399",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'female_male_ratio'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3653\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3652\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m-> 3653\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcasted_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3654\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\_libs\\index.pyx:147\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\_libs\\index.pyx:176\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:7080\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:7088\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'female_male_ratio'",
      "\nThe above exception was the direct cause of the following exception:\n",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[67], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m#31) What is the percentage of missing values in the \"female_male_ratio\" column?\u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m percentage_missing_female_male_ratio \u001b[38;5;241m=\u001b[39m (\u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mfemale_male_ratio\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[38;5;241m.\u001b[39misnull()\u001b[38;5;241m.\u001b[39mmean()) \u001b[38;5;241m*\u001b[39m \u001b[38;5;241m100\u001b[39m\n\u001b[0;32m      3\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mPercentage of missing values in the \u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mfemale_male_ratio\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m column: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mpercentage_missing_female_male_ratio\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m%\u001b[39m\u001b[38;5;124m'\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\frame.py:3761\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3759\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39mnlevels \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[0;32m   3760\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_getitem_multilevel(key)\n\u001b[1;32m-> 3761\u001b[0m indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3762\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[0;32m   3763\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m [indexer]\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3655\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3653\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine\u001b[38;5;241m.\u001b[39mget_loc(casted_key)\n\u001b[0;32m   3654\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[1;32m-> 3655\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[0;32m   3656\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[0;32m   3657\u001b[0m     \u001b[38;5;66;03m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[0;32m   3658\u001b[0m     \u001b[38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[0;32m   3659\u001b[0m     \u001b[38;5;66;03m#  the TypeError.\u001b[39;00m\n\u001b[0;32m   3660\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_indexing_error(key)\n",
      "\u001b[1;31mKeyError\u001b[0m: 'female_male_ratio'"
     ]
    }
   ],
   "source": [
    "#31) What is the percentage of missing values in the \"female_male_ratio\" column?\n",
    "percentage_missing_female_male_ratio = (df['female_male_ratio'].isnull().mean()) * 100\n",
    "print(f'Percentage of missing values in the \"female_male_ratio\" column: {percentage_missing_female_male_ratio}%')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "b11e8fe6-0345-47aa-8ef9-e6d8987748bd",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of institutions with a \"score\" greater than 90 in the year 2013: 5\n"
     ]
    }
   ],
   "source": [
    "#32) How many institutions have a \"score\" greater than 90 in the year 2013?\n",
    "count_high_score_2013 = df[(df['score'] > 90) & (df['year'] == 2013)].shape[0]\n",
    "print(f'Number of institutions with a \"score\" greater than 90 in the year 2013: {count_high_score_2013}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "c7dbdbc6-a7cb-424d-9dc5-cc5af3150517",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Average \"research\" score for institutions in the top 10 of \"total_score\" in 2015: 10.1\n"
     ]
    }
   ],
   "source": [
    "#33) Calculate the average \"research\" score for institutions in the top 10 of \"score\" in 2015.\n",
    "avg_research_top10_total_score_2015 = df[df['year'] == 2015].nlargest(10, 'score')['citations'].mean()\n",
    "print(f'Average \"research\" score for institutions in the top 10 of \"total_score\" in 2015: {avg_research_top10_total_score_2015}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "31a935db-69ef-4812-aae9-c03ca20041e9",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'international_students'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3653\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3652\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m-> 3653\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcasted_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3654\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\_libs\\index.pyx:147\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\_libs\\index.pyx:176\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:7080\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:7088\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'international_students'",
      "\nThe above exception was the direct cause of the following exception:\n",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[72], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m#34) Identify the institution with the lowest \"international_students\" percentage in the year 2012.\u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m lowest_international_students_2012 \u001b[38;5;241m=\u001b[39m df[df[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124myear\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m==\u001b[39m \u001b[38;5;241m2012\u001b[39m]\u001b[38;5;241m.\u001b[39mloc[\u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43minternational_students\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[38;5;241m.\u001b[39mstr\u001b[38;5;241m.\u001b[39mrstrip(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m%\u001b[39m\u001b[38;5;124m'\u001b[39m)\u001b[38;5;241m.\u001b[39mastype(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mfloat\u001b[39m\u001b[38;5;124m'\u001b[39m)\u001b[38;5;241m.\u001b[39midxmin()][\u001b[38;5;124m'\u001b[39m\u001b[38;5;124minstitution\u001b[39m\u001b[38;5;124m'\u001b[39m]\n\u001b[0;32m      3\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mThe institution with the lowest \u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124minternational_students\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m percentage in the year 2012 is: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mlowest_international_students_2012\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\frame.py:3761\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3759\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39mnlevels \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[0;32m   3760\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_getitem_multilevel(key)\n\u001b[1;32m-> 3761\u001b[0m indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3762\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[0;32m   3763\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m [indexer]\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3655\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3653\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine\u001b[38;5;241m.\u001b[39mget_loc(casted_key)\n\u001b[0;32m   3654\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[1;32m-> 3655\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[0;32m   3656\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[0;32m   3657\u001b[0m     \u001b[38;5;66;03m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[0;32m   3658\u001b[0m     \u001b[38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[0;32m   3659\u001b[0m     \u001b[38;5;66;03m#  the TypeError.\u001b[39;00m\n\u001b[0;32m   3660\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_indexing_error(key)\n",
      "\u001b[1;31mKeyError\u001b[0m: 'international_students'"
     ]
    }
   ],
   "source": [
    "#34) Identify the institution with the lowest \"international_students\" percentage in the year 2012.\n",
    "lowest_international_students_2012 = df[df['year'] == 2012].loc[df['international_students'].str.rstrip('%').astype('float').idxmin()]['institution']\n",
    "print(f'The institution with the lowest \"international_students\" percentage in the year 2012 is: {lowest_international_students_2012}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "c9bf3ef7-bc59-42a5-afa6-230b9e89b60c",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'income'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3653\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3652\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m-> 3653\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcasted_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3654\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\_libs\\index.pyx:147\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\_libs\\index.pyx:176\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:7080\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:7088\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'income'",
      "\nThe above exception was the direct cause of the following exception:\n",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[73], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m#35) What is the range of \"income\" values in the dataset?\u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m income_range \u001b[38;5;241m=\u001b[39m \u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mincome\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[38;5;241m.\u001b[39mmax() \u001b[38;5;241m-\u001b[39m df[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mincome\u001b[39m\u001b[38;5;124m'\u001b[39m]\u001b[38;5;241m.\u001b[39mmin()\n\u001b[0;32m      3\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mThe range of \u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mincome\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m values in the dataset is: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mincome_range\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\frame.py:3761\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3759\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39mnlevels \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[0;32m   3760\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_getitem_multilevel(key)\n\u001b[1;32m-> 3761\u001b[0m indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3762\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[0;32m   3763\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m [indexer]\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3655\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3653\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine\u001b[38;5;241m.\u001b[39mget_loc(casted_key)\n\u001b[0;32m   3654\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[1;32m-> 3655\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[0;32m   3656\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[0;32m   3657\u001b[0m     \u001b[38;5;66;03m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[0;32m   3658\u001b[0m     \u001b[38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[0;32m   3659\u001b[0m     \u001b[38;5;66;03m#  the TypeError.\u001b[39;00m\n\u001b[0;32m   3660\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_indexing_error(key)\n",
      "\u001b[1;31mKeyError\u001b[0m: 'income'"
     ]
    }
   ],
   "source": [
    "#35) What is the range of \"income\" values in the dataset?\n",
    "income_range = df['income'].max() - df['income'].min()\n",
    "print(f'The range of \"income\" values in the dataset is: {income_range}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "aade94ad-f70c-4ca9-84b2-238ad5947de7",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of institutions with a \"national_rank\" of 1 in the year 2014: 59\n"
     ]
    }
   ],
   "source": [
    "#36) How many institutions have a \"national_rank\" of 1 in the year 2014?\n",
    "count_national_rank_1_2014 = df[(df['national_rank'] == 1) & (df['year'] == 2014)].shape[0]\n",
    "print(f'Number of institutions with a \"national_rank\" of 1 in the year 2014: {count_national_rank_1_2014}')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "id": "ec614222-5101-4ea7-aaf8-ff26c0a1877a",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'Column not found: international_students'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[79], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m#37) Find the country with the highest average \"international_students\" percentage.\u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m highest_avg_international_students \u001b[38;5;241m=\u001b[39m \u001b[43mdf\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mgroupby\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mcountry\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43minternational_students\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[38;5;241m.\u001b[39mapply(\u001b[38;5;28;01mlambda\u001b[39;00m x: x\u001b[38;5;241m.\u001b[39mstr\u001b[38;5;241m.\u001b[39mrstrip(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m%\u001b[39m\u001b[38;5;124m'\u001b[39m)\u001b[38;5;241m.\u001b[39mastype(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mfloat\u001b[39m\u001b[38;5;124m'\u001b[39m)\u001b[38;5;241m.\u001b[39mmean())\u001b[38;5;241m.\u001b[39midxmax()\n\u001b[0;32m      4\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mThe country with the highest average \u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124minternational_students\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m percentage is: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mhighest_avg_international_students\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\groupby\\generic.py:1771\u001b[0m, in \u001b[0;36mDataFrameGroupBy.__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   1764\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(key, \u001b[38;5;28mtuple\u001b[39m) \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(key) \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[0;32m   1765\u001b[0m     \u001b[38;5;66;03m# if len == 1, then it becomes a SeriesGroupBy and this is actually\u001b[39;00m\n\u001b[0;32m   1766\u001b[0m     \u001b[38;5;66;03m# valid syntax, so don't raise\u001b[39;00m\n\u001b[0;32m   1767\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[0;32m   1768\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mCannot subset columns with a tuple with more than one element. \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1769\u001b[0m         \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mUse a list instead.\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m   1770\u001b[0m     )\n\u001b[1;32m-> 1771\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[38;5;21;43m__getitem__\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\base.py:244\u001b[0m, in \u001b[0;36mSelectionMixin.__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m    242\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m    243\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m key \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mobj:\n\u001b[1;32m--> 244\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mColumn not found: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mkey\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m\"\u001b[39m)\n\u001b[0;32m    245\u001b[0m     ndim \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mobj[key]\u001b[38;5;241m.\u001b[39mndim\n\u001b[0;32m    246\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_gotitem(key, ndim\u001b[38;5;241m=\u001b[39mndim)\n",
      "\u001b[1;31mKeyError\u001b[0m: 'Column not found: international_students'"
     ]
    }
   ],
   "source": [
    "#37) Find the country with the highest average \"international_students\" percentage.\n",
    "highest_avg_international_students = df.groupby('country')['international_students'].apply(lambda x: x.str.rstrip('%').astype('float').mean()).idxmax()\n",
    "\n",
    "print(f'The country with the highest average \"international_students\" percentage is: {highest_avg_international_students}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "05e0c0c4-28e7-4746-9715-b822e7fda3bf",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The average \"teaching\" score for institutions in the top 5 of \"world_rank\" in 2016 is: nan\n"
     ]
    }
   ],
   "source": [
    "#38) Calculate the average \"teaching\" score for institutions in the top 5 of \"world_rank\" in 2016.\n",
    "average_teaching_top5_2016 = df[(df['world_rank'] <= 5) & (df['year'] == 2016)]['quality_of_faculty'].mean()\n",
    "\n",
    "print(f'The average \"teaching\" score for institutions in the top 5 of \"world_rank\" in 2016 is: {average_teaching_top5_2016}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "id": "4bdbd908-ab2f-45d3-bb9f-5849f6b2eef0",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The institution with the highest \"research\" score in the year 2014 is:                         institution  citations\n",
      "445  National Cheng Kung University        800\n"
     ]
    }
   ],
   "source": [
    "#39) Identify the institution with the highest \"research\" score in the year 2014.\n",
    "\n",
    "highest_research_2014 = df[df['year'] == 2014].nlargest(1, 'citations')[['institution', 'citations']]\n",
    "\n",
    "print(f'The institution with the highest \"research\" score in the year 2014 is: {highest_research_2014}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "id": "a1b0ee64-2e7a-4749-882c-aa9881601000",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The number of institutions with a \"world_rank\" greater than 200 in the year 2015 is: 800\n"
     ]
    }
   ],
   "source": [
    "#40) How many institutions have a \"world_rank\" greater than 200 in the year 2015?\n",
    "num_institutions_world_rank_gt_200_2015 = df[(df['world_rank'] > 200) & (df['year'] == 2015)].shape[0]\n",
    "\n",
    "print(f'The number of institutions with a \"world_rank\" greater than 200 in the year 2015 is: {num_institutions_world_rank_gt_200_2015}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "id": "d8c00e6f-b63f-423d-bdcc-5a9669ee3502",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The mode of the \"country\" column in the dataset is: USA\n"
     ]
    }
   ],
   "source": [
    "#41) What is the mode of the \"country\" column in the dataset?\n",
    "mode_country = df['country'].mode()[0]\n",
    "\n",
    "print(f'The mode of the \"country\" column in the dataset is: {mode_country}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "9835365f-c482-4fc8-a420-e6abd284090c",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'industry_income'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3653\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3652\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m-> 3653\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcasted_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3654\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\_libs\\index.pyx:147\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\_libs\\index.pyx:176\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:7080\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:7088\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'industry_income'",
      "\nThe above exception was the direct cause of the following exception:\n",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[87], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m#42) Identify the institution with the highest \"industry_income\" in the year 2011.\u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m highest_industry_income_2011 \u001b[38;5;241m=\u001b[39m \u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43myear\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m==\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;241;43m2011\u001b[39;49m\u001b[43m]\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mnlargest\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m1\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mindustry_income\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m[[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124minstitution\u001b[39m\u001b[38;5;124m'\u001b[39m, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124mindustry_income\u001b[39m\u001b[38;5;124m'\u001b[39m]]\n\u001b[0;32m      3\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mThe institution with the highest \u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mindustry_income\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m in the year 2011 is: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mhighest_industry_income_2011\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\frame.py:7203\u001b[0m, in \u001b[0;36mDataFrame.nlargest\u001b[1;34m(self, n, columns, keep)\u001b[0m\n\u001b[0;32m   7098\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mnlargest\u001b[39m(\u001b[38;5;28mself\u001b[39m, n: \u001b[38;5;28mint\u001b[39m, columns: IndexLabel, keep: \u001b[38;5;28mstr\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mfirst\u001b[39m\u001b[38;5;124m\"\u001b[39m) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m DataFrame:\n\u001b[0;32m   7099\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[0;32m   7100\u001b[0m \u001b[38;5;124;03m    Return the first `n` rows ordered by `columns` in descending order.\u001b[39;00m\n\u001b[0;32m   7101\u001b[0m \n\u001b[1;32m   (...)\u001b[0m\n\u001b[0;32m   7201\u001b[0m \u001b[38;5;124;03m    Brunei      434000    12128      BN\u001b[39;00m\n\u001b[0;32m   7202\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[1;32m-> 7203\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mselectn\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mSelectNFrame\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mn\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mn\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkeep\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mkeep\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mnlargest\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\methods\\selectn.py:54\u001b[0m, in \u001b[0;36mSelectN.nlargest\u001b[1;34m(self)\u001b[0m\n\u001b[0;32m     52\u001b[0m \u001b[38;5;129m@final\u001b[39m\n\u001b[0;32m     53\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mnlargest\u001b[39m(\u001b[38;5;28mself\u001b[39m):\n\u001b[1;32m---> 54\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcompute\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mnlargest\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\methods\\selectn.py:192\u001b[0m, in \u001b[0;36mSelectNFrame.compute\u001b[1;34m(self, method)\u001b[0m\n\u001b[0;32m    189\u001b[0m columns \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\n\u001b[0;32m    191\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m column \u001b[38;5;129;01min\u001b[39;00m columns:\n\u001b[1;32m--> 192\u001b[0m     dtype \u001b[38;5;241m=\u001b[39m \u001b[43mframe\u001b[49m\u001b[43m[\u001b[49m\u001b[43mcolumn\u001b[49m\u001b[43m]\u001b[49m\u001b[38;5;241m.\u001b[39mdtype\n\u001b[0;32m    193\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mis_valid_dtype_n_method(dtype):\n\u001b[0;32m    194\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m(\n\u001b[0;32m    195\u001b[0m             \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mColumn \u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mrepr\u001b[39m(column)\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m has dtype \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mdtype\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m, \u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    196\u001b[0m             \u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mcannot use method \u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mrepr\u001b[39m(method)\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m with this dtype\u001b[39m\u001b[38;5;124m\"\u001b[39m\n\u001b[0;32m    197\u001b[0m         )\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\frame.py:3761\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3759\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39mnlevels \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[0;32m   3760\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_getitem_multilevel(key)\n\u001b[1;32m-> 3761\u001b[0m indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3762\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[0;32m   3763\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m [indexer]\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3655\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3653\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine\u001b[38;5;241m.\u001b[39mget_loc(casted_key)\n\u001b[0;32m   3654\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[1;32m-> 3655\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[0;32m   3656\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[0;32m   3657\u001b[0m     \u001b[38;5;66;03m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[0;32m   3658\u001b[0m     \u001b[38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[0;32m   3659\u001b[0m     \u001b[38;5;66;03m#  the TypeError.\u001b[39;00m\n\u001b[0;32m   3660\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_indexing_error(key)\n",
      "\u001b[1;31mKeyError\u001b[0m: 'industry_income'"
     ]
    }
   ],
   "source": [
    "#42) Identify the institution with the highest \"industry_income\" in the year 2011.\n",
    "highest_industry_income_2011 = df[df['year'] == 2011].nlargest(1, 'industry_income')[['institution', 'industry_income']]\n",
    "print(f'The institution with the highest \"industry_income\" in the year 2011 is: {highest_industry_income_2011}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "0b9c749e-0eed-440c-afeb-9133236440a2",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The average \"citations\" score for institutions in the bottom 10 of \"world_rank\" in 2013 is: nan\n"
     ]
    }
   ],
   "source": [
    "#43) Calculate the average \"citations\" score for institutions in the bottom 10 of \"world_rank\" in 2013.\n",
    "average_citations_bottom10_2013 = df[(df['world_rank'] > (df['world_rank'].max() - 10)) & (df['year'] == 2013)]['citations'].mean()\n",
    "\n",
    "print(f'The average \"citations\" score for institutions in the bottom 10 of \"world_rank\" in 2013 is: {average_citations_bottom10_2013}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "id": "a3b481a7-ec12-4576-998a-7172e135e013",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The number of institutions with a \"total_score\" greater than 80 in the year 2016 is: 0\n"
     ]
    }
   ],
   "source": [
    "#44) How many institutions have a \"total_score\" greater than 80 in the year 2016?\n",
    "num_institutions_total_score_gt_80_2016 = df[(df['score'] > 80) & (df['year'] == 2016)].shape[0]\n",
    "\n",
    "print(f'The number of institutions with a \"total_score\" greater than 80 in the year 2016 is: {num_institutions_total_score_gt_80_2016}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "id": "fe0eea6c-9b32-4491-ade9-d42db5910d49",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The country with the lowest average \"score\" across all years is: Romania\n"
     ]
    }
   ],
   "source": [
    "#45) Find the country with the lowest average \"score\" across all years.\n",
    "lowest_avg_score_country = df.groupby('country')['score'].mean().idxmin()\n",
    "\n",
    "print(f'The country with the lowest average \"score\" across all years is: {lowest_avg_score_country}')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "8a66281b-0fb1-4844-8628-c13f75aaf520",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'international_students'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3653\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3652\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m-> 3653\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcasted_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3654\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\_libs\\index.pyx:147\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\_libs\\index.pyx:176\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:7080\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:7088\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'international_students'",
      "\nThe above exception was the direct cause of the following exception:\n",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[92], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m#46) Calculate the average \"international_students\" percentage for institutions in the top 5 of \"alumni_employment\" in 2014.\u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m average_international_students_top5_alumni_employment_2014 \u001b[38;5;241m=\u001b[39m \u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43malumni_employment\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m<\u001b[39;49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;241;43m5\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m&\u001b[39;49m\u001b[43m \u001b[49m\u001b[43m(\u001b[49m\u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43myear\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m==\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;241;43m2014\u001b[39;49m\u001b[43m)\u001b[49m\u001b[43m]\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43minternational_students\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[38;5;241m.\u001b[39mstr\u001b[38;5;241m.\u001b[39mrstrip(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m%\u001b[39m\u001b[38;5;124m'\u001b[39m)\u001b[38;5;241m.\u001b[39mastype(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mfloat\u001b[39m\u001b[38;5;124m'\u001b[39m)\u001b[38;5;241m.\u001b[39mmean()\n\u001b[0;32m      4\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mThe average \u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124minternational_students\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m percentage for institutions in the top 5 of \u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124malumni_employment\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m in 2014 is: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00maverage_international_students_top5_alumni_employment_2014\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\frame.py:3761\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3759\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39mnlevels \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[0;32m   3760\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_getitem_multilevel(key)\n\u001b[1;32m-> 3761\u001b[0m indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3762\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[0;32m   3763\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m [indexer]\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3655\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3653\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine\u001b[38;5;241m.\u001b[39mget_loc(casted_key)\n\u001b[0;32m   3654\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[1;32m-> 3655\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[0;32m   3656\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[0;32m   3657\u001b[0m     \u001b[38;5;66;03m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[0;32m   3658\u001b[0m     \u001b[38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[0;32m   3659\u001b[0m     \u001b[38;5;66;03m#  the TypeError.\u001b[39;00m\n\u001b[0;32m   3660\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_indexing_error(key)\n",
      "\u001b[1;31mKeyError\u001b[0m: 'international_students'"
     ]
    }
   ],
   "source": [
    "#46) Calculate the average \"international_students\" percentage for institutions in the top 5 of \"alumni_employment\" in 2014.\n",
    "average_international_students_top5_alumni_employment_2014 = df[(df['alumni_employment'] <= 5) & (df['year'] == 2014)]['international_students'].str.rstrip('%').astype('float').mean()\n",
    "\n",
    "print(f'The average \"international_students\" percentage for institutions in the top 5 of \"alumni_employment\" in 2014 is: {average_international_students_top5_alumni_employment_2014}')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "id": "69aea502-84ee-4b8a-b3ee-42c2fb601837",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The institution with the lowest \"teaching\" score in the year 2015 is:                     institution  quality_of_faculty\n",
      "1223  Seoul National University                 218\n"
     ]
    }
   ],
   "source": [
    "#47) Identify the institution with the lowest \"teaching\" score in the year 2015.\n",
    "lowest_teaching_2015 = df[df['year'] == 2015].nlargest(1, 'quality_of_faculty')[['institution', 'quality_of_faculty']]\n",
    "\n",
    "print(f'The institution with the lowest \"teaching\" score in the year 2015 is: {lowest_teaching_2015}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 96,
   "id": "e2b783c4-16a6-403a-8962-a9018f36522d",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The number of missing values in the \"research\" column is: 0\n"
     ]
    }
   ],
   "source": [
    "#48) How many missing values are there in the \"research\" column?\n",
    "num_missing_values_research = df['citations'].isnull().sum()\n",
    "\n",
    "print(f'The number of missing values in the \"research\" column is: {num_missing_values_research}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "id": "c4787e34-7237-4959-89d9-cd7fba835497",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "ename": "KeyError",
     "evalue": "'female_male_ratio'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3653\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3652\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[1;32m-> 3653\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_engine\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcasted_key\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3654\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\_libs\\index.pyx:147\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\_libs\\index.pyx:176\u001b[0m, in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:7080\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "File \u001b[1;32mpandas\\_libs\\hashtable_class_helper.pxi:7088\u001b[0m, in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[1;34m()\u001b[0m\n",
      "\u001b[1;31mKeyError\u001b[0m: 'female_male_ratio'",
      "\nThe above exception was the direct cause of the following exception:\n",
      "\u001b[1;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[98], line 2\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m#49) Find the average \"female_male_ratio\" for institutions in the United States.\u001b[39;00m\n\u001b[1;32m----> 2\u001b[0m average_female_male_ratio_usa \u001b[38;5;241m=\u001b[39m \u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mcountry\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m==\u001b[39;49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mUnited States\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mfemale_male_ratio\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[38;5;241m.\u001b[39mmode()[\u001b[38;5;241m0\u001b[39m]\n\u001b[0;32m      4\u001b[0m \u001b[38;5;28mprint\u001b[39m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mThe average \u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mfemale_male_ratio\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m for institutions in the United States is: \u001b[39m\u001b[38;5;132;01m{\u001b[39;00maverage_female_male_ratio_usa\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m'\u001b[39m)\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\frame.py:3761\u001b[0m, in \u001b[0;36mDataFrame.__getitem__\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3759\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns\u001b[38;5;241m.\u001b[39mnlevels \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[0;32m   3760\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_getitem_multilevel(key)\n\u001b[1;32m-> 3761\u001b[0m indexer \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mget_loc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mkey\u001b[49m\u001b[43m)\u001b[49m\n\u001b[0;32m   3762\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_integer(indexer):\n\u001b[0;32m   3763\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m [indexer]\n",
      "File \u001b[1;32m~\\anaconda3\\Lib\\site-packages\\pandas\\core\\indexes\\base.py:3655\u001b[0m, in \u001b[0;36mIndex.get_loc\u001b[1;34m(self, key)\u001b[0m\n\u001b[0;32m   3653\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_engine\u001b[38;5;241m.\u001b[39mget_loc(casted_key)\n\u001b[0;32m   3654\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[1;32m-> 3655\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(key) \u001b[38;5;28;01mfrom\u001b[39;00m \u001b[38;5;21;01merr\u001b[39;00m\n\u001b[0;32m   3656\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[0;32m   3657\u001b[0m     \u001b[38;5;66;03m# If we have a listlike key, _check_indexing_error will raise\u001b[39;00m\n\u001b[0;32m   3658\u001b[0m     \u001b[38;5;66;03m#  InvalidIndexError. Otherwise we fall through and re-raise\u001b[39;00m\n\u001b[0;32m   3659\u001b[0m     \u001b[38;5;66;03m#  the TypeError.\u001b[39;00m\n\u001b[0;32m   3660\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_check_indexing_error(key)\n",
      "\u001b[1;31mKeyError\u001b[0m: 'female_male_ratio'"
     ]
    }
   ],
   "source": [
    "#49) Find the average \"female_male_ratio\" for institutions in the United States.\n",
    "average_female_male_ratio_usa = df[df['country'] == 'United States']['female_male_ratio'].mode()[0]\n",
    "\n",
    "print(f'The average \"female_male_ratio\" for institutions in the United States is: {average_female_male_ratio_usa}')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "id": "c08a3155-2f36-4099-8f2e-d0ada2f97f0b",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The highest \"influence\" score in the dataset is: 991\n"
     ]
    }
   ],
   "source": [
    "#50) What is the highest \"influence\" score in the dataset?\n",
    "highest_influence_score = df['influence'].max()\n",
    "\n",
    "print(f'The highest \"influence\" score in the dataset is: {highest_influence_score}')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 108,
   "id": "3779ef69-caad-4a1f-ad31-72a93bf51519",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Task 6 :-\n",
    "#Questions for Visualizations:-\n",
    "#1) How can you use matplotlib to create a bar chart showing the top 10 universities by their scores in 2012?\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "\n",
    "# Assuming your DataFrame is named df\n",
    "# Replace 'year_column', 'institution_column', and 'score_column' with the actual column names in your DataFrame\n",
    "\n",
    "# Filter data for the year 2012\n",
    "data_2012 = df[df['year'] == 2012]\n",
    "\n",
    "# Sort the data by scores in descending order and select the top 10 universities\n",
    "top_10_universities = data_2012.sort_values(by='score', ascending=False).head(10)\n",
    "\n",
    "# Create a bar chart\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.bar(top_10_universities['institution'], top_10_universities['score'], color='skyblue')\n",
    "plt.xlabel('Institution')\n",
    "plt.ylabel('Score')\n",
    "plt.title('Top 10 Universities by Score in 2012')\n",
    "plt.xticks(rotation=45, ha='right')  # Rotate x-axis labels for better visibility\n",
    "plt.tight_layout()\n",
    "\n",
    "# Show the plot\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "id": "d5e3f350-0c52-4ea8-af7c-a383ad8c37ed",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#2) Create a line plot using seaborn to visualize the trend of scores for the University of Tokyo from 2012 to 2014.\n",
    "\n",
    "import seaborn as sns\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Assuming your DataFrame is named df\n",
    "# Replace 'year_column', 'institution_column', and 'score_column' with the actual column names in your DataFrame\n",
    "\n",
    "# Filter data for the University of Tokyo and the years 2012 to 2014\n",
    "data_utokyo = df[(df['institution'] == 'University of Tokyo') & (df['year'].between(2012, 2014))]\n",
    "\n",
    "# Create a line plot using Seaborn\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.lineplot(x='year', y='score', data=data_utokyo, marker='o')\n",
    "plt.xlabel('Year')\n",
    "plt.ylabel('Score')\n",
    "plt.title('Trend of Scores for the University of Tokyo (2012-2014)')\n",
    "\n",
    "# Show the plot\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 134,
   "id": "22b64514-2f3d-4846-89f1-7f89deaf0c81",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "  #altair-viz-0e2047740ebf4d199466ff961ebc6009.vega-embed {\n",
       "    width: 100%;\n",
       "    display: flex;\n",
       "  }\n",
       "\n",
       "  #altair-viz-0e2047740ebf4d199466ff961ebc6009.vega-embed details,\n",
       "  #altair-viz-0e2047740ebf4d199466ff961ebc6009.vega-embed details summary {\n",
       "    position: relative;\n",
       "  }\n",
       "</style>\n",
       "<div id=\"altair-viz-0e2047740ebf4d199466ff961ebc6009\"></div>\n",
       "<script type=\"text/javascript\">\n",
       "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
       "  (function(spec, embedOpt){\n",
       "    let outputDiv = document.currentScript.previousElementSibling;\n",
       "    if (outputDiv.id !== \"altair-viz-0e2047740ebf4d199466ff961ebc6009\") {\n",
       "      outputDiv = document.getElementById(\"altair-viz-0e2047740ebf4d199466ff961ebc6009\");\n",
       "    }\n",
       "    const paths = {\n",
       "      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n",
       "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n",
       "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.16.3?noext\",\n",
       "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n",
       "    };\n",
       "\n",
       "    function maybeLoadScript(lib, version) {\n",
       "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
       "      return (VEGA_DEBUG[key] == version) ?\n",
       "        Promise.resolve(paths[lib]) :\n",
       "        new Promise(function(resolve, reject) {\n",
       "          var s = document.createElement('script');\n",
       "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
       "          s.async = true;\n",
       "          s.onload = () => {\n",
       "            VEGA_DEBUG[key] = version;\n",
       "            return resolve(paths[lib]);\n",
       "          };\n",
       "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
       "          s.src = paths[lib];\n",
       "        });\n",
       "    }\n",
       "\n",
       "    function showError(err) {\n",
       "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
       "      throw err;\n",
       "    }\n",
       "\n",
       "    function displayChart(vegaEmbed) {\n",
       "      vegaEmbed(outputDiv, spec, embedOpt)\n",
       "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
       "    }\n",
       "\n",
       "    if(typeof define === \"function\" && define.amd) {\n",
       "      requirejs.config({paths});\n",
       "      require([\"vega-embed\"], displayChart, err => showError(`Error loading script: ${err.message}`));\n",
       "    } else {\n",
       "      maybeLoadScript(\"vega\", \"5\")\n",
       "        .then(() => maybeLoadScript(\"vega-lite\", \"5.16.3\"))\n",
       "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
       "        .catch(showError)\n",
       "        .then(() => displayChart(vegaEmbed));\n",
       "    }\n",
       "  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"data\": {\"name\": \"data-8cbbeb8cbe3ee30efb200c54589043bf\"}, \"mark\": {\"type\": \"circle\"}, \"encoding\": {\"tooltip\": [{\"field\": \"institution\", \"type\": \"nominal\"}, {\"field\": \"quality_of_faculty\", \"type\": \"quantitative\"}, {\"field\": \"alumni_employment\", \"type\": \"quantitative\"}], \"x\": {\"field\": \"quality_of_faculty\", \"type\": \"quantitative\"}, \"y\": {\"field\": \"alumni_employment\", \"type\": \"quantitative\"}}, \"title\": \"Scatter Plot: Quality of Faculty vs. Alumni Employment (2013)\", \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.16.3.json\", \"datasets\": {\"data-8cbbeb8cbe3ee30efb200c54589043bf\": [{\"world_rank\": 1, \"institution\": \"Harvard University\", \"country\": \"USA\", \"national_rank\": 1, \"quality_of_education\": 1, \"alumni_employment\": 1, \"quality_of_faculty\": 1, \"publications\": 1, \"influence\": 1, \"citations\": 1, \"broad_impact\": null, \"patents\": 7, \"score\": 100.0, \"year\": 2013}, {\"world_rank\": 2, \"institution\": \"Stanford University\", \"country\": \"USA\", \"national_rank\": 2, \"quality_of_education\": 11, \"alumni_employment\": 2, \"quality_of_faculty\": 4, \"publications\": 6, \"influence\": 2, \"citations\": 2, \"broad_impact\": null, \"patents\": 11, \"score\": 93.94, \"year\": 2013}, {\"world_rank\": 3, \"institution\": \"University of Oxford\", \"country\": \"United Kingdom\", \"national_rank\": 1, \"quality_of_education\": 7, \"alumni_employment\": 12, \"quality_of_faculty\": 10, \"publications\": 11, \"influence\": 7, \"citations\": 13, \"broad_impact\": null, \"patents\": 15, \"score\": 92.54, \"year\": 2013}, {\"world_rank\": 4, \"institution\": \"Massachusetts Institute of Technology\", \"country\": \"USA\", \"national_rank\": 3, \"quality_of_education\": 2, \"alumni_employment\": 16, \"quality_of_faculty\": 2, \"publications\": 16, \"influence\": 3, \"citations\": 3, \"broad_impact\": null, \"patents\": 1, \"score\": 91.45, \"year\": 2013}, {\"world_rank\": 5, \"institution\": \"University of Cambridge\", \"country\": \"United Kingdom\", \"national_rank\": 2, \"quality_of_education\": 3, \"alumni_employment\": 15, \"quality_of_faculty\": 5, \"publications\": 9, \"influence\": 11, \"citations\": 10, \"broad_impact\": null, \"patents\": 39, \"score\": 90.24, \"year\": 2013}, {\"world_rank\": 6, \"institution\": \"Columbia University\", \"country\": \"USA\", \"national_rank\": 4, \"quality_of_education\": 13, \"alumni_employment\": 8, \"quality_of_faculty\": 9, \"publications\": 13, \"influence\": 9, \"citations\": 11, \"broad_impact\": null, \"patents\": 10, \"score\": 88.21, \"year\": 2013}, {\"world_rank\": 7, \"institution\": \"University of California, Berkeley\", \"country\": \"USA\", \"national_rank\": 5, \"quality_of_education\": 6, \"alumni_employment\": 28, \"quality_of_faculty\": 6, \"publications\": 8, \"influence\": 6, \"citations\": 4, \"broad_impact\": null, \"patents\": 19, \"score\": 85.07, \"year\": 2013}, {\"world_rank\": 8, \"institution\": \"Princeton University\", \"country\": \"USA\", \"national_rank\": 6, \"quality_of_education\": 4, \"alumni_employment\": 14, \"quality_of_faculty\": 3, \"publications\": 58, \"influence\": 35, \"citations\": 27, \"broad_impact\": null, \"patents\": 101, \"score\": 82.17, \"year\": 2013}, {\"world_rank\": 9, \"institution\": \"University of Chicago\", \"country\": \"USA\", \"national_rank\": 7, \"quality_of_education\": 9, \"alumni_employment\": 19, \"quality_of_faculty\": 8, \"publications\": 37, \"influence\": 21, \"citations\": 30, \"broad_impact\": null, \"patents\": 101, \"score\": 79.16, \"year\": 2013}, {\"world_rank\": 10, \"institution\": \"Yale University\", \"country\": \"USA\", \"national_rank\": 8, \"quality_of_education\": 10, \"alumni_employment\": 25, \"quality_of_faculty\": 13, \"publications\": 20, \"influence\": 12, \"citations\": 22, \"broad_impact\": null, \"patents\": 42, \"score\": 78.83, \"year\": 2013}, {\"world_rank\": 11, \"institution\": \"California Institute of Technology\", \"country\": \"USA\", \"national_rank\": 9, \"quality_of_education\": 5, \"alumni_employment\": 101, \"quality_of_faculty\": 7, \"publications\": 38, \"influence\": 24, \"citations\": 25, \"broad_impact\": null, \"patents\": 17, \"score\": 77.59, \"year\": 2013}, {\"world_rank\": 12, \"institution\": \"University of Pennsylvania\", \"country\": \"USA\", \"national_rank\": 10, \"quality_of_education\": 22, \"alumni_employment\": 5, \"quality_of_faculty\": 25, \"publications\": 10, \"influence\": 10, \"citations\": 9, \"broad_impact\": null, \"patents\": 14, \"score\": 77.24, \"year\": 2013}, {\"world_rank\": 13, \"institution\": \"Cornell University\", \"country\": \"USA\", \"national_rank\": 11, \"quality_of_education\": 12, \"alumni_employment\": 23, \"quality_of_faculty\": 18, \"publications\": 21, \"influence\": 19, \"citations\": 15, \"broad_impact\": null, \"patents\": 7, \"score\": 76.99, \"year\": 2013}, {\"world_rank\": 14, \"institution\": \"University of Tokyo\", \"country\": \"Japan\", \"national_rank\": 1, \"quality_of_education\": 17, \"alumni_employment\": 3, \"quality_of_faculty\": 32, \"publications\": 14, \"influence\": 23, \"citations\": 29, \"broad_impact\": null, \"patents\": 5, \"score\": 76.23, \"year\": 2013}, {\"world_rank\": 15, \"institution\": \"Kyoto University\", \"country\": \"Japan\", \"national_rank\": 2, \"quality_of_education\": 32, \"alumni_employment\": 17, \"quality_of_faculty\": 14, \"publications\": 28, \"influence\": 46, \"citations\": 58, \"broad_impact\": null, \"patents\": 13, \"score\": 69.46, \"year\": 2013}, {\"world_rank\": 16, \"institution\": \"University of California, Los Angeles\", \"country\": \"USA\", \"national_rank\": 12, \"quality_of_education\": 38, \"alumni_employment\": 35, \"quality_of_faculty\": 12, \"publications\": 5, \"influence\": 15, \"citations\": 6, \"broad_impact\": null, \"patents\": 12, \"score\": 67.84, \"year\": 2013}, {\"world_rank\": 17, \"institution\": \"Johns Hopkins University\", \"country\": \"USA\", \"national_rank\": 13, \"quality_of_education\": 23, \"alumni_employment\": 96, \"quality_of_faculty\": 21, \"publications\": 4, \"influence\": 5, \"citations\": 7, \"broad_impact\": null, \"patents\": 2, \"score\": 65.64, \"year\": 2013}, {\"world_rank\": 18, \"institution\": \"Swiss Federal Institute of Technology in Zurich\", \"country\": \"Switzerland\", \"national_rank\": 1, \"quality_of_education\": 16, \"alumni_employment\": 60, \"quality_of_faculty\": 11, \"publications\": 40, \"influence\": 53, \"citations\": 55, \"broad_impact\": null, \"patents\": 60, \"score\": 64.99, \"year\": 2013}, {\"world_rank\": 19, \"institution\": \"New York University\", \"country\": \"USA\", \"national_rank\": 14, \"quality_of_education\": 37, \"alumni_employment\": 31, \"quality_of_faculty\": 16, \"publications\": 41, \"influence\": 25, \"citations\": 33, \"broad_impact\": null, \"patents\": 51, \"score\": 63.99, \"year\": 2013}, {\"world_rank\": 20, \"institution\": \"University of California, San Diego\", \"country\": \"USA\", \"national_rank\": 15, \"quality_of_education\": 33, \"alumni_employment\": 101, \"quality_of_faculty\": 19, \"publications\": 15, \"influence\": 14, \"citations\": 14, \"broad_impact\": null, \"patents\": 22, \"score\": 63.12, \"year\": 2013}, {\"world_rank\": 21, \"institution\": \"Hebrew University of Jerusalem\", \"country\": \"Israel\", \"national_rank\": 1, \"quality_of_education\": 15, \"alumni_employment\": 101, \"quality_of_faculty\": 15, \"publications\": 101, \"influence\": 96, \"citations\": 101, \"broad_impact\": null, \"patents\": 24, \"score\": 59.98, \"year\": 2013}, {\"world_rank\": 22, \"institution\": \"University of California, San Francisco\", \"country\": \"USA\", \"national_rank\": 16, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 22, \"publications\": 23, \"influence\": 4, \"citations\": 18, \"broad_impact\": null, \"patents\": 63, \"score\": 59.38, \"year\": 2013}, {\"world_rank\": 23, \"institution\": \"University of Wisconsin\\u00e2\\u20ac\\u201cMadison\", \"country\": \"USA\", \"national_rank\": 17, \"quality_of_education\": 31, \"alumni_employment\": 55, \"quality_of_faculty\": 33, \"publications\": 19, \"influence\": 29, \"citations\": 20, \"broad_impact\": null, \"patents\": 30, \"score\": 58.94, \"year\": 2013}, {\"world_rank\": 24, \"institution\": \"University of Illinois at Urbana\\u00e2\\u20ac\\u201cChampaign\", \"country\": \"USA\", \"national_rank\": 18, \"quality_of_education\": 65, \"alumni_employment\": 101, \"quality_of_faculty\": 20, \"publications\": 33, \"influence\": 66, \"citations\": 34, \"broad_impact\": null, \"patents\": 67, \"score\": 58.33, \"year\": 2013}, {\"world_rank\": 25, \"institution\": \"Duke University\", \"country\": \"USA\", \"national_rank\": 19, \"quality_of_education\": 89, \"alumni_employment\": 42, \"quality_of_faculty\": 46, \"publications\": 22, \"influence\": 17, \"citations\": 17, \"broad_impact\": null, \"patents\": 24, \"score\": 57.72, \"year\": 2013}, {\"world_rank\": 26, \"institution\": \"University of Texas at Austin\", \"country\": \"USA\", \"national_rank\": 20, \"quality_of_education\": 101, \"alumni_employment\": 56, \"quality_of_faculty\": 24, \"publications\": 46, \"influence\": 84, \"citations\": 37, \"broad_impact\": null, \"patents\": 20, \"score\": 57.71, \"year\": 2013}, {\"world_rank\": 27, \"institution\": \"Imperial College London\", \"country\": \"United Kingdom\", \"national_rank\": 3, \"quality_of_education\": 101, \"alumni_employment\": 92, \"quality_of_faculty\": 35, \"publications\": 17, \"influence\": 22, \"citations\": 19, \"broad_impact\": null, \"patents\": 48, \"score\": 56.75, \"year\": 2013}, {\"world_rank\": 28, \"institution\": \"Northwestern University\", \"country\": \"USA\", \"national_rank\": 21, \"quality_of_education\": 101, \"alumni_employment\": 21, \"quality_of_faculty\": 101, \"publications\": 27, \"influence\": 26, \"citations\": 24, \"broad_impact\": null, \"patents\": 30, \"score\": 56.12, \"year\": 2013}, {\"world_rank\": 29, \"institution\": \"University of Toronto\", \"country\": \"Canada\", \"national_rank\": 1, \"quality_of_education\": 91, \"alumni_employment\": 81, \"quality_of_faculty\": 34, \"publications\": 2, \"influence\": 13, \"citations\": 12, \"broad_impact\": null, \"patents\": 101, \"score\": 56.11, \"year\": 2013}, {\"world_rank\": 30, \"institution\": \"University College London\", \"country\": \"United Kingdom\", \"national_rank\": 4, \"quality_of_education\": 24, \"alumni_employment\": 101, \"quality_of_faculty\": 49, \"publications\": 12, \"influence\": 16, \"citations\": 21, \"broad_impact\": null, \"patents\": 73, \"score\": 56.0, \"year\": 2013}, {\"world_rank\": 31, \"institution\": \"University of Washington - Seattle\", \"country\": \"USA\", \"national_rank\": 22, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 41, \"publications\": 7, \"influence\": 8, \"citations\": 5, \"broad_impact\": null, \"patents\": 51, \"score\": 55.79, \"year\": 2013}, {\"world_rank\": 32, \"institution\": \"University of Michigan, Ann Arbor\", \"country\": \"USA\", \"national_rank\": 23, \"quality_of_education\": 35, \"alumni_employment\": 27, \"quality_of_faculty\": 101, \"publications\": 3, \"influence\": 18, \"citations\": 8, \"broad_impact\": null, \"patents\": 6, \"score\": 55.77, \"year\": 2013}, {\"world_rank\": 33, \"institution\": \"Weizmann Institute of Science\", \"country\": \"Israel\", \"national_rank\": 2, \"quality_of_education\": 18, \"alumni_employment\": 101, \"quality_of_faculty\": 23, \"publications\": 101, \"influence\": 85, \"citations\": 101, \"broad_impact\": null, \"patents\": 48, \"score\": 54.34, \"year\": 2013}, {\"world_rank\": 34, \"institution\": \"University of North Carolina at Chapel Hill\", \"country\": \"USA\", \"national_rank\": 24, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 60, \"publications\": 30, \"influence\": 27, \"citations\": 26, \"broad_impact\": null, \"patents\": 42, \"score\": 52.87, \"year\": 2013}, {\"world_rank\": 35, \"institution\": \"Osaka University\", \"country\": \"Japan\", \"national_rank\": 3, \"quality_of_education\": 77, \"alumni_employment\": 91, \"quality_of_faculty\": 44, \"publications\": 55, \"influence\": 56, \"citations\": 72, \"broad_impact\": null, \"patents\": 17, \"score\": 52.79, \"year\": 2013}, {\"world_rank\": 36, \"institution\": \"University of Paris-Sud\", \"country\": \"France\", \"national_rank\": 1, \"quality_of_education\": 26, \"alumni_employment\": 101, \"quality_of_faculty\": 26, \"publications\": 73, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 51.72, \"year\": 2013}, {\"world_rank\": 37, \"institution\": \"University of California, Santa Barbara\", \"country\": \"USA\", \"national_rank\": 25, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 28, \"publications\": 89, \"influence\": 91, \"citations\": 38, \"broad_impact\": null, \"patents\": 101, \"score\": 51.67, \"year\": 2013}, {\"world_rank\": 38, \"institution\": \"Purdue University, West Lafayette\", \"country\": \"USA\", \"national_rank\": 26, \"quality_of_education\": 95, \"alumni_employment\": 39, \"quality_of_faculty\": 52, \"publications\": 71, \"influence\": 101, \"citations\": 65, \"broad_impact\": null, \"patents\": 36, \"score\": 51.59, \"year\": 2013}, {\"world_rank\": 39, \"institution\": \"University of Southern California\", \"country\": \"USA\", \"national_rank\": 27, \"quality_of_education\": 101, \"alumni_employment\": 99, \"quality_of_faculty\": 56, \"publications\": 56, \"influence\": 52, \"citations\": 36, \"broad_impact\": null, \"patents\": 40, \"score\": 51.56, \"year\": 2013}, {\"world_rank\": 40, \"institution\": \"Seoul National University\", \"country\": \"South Korea\", \"national_rank\": 1, \"quality_of_education\": 101, \"alumni_employment\": 13, \"quality_of_faculty\": 101, \"publications\": 48, \"influence\": 101, \"citations\": 76, \"broad_impact\": null, \"patents\": 4, \"score\": 51.31, \"year\": 2013}, {\"world_rank\": 41, \"institution\": \"University of Colorado Boulder\", \"country\": \"USA\", \"national_rank\": 28, \"quality_of_education\": 82, \"alumni_employment\": 84, \"quality_of_faculty\": 38, \"publications\": 75, \"influence\": 68, \"citations\": 54, \"broad_impact\": null, \"patents\": 101, \"score\": 51.16, \"year\": 2013}, {\"world_rank\": 42, \"institution\": \"University of Utah\", \"country\": \"USA\", \"national_rank\": 29, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 42, \"publications\": 93, \"influence\": 61, \"citations\": 85, \"broad_impact\": null, \"patents\": 27, \"score\": 51.14, \"year\": 2013}, {\"world_rank\": 43, \"institution\": \"Rutgers University-New Brunswick\", \"country\": \"USA\", \"national_rank\": 30, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 48, \"publications\": 43, \"influence\": 58, \"citations\": 45, \"broad_impact\": null, \"patents\": 96, \"score\": 51.09, \"year\": 2013}, {\"world_rank\": 44, \"institution\": \"University of Minnesota, Twin Cities\", \"country\": \"USA\", \"national_rank\": 31, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 87, \"publications\": 18, \"influence\": 31, \"citations\": 16, \"broad_impact\": null, \"patents\": 67, \"score\": 50.98, \"year\": 2013}, {\"world_rank\": 45, \"institution\": \"University of Edinburgh\", \"country\": \"United Kingdom\", \"national_rank\": 5, \"quality_of_education\": 47, \"alumni_employment\": 101, \"quality_of_faculty\": 45, \"publications\": 52, \"influence\": 36, \"citations\": 63, \"broad_impact\": null, \"patents\": 101, \"score\": 50.98, \"year\": 2013}, {\"world_rank\": 46, \"institution\": \"University of Texas Southwestern Medical Center\", \"country\": \"USA\", \"national_rank\": 32, \"quality_of_education\": 46, \"alumni_employment\": 101, \"quality_of_faculty\": 29, \"publications\": 101, \"influence\": 28, \"citations\": 82, \"broad_impact\": null, \"patents\": 101, \"score\": 50.79, \"year\": 2013}, {\"world_rank\": 47, \"institution\": \"McGill University\", \"country\": \"Canada\", \"national_rank\": 2, \"quality_of_education\": 54, \"alumni_employment\": 62, \"quality_of_faculty\": 59, \"publications\": 34, \"influence\": 42, \"citations\": 48, \"broad_impact\": null, \"patents\": 101, \"score\": 50.77, \"year\": 2013}, {\"world_rank\": 48, \"institution\": \"Pierre-and-Marie-Curie University\", \"country\": \"France\", \"national_rank\": 2, \"quality_of_education\": 19, \"alumni_employment\": 101, \"quality_of_faculty\": 84, \"publications\": 31, \"influence\": 50, \"citations\": 78, \"broad_impact\": null, \"patents\": 81, \"score\": 50.58, \"year\": 2013}, {\"world_rank\": 49, \"institution\": \"Rockefeller University\", \"country\": \"USA\", \"national_rank\": 33, \"quality_of_education\": 55, \"alumni_employment\": 101, \"quality_of_faculty\": 17, \"publications\": 101, \"influence\": 34, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 50.43, \"year\": 2013}, {\"world_rank\": 50, \"institution\": \"Pennsylvania State University, University Park\", \"country\": \"USA\", \"national_rank\": 34, \"quality_of_education\": 101, \"alumni_employment\": 72, \"quality_of_faculty\": 101, \"publications\": 29, \"influence\": 54, \"citations\": 23, \"broad_impact\": null, \"patents\": 67, \"score\": 49.84, \"year\": 2013}, {\"world_rank\": 51, \"institution\": \"Carnegie Mellon University\", \"country\": \"USA\", \"national_rank\": 35, \"quality_of_education\": 30, \"alumni_employment\": 101, \"quality_of_faculty\": 27, \"publications\": 101, \"influence\": 101, \"citations\": 74, \"broad_impact\": null, \"patents\": 101, \"score\": 49.56, \"year\": 2013}, {\"world_rank\": 52, \"institution\": \"Ohio State University, Columbus\", \"country\": \"USA\", \"national_rank\": 36, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 86, \"publications\": 32, \"influence\": 55, \"citations\": 35, \"broad_impact\": null, \"patents\": 60, \"score\": 49.41, \"year\": 2013}, {\"world_rank\": 53, \"institution\": \"University of California, Davis\", \"country\": \"USA\", \"national_rank\": 37, \"quality_of_education\": 60, \"alumni_employment\": 101, \"quality_of_faculty\": 94, \"publications\": 26, \"influence\": 47, \"citations\": 31, \"broad_impact\": null, \"patents\": 90, \"score\": 49.16, \"year\": 2013}, {\"world_rank\": 54, \"institution\": \"Boston University\", \"country\": \"USA\", \"national_rank\": 38, \"quality_of_education\": 101, \"alumni_employment\": 69, \"quality_of_faculty\": 88, \"publications\": 54, \"influence\": 37, \"citations\": 41, \"broad_impact\": null, \"patents\": 100, \"score\": 48.96, \"year\": 2013}, {\"world_rank\": 55, \"institution\": \"University of Florida\", \"country\": \"USA\", \"national_rank\": 39, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 98, \"publications\": 35, \"influence\": 92, \"citations\": 42, \"broad_impact\": null, \"patents\": 9, \"score\": 48.93, \"year\": 2013}, {\"world_rank\": 56, \"institution\": \"University of Geneva\", \"country\": \"Switzerland\", \"national_rank\": 2, \"quality_of_education\": 52, \"alumni_employment\": 101, \"quality_of_faculty\": 30, \"publications\": 101, \"influence\": 78, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 48.83, \"year\": 2013}, {\"world_rank\": 57, \"institution\": \"Tel Aviv University\", \"country\": \"Israel\", \"national_rank\": 3, \"quality_of_education\": 84, \"alumni_employment\": 101, \"quality_of_faculty\": 54, \"publications\": 83, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 32, \"score\": 48.72, \"year\": 2013}, {\"world_rank\": 58, \"institution\": \"University of British Columbia\", \"country\": \"Canada\", \"national_rank\": 3, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 95, \"publications\": 25, \"influence\": 39, \"citations\": 39, \"broad_impact\": null, \"patents\": 100, \"score\": 48.51, \"year\": 2013}, {\"world_rank\": 59, \"institution\": \"University of Maryland, College Park\", \"country\": \"USA\", \"national_rank\": 40, \"quality_of_education\": 79, \"alumni_employment\": 101, \"quality_of_faculty\": 53, \"publications\": 49, \"influence\": 77, \"citations\": 40, \"broad_impact\": null, \"patents\": 101, \"score\": 48.39, \"year\": 2013}, {\"world_rank\": 60, \"institution\": \"Karolinska Institute\", \"country\": \"Sweden\", \"national_rank\": 1, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 47, \"publications\": 64, \"influence\": 38, \"citations\": 62, \"broad_impact\": null, \"patents\": 101, \"score\": 47.98, \"year\": 2013}, {\"world_rank\": 61, \"institution\": \"Vanderbilt University\", \"country\": \"USA\", \"national_rank\": 41, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 53, \"influence\": 40, \"citations\": 60, \"broad_impact\": null, \"patents\": 40, \"score\": 47.8, \"year\": 2013}, {\"world_rank\": 62, \"institution\": \"Sapienza University of Rome\", \"country\": \"Italy\", \"national_rank\": 1, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 31, \"publications\": 76, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 47.75, \"year\": 2013}, {\"world_rank\": 63, \"institution\": \"Washington University in St. Louis\", \"country\": \"USA\", \"national_rank\": 42, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 36, \"influence\": 20, \"citations\": 32, \"broad_impact\": null, \"patents\": 101, \"score\": 47.72, \"year\": 2013}, {\"world_rank\": 64, \"institution\": \"\\u00c3\\u2030cole normale sup\\u00c3\\u00a9rieure - Paris\", \"country\": \"France\", \"national_rank\": 3, \"quality_of_education\": 8, \"alumni_employment\": 101, \"quality_of_faculty\": 57, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 47.7, \"year\": 2013}, {\"world_rank\": 65, \"institution\": \"University of California, Irvine\", \"country\": \"USA\", \"national_rank\": 43, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 39, \"publications\": 69, \"influence\": 67, \"citations\": 61, \"broad_impact\": null, \"patents\": 101, \"score\": 47.52, \"year\": 2013}, {\"world_rank\": 66, \"institution\": \"Technion \\u00e2\\u20ac\\u201c Israel Institute of Technology\", \"country\": \"Israel\", \"national_rank\": 4, \"quality_of_education\": 50, \"alumni_employment\": 101, \"quality_of_faculty\": 36, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 73, \"score\": 47.45, \"year\": 2013}, {\"world_rank\": 67, \"institution\": \"Ludwig Maximilian University of Munich\", \"country\": \"Germany\", \"national_rank\": 1, \"quality_of_education\": 62, \"alumni_employment\": 101, \"quality_of_faculty\": 92, \"publications\": 67, \"influence\": 49, \"citations\": 67, \"broad_impact\": null, \"patents\": 101, \"score\": 47.25, \"year\": 2013}, {\"world_rank\": 68, \"institution\": \"University of Copenhagen\", \"country\": \"Denmark\", \"national_rank\": 1, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 63, \"publications\": 42, \"influence\": 43, \"citations\": 51, \"broad_impact\": null, \"patents\": 101, \"score\": 47.12, \"year\": 2013}, {\"world_rank\": 69, \"institution\": \"University of Pittsburgh - Pittsburgh Campus\", \"country\": \"USA\", \"national_rank\": 44, \"quality_of_education\": 80, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 24, \"influence\": 33, \"citations\": 28, \"broad_impact\": null, \"patents\": 44, \"score\": 47.08, \"year\": 2013}, {\"world_rank\": 70, \"institution\": \"Keio University\", \"country\": \"Japan\", \"national_rank\": 4, \"quality_of_education\": 101, \"alumni_employment\": 6, \"quality_of_faculty\": 101, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 73, \"score\": 47.05, \"year\": 2013}, {\"world_rank\": 71, \"institution\": \"University of Virginia\", \"country\": \"USA\", \"national_rank\": 45, \"quality_of_education\": 101, \"alumni_employment\": 24, \"quality_of_faculty\": 101, \"publications\": 88, \"influence\": 73, \"citations\": 68, \"broad_impact\": null, \"patents\": 63, \"score\": 46.92, \"year\": 2013}, {\"world_rank\": 72, \"institution\": \"University of Manchester\", \"country\": \"United Kingdom\", \"national_rank\": 6, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 76, \"publications\": 47, \"influence\": 63, \"citations\": 57, \"broad_impact\": null, \"patents\": 101, \"score\": 46.85, \"year\": 2013}, {\"world_rank\": 73, \"institution\": \"Arizona State University\", \"country\": \"USA\", \"national_rank\": 46, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 73, \"publications\": 101, \"influence\": 101, \"citations\": 89, \"broad_impact\": null, \"patents\": 20, \"score\": 46.72, \"year\": 2013}, {\"world_rank\": 74, \"institution\": \"University of Zurich\", \"country\": \"Switzerland\", \"national_rank\": 3, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 82, \"publications\": 59, \"influence\": 48, \"citations\": 52, \"broad_impact\": null, \"patents\": 101, \"score\": 46.54, \"year\": 2013}, {\"world_rank\": 75, \"institution\": \"King's College London\", \"country\": \"United Kingdom\", \"national_rank\": 7, \"quality_of_education\": 41, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 45, \"influence\": 45, \"citations\": 44, \"broad_impact\": null, \"patents\": 101, \"score\": 46.53, \"year\": 2013}, {\"world_rank\": 76, \"institution\": \"University of Rochester\", \"country\": \"USA\", \"national_rank\": 47, \"quality_of_education\": 63, \"alumni_employment\": 80, \"quality_of_faculty\": 101, \"publications\": 101, \"influence\": 86, \"citations\": 66, \"broad_impact\": null, \"patents\": 51, \"score\": 46.44, \"year\": 2013}, {\"world_rank\": 77, \"institution\": \"Brown University\", \"country\": \"USA\", \"national_rank\": 48, \"quality_of_education\": 59, \"alumni_employment\": 52, \"quality_of_faculty\": 67, \"publications\": 101, \"influence\": 89, \"citations\": 96, \"broad_impact\": null, \"patents\": 101, \"score\": 46.43, \"year\": 2013}, {\"world_rank\": 78, \"institution\": \"University of Arizona\", \"country\": \"USA\", \"national_rank\": 49, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 90, \"publications\": 60, \"influence\": 57, \"citations\": 49, \"broad_impact\": null, \"patents\": 101, \"score\": 46.39, \"year\": 2013}, {\"world_rank\": 79, \"institution\": \"Ruprecht Karl University of Heidelberg\", \"country\": \"Germany\", \"national_rank\": 2, \"quality_of_education\": 73, \"alumni_employment\": 101, \"quality_of_faculty\": 55, \"publications\": 82, \"influence\": 59, \"citations\": 100, \"broad_impact\": null, \"patents\": 101, \"score\": 46.24, \"year\": 2013}, {\"world_rank\": 80, \"institution\": \"Texas A&M University, College Station\", \"country\": \"USA\", \"national_rank\": 50, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 50, \"publications\": 72, \"influence\": 101, \"citations\": 88, \"broad_impact\": null, \"patents\": 101, \"score\": 46.17, \"year\": 2013}, {\"world_rank\": 81, \"institution\": \"University of Oslo\", \"country\": \"Norway\", \"national_rank\": 1, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 40, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 46.1, \"year\": 2013}, {\"world_rank\": 82, \"institution\": \"Dartmouth College\", \"country\": \"USA\", \"national_rank\": 51, \"quality_of_education\": 45, \"alumni_employment\": 20, \"quality_of_faculty\": 101, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 78, \"score\": 46.04, \"year\": 2013}, {\"world_rank\": 83, \"institution\": \"Swiss Federal Institute of Technology in Lausanne\", \"country\": \"Switzerland\", \"national_rank\": 4, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 85, \"publications\": 101, \"influence\": 101, \"citations\": 83, \"broad_impact\": null, \"patents\": 54, \"score\": 45.73, \"year\": 2013}, {\"world_rank\": 84, \"institution\": \"Utrecht University\", \"country\": \"Netherlands\", \"national_rank\": 1, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 39, \"influence\": 44, \"citations\": 47, \"broad_impact\": null, \"patents\": 101, \"score\": 45.73, \"year\": 2013}, {\"world_rank\": 85, \"institution\": \"Indiana University - Bloomington\", \"country\": \"USA\", \"national_rank\": 52, \"quality_of_education\": 101, \"alumni_employment\": 48, \"quality_of_faculty\": 101, \"publications\": 50, \"influence\": 72, \"citations\": 59, \"broad_impact\": null, \"patents\": 101, \"score\": 45.71, \"year\": 2013}, {\"world_rank\": 86, \"institution\": \"\\u00c3\\u2030cole Polytechnique\", \"country\": \"France\", \"national_rank\": 4, \"quality_of_education\": 101, \"alumni_employment\": 4, \"quality_of_faculty\": 101, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 45.38, \"year\": 2013}, {\"world_rank\": 87, \"institution\": \"National University of Singapore\", \"country\": \"Singapore\", \"national_rank\": 1, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 44, \"influence\": 101, \"citations\": 50, \"broad_impact\": null, \"patents\": 27, \"score\": 45.2, \"year\": 2013}, {\"world_rank\": 88, \"institution\": \"University of Texas MD Anderson Cancer Center\", \"country\": \"USA\", \"national_rank\": 53, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 90, \"influence\": 32, \"citations\": 56, \"broad_impact\": null, \"patents\": 101, \"score\": 45.12, \"year\": 2013}, {\"world_rank\": 89, \"institution\": \"Stony Brook University\", \"country\": \"USA\", \"national_rank\": 54, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 68, \"publications\": 101, \"influence\": 101, \"citations\": 98, \"broad_impact\": null, \"patents\": 90, \"score\": 45.01, \"year\": 2013}, {\"world_rank\": 90, \"institution\": \"Lomonosov Moscow State University\", \"country\": \"Russia\", \"national_rank\": 1, \"quality_of_education\": 14, \"alumni_employment\": 101, \"quality_of_faculty\": 51, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 44.93, \"year\": 2013}, {\"world_rank\": 91, \"institution\": \"Nagoya University\", \"country\": \"Japan\", \"national_rank\": 5, \"quality_of_education\": 72, \"alumni_employment\": 101, \"quality_of_faculty\": 71, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 58, \"score\": 44.78, \"year\": 2013}, {\"world_rank\": 92, \"institution\": \"University of Sydney\", \"country\": \"Australia\", \"national_rank\": 1, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 61, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 48, \"score\": 44.77, \"year\": 2013}, {\"world_rank\": 93, \"institution\": \"Emory University\", \"country\": \"USA\", \"national_rank\": 55, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 66, \"influence\": 41, \"citations\": 53, \"broad_impact\": null, \"patents\": 81, \"score\": 44.53, \"year\": 2013}, {\"world_rank\": 94, \"institution\": \"Rice University\", \"country\": \"USA\", \"national_rank\": 56, \"quality_of_education\": 51, \"alumni_employment\": 101, \"quality_of_faculty\": 97, \"publications\": 101, \"influence\": 101, \"citations\": 64, \"broad_impact\": null, \"patents\": 81, \"score\": 44.53, \"year\": 2013}, {\"world_rank\": 95, \"institution\": \"Tohoku University\", \"country\": \"Japan\", \"national_rank\": 6, \"quality_of_education\": 43, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 65, \"influence\": 101, \"citations\": 91, \"broad_impact\": null, \"patents\": 26, \"score\": 44.52, \"year\": 2013}, {\"world_rank\": 96, \"institution\": \"Australian National University\", \"country\": \"Australia\", \"national_rank\": 2, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 43, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 44.5, \"year\": 2013}, {\"world_rank\": 97, \"institution\": \"University of Alberta\", \"country\": \"Canada\", \"national_rank\": 4, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 68, \"influence\": 101, \"citations\": 92, \"broad_impact\": null, \"patents\": 81, \"score\": 44.5, \"year\": 2013}, {\"world_rank\": 98, \"institution\": \"University of Helsinki\", \"country\": \"Finland\", \"national_rank\": 1, \"quality_of_education\": 69, \"alumni_employment\": 101, \"quality_of_faculty\": 81, \"publications\": 74, \"influence\": 79, \"citations\": 71, \"broad_impact\": null, \"patents\": 101, \"score\": 44.39, \"year\": 2013}, {\"world_rank\": 99, \"institution\": \"Paris Diderot University - Paris 7\", \"country\": \"France\", \"national_rank\": 5, \"quality_of_education\": 28, \"alumni_employment\": 101, \"quality_of_faculty\": 72, \"publications\": 101, \"influence\": 87, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 44.36, \"year\": 2013}, {\"world_rank\": 100, \"institution\": \"Georgia Institute of Technology\", \"country\": \"USA\", \"national_rank\": 57, \"quality_of_education\": 101, \"alumni_employment\": 85, \"quality_of_faculty\": 101, \"publications\": 97, \"influence\": 101, \"citations\": 43, \"broad_impact\": null, \"patents\": 32, \"score\": 44.26, \"year\": 2013}]}}, {\"mode\": \"vega-lite\"});\n",
       "</script>"
      ],
      "text/plain": [
       "alt.Chart(...)"
      ]
     },
     "execution_count": 134,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#3) How can you use Altair to create a scatter plot comparing the quality of faculty and alumni employment for all universities in 2013?\n",
    "\n",
    "\n",
    "import altair as alt\n",
    "\n",
    "scatter_chart = alt.Chart(df[df['year'] == 2013]).mark_circle().encode(\n",
    "    x='quality_of_faculty',\n",
    "    y='alumni_employment',\n",
    "    tooltip=['institution', 'quality_of_faculty', 'alumni_employment']\n",
    ").properties(\n",
    "    title='Scatter Plot: Quality of Faculty vs. Alumni Employment (2013)'\n",
    ")\n",
    "\n",
    "scatter_chart\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "85707844-60d0-4f71-8b10-c5a48ddb53a7",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 4) Using matplotlib, create a horizontal bar chart to display the top 10 universities in terms of influence in 2014.\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Filter the data for the year 2014 and get the top 10 universities by influence\n",
    "top_10_influence_2014 = df[df['year'] == 2014].nlargest(10, 'influence')\n",
    "\n",
    "# Create a horizontal bar chart\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.barh(top_10_influence_2014['institution'], top_10_influence_2014['influence'], color='skyblue')\n",
    "plt.xlabel('Influence Score')\n",
    "plt.title('Top 10 Universities by Influence in 2014')\n",
    "plt.gca().invert_yaxis()  # Invert y-axis for better visualization\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 116,
   "id": "6a38c358-bcea-4c52-8c39-b66bd8ef18c5",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# 5) How can you use seaborn to create a boxplot for the distribution of scores among universities in 2012?\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.boxplot(x='year', y='score', data=df[df['year'] == 2012])\n",
    "plt.xlabel('Year')\n",
    "plt.ylabel('Score')\n",
    "plt.title('Boxplot of Scores Among Universities in 2012')\n",
    "plt.show()\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "94126d6e-8973-4627-b41c-a3a3f00d615b",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "  #altair-viz-973ca5efbae948ee88a89bfb0b4e9957.vega-embed {\n",
       "    width: 100%;\n",
       "    display: flex;\n",
       "  }\n",
       "\n",
       "  #altair-viz-973ca5efbae948ee88a89bfb0b4e9957.vega-embed details,\n",
       "  #altair-viz-973ca5efbae948ee88a89bfb0b4e9957.vega-embed details summary {\n",
       "    position: relative;\n",
       "  }\n",
       "</style>\n",
       "<div id=\"altair-viz-973ca5efbae948ee88a89bfb0b4e9957\"></div>\n",
       "<script type=\"text/javascript\">\n",
       "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
       "  (function(spec, embedOpt){\n",
       "    let outputDiv = document.currentScript.previousElementSibling;\n",
       "    if (outputDiv.id !== \"altair-viz-973ca5efbae948ee88a89bfb0b4e9957\") {\n",
       "      outputDiv = document.getElementById(\"altair-viz-973ca5efbae948ee88a89bfb0b4e9957\");\n",
       "    }\n",
       "    const paths = {\n",
       "      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n",
       "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n",
       "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.16.3?noext\",\n",
       "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n",
       "    };\n",
       "\n",
       "    function maybeLoadScript(lib, version) {\n",
       "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
       "      return (VEGA_DEBUG[key] == version) ?\n",
       "        Promise.resolve(paths[lib]) :\n",
       "        new Promise(function(resolve, reject) {\n",
       "          var s = document.createElement('script');\n",
       "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
       "          s.async = true;\n",
       "          s.onload = () => {\n",
       "            VEGA_DEBUG[key] = version;\n",
       "            return resolve(paths[lib]);\n",
       "          };\n",
       "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
       "          s.src = paths[lib];\n",
       "        });\n",
       "    }\n",
       "\n",
       "    function showError(err) {\n",
       "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
       "      throw err;\n",
       "    }\n",
       "\n",
       "    function displayChart(vegaEmbed) {\n",
       "      vegaEmbed(outputDiv, spec, embedOpt)\n",
       "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
       "    }\n",
       "\n",
       "    if(typeof define === \"function\" && define.amd) {\n",
       "      requirejs.config({paths});\n",
       "      require([\"vega-embed\"], displayChart, err => showError(`Error loading script: ${err.message}`));\n",
       "    } else {\n",
       "      maybeLoadScript(\"vega\", \"5\")\n",
       "        .then(() => maybeLoadScript(\"vega-lite\", \"5.16.3\"))\n",
       "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
       "        .catch(showError)\n",
       "        .then(() => displayChart(vegaEmbed));\n",
       "    }\n",
       "  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"data\": {\"name\": \"data-6f003b8131113d42ea0bde889f8c79c3\"}, \"mark\": {\"type\": \"area\"}, \"encoding\": {\"color\": {\"field\": \"institution\", \"type\": \"nominal\"}, \"tooltip\": [{\"field\": \"institution\", \"type\": \"nominal\"}, {\"field\": \"score\", \"type\": \"quantitative\"}], \"x\": {\"field\": \"year\", \"type\": \"nominal\"}, \"y\": {\"field\": \"score\", \"type\": \"quantitative\"}}, \"title\": \"Stacked Area Plot: Change in Scores for Top 5 Universities (2012-2014)\", \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.16.3.json\", \"datasets\": {\"data-6f003b8131113d42ea0bde889f8c79c3\": [{\"world_rank\": 1, \"institution\": \"Harvard University\", \"country\": \"USA\", \"national_rank\": 1, \"quality_of_education\": 7, \"alumni_employment\": 9, \"quality_of_faculty\": 1, \"publications\": 1, \"influence\": 1, \"citations\": 1, \"broad_impact\": null, \"patents\": 5, \"score\": 100.0, \"year\": 2012}, {\"world_rank\": 1, \"institution\": \"Harvard University\", \"country\": \"USA\", \"national_rank\": 1, \"quality_of_education\": 1, \"alumni_employment\": 1, \"quality_of_faculty\": 1, \"publications\": 1, \"influence\": 1, \"citations\": 1, \"broad_impact\": null, \"patents\": 7, \"score\": 100.0, \"year\": 2013}, {\"world_rank\": 1, \"institution\": \"Harvard University\", \"country\": \"USA\", \"national_rank\": 1, \"quality_of_education\": 1, \"alumni_employment\": 1, \"quality_of_faculty\": 1, \"publications\": 1, \"influence\": 1, \"citations\": 1, \"broad_impact\": 1.0, \"patents\": 2, \"score\": 100.0, \"year\": 2014}, {\"world_rank\": 2, \"institution\": \"Stanford University\", \"country\": \"USA\", \"national_rank\": 2, \"quality_of_education\": 11, \"alumni_employment\": 2, \"quality_of_faculty\": 4, \"publications\": 5, \"influence\": 3, \"citations\": 3, \"broad_impact\": 4.0, \"patents\": 6, \"score\": 99.09, \"year\": 2014}, {\"world_rank\": 3, \"institution\": \"Massachusetts Institute of Technology\", \"country\": \"USA\", \"national_rank\": 3, \"quality_of_education\": 3, \"alumni_employment\": 11, \"quality_of_faculty\": 2, \"publications\": 15, \"influence\": 2, \"citations\": 2, \"broad_impact\": 2.0, \"patents\": 1, \"score\": 98.69, \"year\": 2014}]}}, {\"mode\": \"vega-lite\"});\n",
       "</script>"
      ],
      "text/plain": [
       "alt.Chart(...)"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#6)Create a stacked area plot using Altair to represent the change in scores for the top 5 universities from 2012 to 2014.\n",
    "import altair as alt\n",
    "\n",
    "top_5_scores = df[df['year'].between(2012, 2014)].nlargest(5, 'score')\n",
    "\n",
    "stacked_area_chart = alt.Chart(top_5_scores).mark_area().encode(\n",
    "    x='year:N',\n",
    "    y='score:Q',\n",
    "    color='institution:N',\n",
    "    tooltip=['institution', 'score']\n",
    ").properties(\n",
    "    title='Stacked Area Plot: Change in Scores for Top 5 Universities (2012-2014)'\n",
    ")\n",
    "\n",
    "stacked_area_chart\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "d5d58550-58b4-45ab-be30-1df008af0195",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#7)How can you use matplotlib to create a pie chart illustrating the distribution of universities in the United States and other countries in 2013?\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "us_vs_other_countries = df[df['year'] == 2013]['country'].value_counts()\n",
    "\n",
    "plt.pie(us_vs_other_countries, labels=us_vs_other_countries.index, autopct='%1.1f%%', startangle=90)\n",
    "plt.axis('equal')\n",
    "plt.title('Distribution of Universities in the United States and Other Countries (2013)')\n",
    "plt.show()\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "id": "f66d317c-e414-4eeb-86c0-d9044a2ae4fe",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#8)Using seaborn, create a violin plot to show the distribution of alumni employment scores among universities in 2014.\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.violinplot(x='year', y='alumni_employment', data=df[df['year'] == 2014])\n",
    "plt.xlabel('Year')\n",
    "plt.ylabel('Alumni Employment Score')\n",
    "plt.title('Violin Plot of Alumni Employment Scores Among Universities in 2014')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 136,
   "id": "4154b2a4-df25-4a51-9194-d79e384a581a",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "  #altair-viz-be5e39ee568740beaf1750533feb960d.vega-embed {\n",
       "    width: 100%;\n",
       "    display: flex;\n",
       "  }\n",
       "\n",
       "  #altair-viz-be5e39ee568740beaf1750533feb960d.vega-embed details,\n",
       "  #altair-viz-be5e39ee568740beaf1750533feb960d.vega-embed details summary {\n",
       "    position: relative;\n",
       "  }\n",
       "</style>\n",
       "<div id=\"altair-viz-be5e39ee568740beaf1750533feb960d\"></div>\n",
       "<script type=\"text/javascript\">\n",
       "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
       "  (function(spec, embedOpt){\n",
       "    let outputDiv = document.currentScript.previousElementSibling;\n",
       "    if (outputDiv.id !== \"altair-viz-be5e39ee568740beaf1750533feb960d\") {\n",
       "      outputDiv = document.getElementById(\"altair-viz-be5e39ee568740beaf1750533feb960d\");\n",
       "    }\n",
       "    const paths = {\n",
       "      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n",
       "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n",
       "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.16.3?noext\",\n",
       "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n",
       "    };\n",
       "\n",
       "    function maybeLoadScript(lib, version) {\n",
       "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
       "      return (VEGA_DEBUG[key] == version) ?\n",
       "        Promise.resolve(paths[lib]) :\n",
       "        new Promise(function(resolve, reject) {\n",
       "          var s = document.createElement('script');\n",
       "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
       "          s.async = true;\n",
       "          s.onload = () => {\n",
       "            VEGA_DEBUG[key] = version;\n",
       "            return resolve(paths[lib]);\n",
       "          };\n",
       "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
       "          s.src = paths[lib];\n",
       "        });\n",
       "    }\n",
       "\n",
       "    function showError(err) {\n",
       "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
       "      throw err;\n",
       "    }\n",
       "\n",
       "    function displayChart(vegaEmbed) {\n",
       "      vegaEmbed(outputDiv, spec, embedOpt)\n",
       "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
       "    }\n",
       "\n",
       "    if(typeof define === \"function\" && define.amd) {\n",
       "      requirejs.config({paths});\n",
       "      require([\"vega-embed\"], displayChart, err => showError(`Error loading script: ${err.message}`));\n",
       "    } else {\n",
       "      maybeLoadScript(\"vega\", \"5\")\n",
       "        .then(() => maybeLoadScript(\"vega-lite\", \"5.16.3\"))\n",
       "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
       "        .catch(showError)\n",
       "        .then(() => displayChart(vegaEmbed));\n",
       "    }\n",
       "  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"data\": {\"name\": \"data-10200b951943ac565858a028aaa06e98\"}, \"mark\": {\"type\": \"bar\"}, \"encoding\": {\"color\": {\"field\": \"institution\", \"type\": \"nominal\"}, \"x\": {\"field\": \"score\", \"type\": \"quantitative\"}, \"y\": {\"field\": \"institution\", \"sort\": \"-x\", \"type\": \"nominal\"}}, \"title\": \"Top 10 Universities with Highest Scores in 2014\", \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.16.3.json\", \"datasets\": {\"data-10200b951943ac565858a028aaa06e98\": [{\"world_rank\": 1, \"institution\": \"Harvard University\", \"country\": \"USA\", \"national_rank\": 1, \"quality_of_education\": 1, \"alumni_employment\": 1, \"quality_of_faculty\": 1, \"publications\": 1, \"influence\": 1, \"citations\": 1, \"broad_impact\": 1.0, \"patents\": 2, \"score\": 100.0, \"year\": 2014}, {\"world_rank\": 2, \"institution\": \"Stanford University\", \"country\": \"USA\", \"national_rank\": 2, \"quality_of_education\": 11, \"alumni_employment\": 2, \"quality_of_faculty\": 4, \"publications\": 5, \"influence\": 3, \"citations\": 3, \"broad_impact\": 4.0, \"patents\": 6, \"score\": 99.09, \"year\": 2014}, {\"world_rank\": 3, \"institution\": \"Massachusetts Institute of Technology\", \"country\": \"USA\", \"national_rank\": 3, \"quality_of_education\": 3, \"alumni_employment\": 11, \"quality_of_faculty\": 2, \"publications\": 15, \"influence\": 2, \"citations\": 2, \"broad_impact\": 2.0, \"patents\": 1, \"score\": 98.69, \"year\": 2014}, {\"world_rank\": 4, \"institution\": \"University of Cambridge\", \"country\": \"United Kingdom\", \"national_rank\": 1, \"quality_of_education\": 2, \"alumni_employment\": 10, \"quality_of_faculty\": 5, \"publications\": 10, \"influence\": 9, \"citations\": 12, \"broad_impact\": 13.0, \"patents\": 48, \"score\": 97.64, \"year\": 2014}, {\"world_rank\": 5, \"institution\": \"University of Oxford\", \"country\": \"United Kingdom\", \"national_rank\": 2, \"quality_of_education\": 7, \"alumni_employment\": 12, \"quality_of_faculty\": 10, \"publications\": 11, \"influence\": 12, \"citations\": 11, \"broad_impact\": 12.0, \"patents\": 16, \"score\": 97.51, \"year\": 2014}, {\"world_rank\": 6, \"institution\": \"Columbia University\", \"country\": \"USA\", \"national_rank\": 4, \"quality_of_education\": 13, \"alumni_employment\": 8, \"quality_of_faculty\": 9, \"publications\": 14, \"influence\": 13, \"citations\": 9, \"broad_impact\": 13.0, \"patents\": 4, \"score\": 97.41, \"year\": 2014}, {\"world_rank\": 7, \"institution\": \"University of California, Berkeley\", \"country\": \"USA\", \"national_rank\": 5, \"quality_of_education\": 4, \"alumni_employment\": 22, \"quality_of_faculty\": 6, \"publications\": 7, \"influence\": 4, \"citations\": 3, \"broad_impact\": 7.0, \"patents\": 28, \"score\": 92.84, \"year\": 2014}, {\"world_rank\": 8, \"institution\": \"University of Chicago\", \"country\": \"USA\", \"national_rank\": 6, \"quality_of_education\": 10, \"alumni_employment\": 14, \"quality_of_faculty\": 8, \"publications\": 17, \"influence\": 19, \"citations\": 10, \"broad_impact\": 18.0, \"patents\": 149, \"score\": 92.03, \"year\": 2014}, {\"world_rank\": 9, \"institution\": \"Princeton University\", \"country\": \"USA\", \"national_rank\": 7, \"quality_of_education\": 5, \"alumni_employment\": 16, \"quality_of_faculty\": 3, \"publications\": 70, \"influence\": 25, \"citations\": 19, \"broad_impact\": 41.0, \"patents\": 204, \"score\": 88.56, \"year\": 2014}, {\"world_rank\": 10, \"institution\": \"Yale University\", \"country\": \"USA\", \"national_rank\": 8, \"quality_of_education\": 9, \"alumni_employment\": 25, \"quality_of_faculty\": 11, \"publications\": 18, \"influence\": 7, \"citations\": 32, \"broad_impact\": 19.0, \"patents\": 45, \"score\": 88.11, \"year\": 2014}]}}, {\"mode\": \"vega-lite\"});\n",
       "</script>"
      ],
      "text/plain": [
       "alt.Chart(...)"
      ]
     },
     "execution_count": 136,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#9)How can you use Altair to create a bar chart for the top 10 universities with the highest scores in 2014?\n",
    "import altair as alt\n",
    "\n",
    "# Filter the data for the year 2014 and get the top 10 universities by score\n",
    "top_10_scores_2014 = df[df['year'] == 2014].nlargest(10, 'score')\n",
    "\n",
    "# Create a bar chart using Altair\n",
    "bar_chart = alt.Chart(top_10_scores_2014).mark_bar().encode(\n",
    "    x='score:Q',\n",
    "    y=alt.Y('institution:N', sort='-x'),\n",
    "    color='institution:N'\n",
    ").properties(\n",
    "    title='Top 10 Universities with Highest Scores in 2014'\n",
    ")\n",
    "\n",
    "bar_chart\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 137,
   "id": "69fb04c3-b908-467a-9c79-55e8ee6cd079",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#10)Create a scatter plot using matplotlib to visualize the correlation between the quality of education and the quality of faculty for all universities in 2012.\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Filter the data for the year 2012\n",
    "data_2012 = df[df['year'] == 2012]\n",
    "\n",
    "# Create a scatter plot\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.scatter(data_2012['quality_of_education'], data_2012['quality_of_faculty'])\n",
    "plt.xlabel('Quality of Education')\n",
    "plt.ylabel('Quality of Faculty')\n",
    "plt.title('Correlation between Quality of Education and Quality of Faculty (2012)')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "2298fc15-c41b-4a3c-a0ad-5d0ba870a55c",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\axisgrid.py:118: UserWarning: The figure layout has changed to tight\n",
      "  self._figure.tight_layout(*args, **kwargs)\n",
      "C:\\Users\\HP\\AppData\\Local\\Temp\\ipykernel_16952\\548045505.py:10: UserWarning: The figure layout has changed to tight\n",
      "  plt.tight_layout()\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 750x750 with 12 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#11)How can you use seaborn to create a pair plot to visualize the relationships between the scores, influence, and citations for the top 10 universities in 2013?\n",
    "import seaborn as sns\n",
    "\n",
    "# Filter the data for the year 2013 and get the top 10 universities by score\n",
    "top_10_scores_2013 = df[df['year'] == 2013].nlargest(10, 'score')\n",
    "\n",
    "# Create a pair plot using Seaborn\n",
    "sns.pairplot(top_10_scores_2013[['score', 'influence', 'citations']])\n",
    "plt.suptitle('Pair Plot for Scores, Influence, and Citations in Top 10 Universities (2013)', y=1.02)\n",
    "plt.tight_layout()\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "448c7478-e506-4201-b024-0dde32a7ffa9",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "  #altair-viz-cfc20f749bba41fe859bd1b0e9b33a80.vega-embed {\n",
       "    width: 100%;\n",
       "    display: flex;\n",
       "  }\n",
       "\n",
       "  #altair-viz-cfc20f749bba41fe859bd1b0e9b33a80.vega-embed details,\n",
       "  #altair-viz-cfc20f749bba41fe859bd1b0e9b33a80.vega-embed details summary {\n",
       "    position: relative;\n",
       "  }\n",
       "</style>\n",
       "<div id=\"altair-viz-cfc20f749bba41fe859bd1b0e9b33a80\"></div>\n",
       "<script type=\"text/javascript\">\n",
       "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
       "  (function(spec, embedOpt){\n",
       "    let outputDiv = document.currentScript.previousElementSibling;\n",
       "    if (outputDiv.id !== \"altair-viz-cfc20f749bba41fe859bd1b0e9b33a80\") {\n",
       "      outputDiv = document.getElementById(\"altair-viz-cfc20f749bba41fe859bd1b0e9b33a80\");\n",
       "    }\n",
       "    const paths = {\n",
       "      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n",
       "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n",
       "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.16.3?noext\",\n",
       "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n",
       "    };\n",
       "\n",
       "    function maybeLoadScript(lib, version) {\n",
       "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
       "      return (VEGA_DEBUG[key] == version) ?\n",
       "        Promise.resolve(paths[lib]) :\n",
       "        new Promise(function(resolve, reject) {\n",
       "          var s = document.createElement('script');\n",
       "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
       "          s.async = true;\n",
       "          s.onload = () => {\n",
       "            VEGA_DEBUG[key] = version;\n",
       "            return resolve(paths[lib]);\n",
       "          };\n",
       "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
       "          s.src = paths[lib];\n",
       "        });\n",
       "    }\n",
       "\n",
       "    function showError(err) {\n",
       "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
       "      throw err;\n",
       "    }\n",
       "\n",
       "    function displayChart(vegaEmbed) {\n",
       "      vegaEmbed(outputDiv, spec, embedOpt)\n",
       "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
       "    }\n",
       "\n",
       "    if(typeof define === \"function\" && define.amd) {\n",
       "      requirejs.config({paths});\n",
       "      require([\"vega-embed\"], displayChart, err => showError(`Error loading script: ${err.message}`));\n",
       "    } else {\n",
       "      maybeLoadScript(\"vega\", \"5\")\n",
       "        .then(() => maybeLoadScript(\"vega-lite\", \"5.16.3\"))\n",
       "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
       "        .catch(showError)\n",
       "        .then(() => displayChart(vegaEmbed));\n",
       "    }\n",
       "  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"data\": {\"name\": \"data-16d9edeb18944280ebcabf32c4d1bba1\"}, \"mark\": {\"type\": \"bar\"}, \"encoding\": {\"color\": {\"field\": \"country\", \"type\": \"nominal\"}, \"x\": {\"field\": \"score\", \"type\": \"quantitative\"}, \"y\": {\"field\": \"institution\", \"type\": \"nominal\"}}, \"title\": \"Comparison of Scores: US vs UK (2014)\", \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.16.3.json\", \"datasets\": {\"data-16d9edeb18944280ebcabf32c4d1bba1\": [{\"world_rank\": 4, \"institution\": \"University of Cambridge\", \"country\": \"United Kingdom\", \"national_rank\": 1, \"quality_of_education\": 2, \"alumni_employment\": 10, \"quality_of_faculty\": 5, \"publications\": 10, \"influence\": 9, \"citations\": 12, \"broad_impact\": 13.0, \"patents\": 48, \"score\": 97.64, \"year\": 2014}, {\"world_rank\": 5, \"institution\": \"University of Oxford\", \"country\": \"United Kingdom\", \"national_rank\": 2, \"quality_of_education\": 7, \"alumni_employment\": 12, \"quality_of_faculty\": 10, \"publications\": 11, \"influence\": 12, \"citations\": 11, \"broad_impact\": 12.0, \"patents\": 16, \"score\": 97.51, \"year\": 2014}, {\"world_rank\": 30, \"institution\": \"University College London\", \"country\": \"United Kingdom\", \"national_rank\": 3, \"quality_of_education\": 20, \"alumni_employment\": 406, \"quality_of_faculty\": 52, \"publications\": 13, \"influence\": 22, \"citations\": 18, \"broad_impact\": 21.0, \"patents\": 121, \"score\": 61.05, \"year\": 2014}, {\"world_rank\": 39, \"institution\": \"Imperial College London\", \"country\": \"United Kingdom\", \"national_rank\": 4, \"quality_of_education\": 121, \"alumni_employment\": 98, \"quality_of_faculty\": 38, \"publications\": 20, \"influence\": 27, \"citations\": 31, \"broad_impact\": 17.0, \"patents\": 34, \"score\": 58.85, \"year\": 2014}, {\"world_rank\": 56, \"institution\": \"University of Edinburgh\", \"country\": \"United Kingdom\", \"national_rank\": 5, \"quality_of_education\": 42, \"alumni_employment\": 131, \"quality_of_faculty\": 36, \"publications\": 54, \"influence\": 42, \"citations\": 55, \"broad_impact\": 46.0, \"patents\": 307, \"score\": 55.2, \"year\": 2014}, {\"world_rank\": 69, \"institution\": \"University of Manchester\", \"country\": \"United Kingdom\", \"national_rank\": 6, \"quality_of_education\": 98, \"alumni_employment\": 73, \"quality_of_faculty\": 74, \"publications\": 41, \"influence\": 68, \"citations\": 43, \"broad_impact\": 59.0, \"patents\": 94, \"score\": 53.9, \"year\": 2014}, {\"world_rank\": 90, \"institution\": \"King's College London\", \"country\": \"United Kingdom\", \"national_rank\": 7, \"quality_of_education\": 28, \"alumni_employment\": 173, \"quality_of_faculty\": 114, \"publications\": 84, \"influence\": 132, \"citations\": 87, \"broad_impact\": 77.0, \"patents\": 181, \"score\": 52.31, \"year\": 2014}, {\"world_rank\": 123, \"institution\": \"University of Bristol\", \"country\": \"United Kingdom\", \"national_rank\": 8, \"quality_of_education\": 177, \"alumni_employment\": 242, \"quality_of_faculty\": 76, \"publications\": 87, \"influence\": 69, \"citations\": 99, \"broad_impact\": 110.0, \"patents\": 338, \"score\": 49.97, \"year\": 2014}, {\"world_rank\": 137, \"institution\": \"University of Glasgow\", \"country\": \"United Kingdom\", \"national_rank\": 9, \"quality_of_education\": 219, \"alumni_employment\": 112, \"quality_of_faculty\": 210, \"publications\": 118, \"influence\": 131, \"citations\": 87, \"broad_impact\": 92.0, \"patents\": 280, \"score\": 49.64, \"year\": 2014}, {\"world_rank\": 142, \"institution\": \"University of Birmingham\", \"country\": \"United Kingdom\", \"national_rank\": 10, \"quality_of_education\": 58, \"alumni_employment\": 119, \"quality_of_faculty\": 198, \"publications\": 116, \"influence\": 160, \"citations\": 150, \"broad_impact\": 135.0, \"patents\": 204, \"score\": 49.48, \"year\": 2014}, {\"world_rank\": 146, \"institution\": \"University of Southampton\", \"country\": \"United Kingdom\", \"national_rank\": 11, \"quality_of_education\": 315, \"alumni_employment\": 81, \"quality_of_faculty\": 210, \"publications\": 115, \"influence\": 129, \"citations\": 107, \"broad_impact\": 129.0, \"patents\": 259, \"score\": 49.42, \"year\": 2014}, {\"world_rank\": 147, \"institution\": \"University of Nottingham\", \"country\": \"United Kingdom\", \"national_rank\": 12, \"quality_of_education\": 128, \"alumni_employment\": 148, \"quality_of_faculty\": 85, \"publications\": 113, \"influence\": 174, \"citations\": 150, \"broad_impact\": 135.0, \"patents\": 159, \"score\": 49.41, \"year\": 2014}, {\"world_rank\": 151, \"institution\": \"University of Leeds\", \"country\": \"United Kingdom\", \"national_rank\": 13, \"quality_of_education\": 84, \"alumni_employment\": 93, \"quality_of_faculty\": 210, \"publications\": 132, \"influence\": 134, \"citations\": 134, \"broad_impact\": 151.0, \"patents\": 280, \"score\": 49.23, \"year\": 2014}, {\"world_rank\": 178, \"institution\": \"University of Sheffield\", \"country\": \"United Kingdom\", \"national_rank\": 14, \"quality_of_education\": 131, \"alumni_employment\": 257, \"quality_of_faculty\": 190, \"publications\": 124, \"influence\": 127, \"citations\": 114, \"broad_impact\": 145.0, \"patents\": 227, \"score\": 48.55, \"year\": 2014}, {\"world_rank\": 190, \"institution\": \"University of Sussex\", \"country\": \"United Kingdom\", \"national_rank\": 15, \"quality_of_education\": 138, \"alumni_employment\": 218, \"quality_of_faculty\": 40, \"publications\": 368, \"influence\": 261, \"citations\": 176, \"broad_impact\": 306.0, \"patents\": 481, \"score\": 48.12, \"year\": 2014}, {\"world_rank\": 209, \"institution\": \"Cardiff University\", \"country\": \"United Kingdom\", \"national_rank\": 16, \"quality_of_education\": 306, \"alumni_employment\": 183, \"quality_of_faculty\": 135, \"publications\": 183, \"influence\": 153, \"citations\": 310, \"broad_impact\": 189.0, \"patents\": 170, \"score\": 47.74, \"year\": 2014}, {\"world_rank\": 211, \"institution\": \"University of Liverpool\", \"country\": \"United Kingdom\", \"national_rank\": 17, \"quality_of_education\": 159, \"alumni_employment\": 248, \"quality_of_faculty\": 200, \"publications\": 149, \"influence\": 163, \"citations\": 134, \"broad_impact\": 189.0, \"patents\": 373, \"score\": 47.69, \"year\": 2014}, {\"world_rank\": 214, \"institution\": \"Queen Mary University of London\", \"country\": \"United Kingdom\", \"national_rank\": 18, \"quality_of_education\": 133, \"alumni_employment\": 348, \"quality_of_faculty\": 210, \"publications\": 231, \"influence\": 181, \"citations\": 220, \"broad_impact\": 141.0, \"patents\": 227, \"score\": 47.67, \"year\": 2014}, {\"world_rank\": 229, \"institution\": \"Newcastle University\", \"country\": \"United Kingdom\", \"national_rank\": 19, \"quality_of_education\": 355, \"alumni_employment\": 250, \"quality_of_faculty\": 210, \"publications\": 200, \"influence\": 149, \"citations\": 200, \"broad_impact\": 164.0, \"patents\": 481, \"score\": 47.42, \"year\": 2014}, {\"world_rank\": 252, \"institution\": \"University of Dundee\", \"country\": \"United Kingdom\", \"national_rank\": 20, \"quality_of_education\": 164, \"alumni_employment\": 478, \"quality_of_faculty\": 210, \"publications\": 354, \"influence\": 200, \"citations\": 134, \"broad_impact\": 184.0, \"patents\": 227, \"score\": 47.04, \"year\": 2014}, {\"world_rank\": 257, \"institution\": \"London School of Hygiene & Tropical Medicine\", \"country\": \"United Kingdom\", \"national_rank\": 21, \"quality_of_education\": 355, \"alumni_employment\": 478, \"quality_of_faculty\": 154, \"publications\": 302, \"influence\": 306, \"citations\": 250, \"broad_impact\": 169.0, \"patents\": 737, \"score\": 46.93, \"year\": 2014}, {\"world_rank\": 263, \"institution\": \"University of Leicester\", \"country\": \"United Kingdom\", \"national_rank\": 22, \"quality_of_education\": 355, \"alumni_employment\": 478, \"quality_of_faculty\": 210, \"publications\": 254, \"influence\": 140, \"citations\": 220, \"broad_impact\": 185.0, \"patents\": 373, \"score\": 46.87, \"year\": 2014}, {\"world_rank\": 264, \"institution\": \"Durham University\", \"country\": \"United Kingdom\", \"national_rank\": 23, \"quality_of_education\": 122, \"alumni_employment\": 237, \"quality_of_faculty\": 210, \"publications\": 250, \"influence\": 203, \"citations\": 250, \"broad_impact\": 230.0, \"patents\": 373, \"score\": 46.87, \"year\": 2014}, {\"world_rank\": 276, \"institution\": \"University of Aberdeen\", \"country\": \"United Kingdom\", \"national_rank\": 24, \"quality_of_education\": 347, \"alumni_employment\": 223, \"quality_of_faculty\": 210, \"publications\": 282, \"influence\": 217, \"citations\": 250, \"broad_impact\": 224.0, \"patents\": 481, \"score\": 46.63, \"year\": 2014}, {\"world_rank\": 287, \"institution\": \"University of Reading\", \"country\": \"United Kingdom\", \"national_rank\": 25, \"quality_of_education\": 241, \"alumni_employment\": 78, \"quality_of_faculty\": 210, \"publications\": 393, \"influence\": 319, \"citations\": 220, \"broad_impact\": 355.0, \"patents\": 481, \"score\": 46.49, \"year\": 2014}, {\"world_rank\": 306, \"institution\": \"London School of Economics\", \"country\": \"United Kingdom\", \"national_rank\": 26, \"quality_of_education\": 70, \"alumni_employment\": 139, \"quality_of_faculty\": 75, \"publications\": 520, \"influence\": 742, \"citations\": 310, \"broad_impact\": 596.0, \"patents\": 737, \"score\": 46.3, \"year\": 2014}, {\"world_rank\": 317, \"institution\": \"University of Hull\", \"country\": \"United Kingdom\", \"national_rank\": 27, \"quality_of_education\": 287, \"alumni_employment\": 253, \"quality_of_faculty\": 158, \"publications\": 612, \"influence\": 554, \"citations\": 493, \"broad_impact\": 256.0, \"patents\": 552, \"score\": 46.21, \"year\": 2014}, {\"world_rank\": 323, \"institution\": \"University of St Andrews\", \"country\": \"United Kingdom\", \"national_rank\": 28, \"quality_of_education\": 125, \"alumni_employment\": 478, \"quality_of_faculty\": 210, \"publications\": 317, \"influence\": 193, \"citations\": 363, \"broad_impact\": 281.0, \"patents\": 280, \"score\": 46.15, \"year\": 2014}, {\"world_rank\": 324, \"institution\": \"University of Warwick\", \"country\": \"United Kingdom\", \"national_rank\": 29, \"quality_of_education\": 198, \"alumni_employment\": 394, \"quality_of_faculty\": 210, \"publications\": 224, \"influence\": 253, \"citations\": 200, \"broad_impact\": 326.0, \"patents\": 259, \"score\": 46.13, \"year\": 2014}, {\"world_rank\": 336, \"institution\": \"University of York\", \"country\": \"United Kingdom\", \"national_rank\": 30, \"quality_of_education\": 355, \"alumni_employment\": 478, \"quality_of_faculty\": 210, \"publications\": 272, \"influence\": 209, \"citations\": 159, \"broad_impact\": 295.0, \"patents\": 481, \"score\": 45.99, \"year\": 2014}, {\"world_rank\": 342, \"institution\": \"Queen's University Belfast\", \"country\": \"United Kingdom\", \"national_rank\": 31, \"quality_of_education\": 169, \"alumni_employment\": 399, \"quality_of_faculty\": 210, \"publications\": 308, \"influence\": 284, \"citations\": 283, \"broad_impact\": 295.0, \"patents\": 737, \"score\": 45.95, \"year\": 2014}, {\"world_rank\": 345, \"institution\": \"St George's, University of London\", \"country\": \"United Kingdom\", \"national_rank\": 32, \"quality_of_education\": 355, \"alumni_employment\": 478, \"quality_of_faculty\": 210, \"publications\": 525, \"influence\": 459, \"citations\": 310, \"broad_impact\": 256.0, \"patents\": 552, \"score\": 45.91, \"year\": 2014}, {\"world_rank\": 350, \"institution\": \"University of East Anglia\", \"country\": \"United Kingdom\", \"national_rank\": 33, \"quality_of_education\": 187, \"alumni_employment\": 478, \"quality_of_faculty\": 174, \"publications\": 356, \"influence\": 210, \"citations\": 187, \"broad_impact\": 318.0, \"patents\": 637, \"score\": 45.87, \"year\": 2014}, {\"world_rank\": 357, \"institution\": \"University of Exeter\", \"country\": \"United Kingdom\", \"national_rank\": 34, \"quality_of_education\": 250, \"alumni_employment\": 371, \"quality_of_faculty\": 210, \"publications\": 309, \"influence\": 188, \"citations\": 406, \"broad_impact\": 322.0, \"patents\": 481, \"score\": 45.79, \"year\": 2014}, {\"world_rank\": 397, \"institution\": \"Cranfield University\", \"country\": \"United Kingdom\", \"national_rank\": 35, \"quality_of_education\": 355, \"alumni_employment\": 71, \"quality_of_faculty\": 210, \"publications\": 728, \"influence\": 731, \"citations\": 800, \"broad_impact\": 769.0, \"patents\": 737, \"score\": 45.56, \"year\": 2014}, {\"world_rank\": 409, \"institution\": \"Brunel University\", \"country\": \"United Kingdom\", \"national_rank\": 36, \"quality_of_education\": 355, \"alumni_employment\": 147, \"quality_of_faculty\": 210, \"publications\": 486, \"influence\": 612, \"citations\": 609, \"broad_impact\": 420.0, \"patents\": 481, \"score\": 45.5, \"year\": 2014}, {\"world_rank\": 421, \"institution\": \"University of Bath\", \"country\": \"United Kingdom\", \"national_rank\": 37, \"quality_of_education\": 355, \"alumni_employment\": 352, \"quality_of_faculty\": 210, \"publications\": 387, \"influence\": 379, \"citations\": 310, \"broad_impact\": 355.0, \"patents\": 552, \"score\": 45.44, \"year\": 2014}, {\"world_rank\": 449, \"institution\": \"Lancaster University\", \"country\": \"United Kingdom\", \"national_rank\": 38, \"quality_of_education\": 355, \"alumni_employment\": 339, \"quality_of_faculty\": 210, \"publications\": 372, \"influence\": 398, \"citations\": 250, \"broad_impact\": 380.0, \"patents\": 637, \"score\": 45.33, \"year\": 2014}, {\"world_rank\": 472, \"institution\": \"University of Strathclyde\", \"country\": \"United Kingdom\", \"national_rank\": 39, \"quality_of_education\": 355, \"alumni_employment\": 245, \"quality_of_faculty\": 210, \"publications\": 382, \"influence\": 454, \"citations\": 406, \"broad_impact\": 460.0, \"patents\": 426, \"score\": 45.22, \"year\": 2014}, {\"world_rank\": 494, \"institution\": \"City University London\", \"country\": \"United Kingdom\", \"national_rank\": 40, \"quality_of_education\": 355, \"alumni_employment\": 103, \"quality_of_faculty\": 210, \"publications\": 808, \"influence\": 868, \"citations\": 800, \"broad_impact\": 874.0, \"patents\": 637, \"score\": 45.14, \"year\": 2014}, {\"world_rank\": 499, \"institution\": \"University of Surrey\", \"country\": \"United Kingdom\", \"national_rank\": 41, \"quality_of_education\": 195, \"alumni_employment\": 234, \"quality_of_faculty\": 210, \"publications\": 414, \"influence\": 548, \"citations\": 406, \"broad_impact\": 569.0, \"patents\": 338, \"score\": 45.12, \"year\": 2014}, {\"world_rank\": 541, \"institution\": \"Royal Holloway, University of London\", \"country\": \"United Kingdom\", \"national_rank\": 42, \"quality_of_education\": 355, \"alumni_employment\": 478, \"quality_of_faculty\": 210, \"publications\": 560, \"influence\": 317, \"citations\": 406, \"broad_impact\": 442.0, \"patents\": 373, \"score\": 44.98, \"year\": 2014}, {\"world_rank\": 552, \"institution\": \"Bangor University\", \"country\": \"United Kingdom\", \"national_rank\": 43, \"quality_of_education\": 246, \"alumni_employment\": 360, \"quality_of_faculty\": 210, \"publications\": 624, \"influence\": 526, \"citations\": 609, \"broad_impact\": 504.0, \"patents\": 373, \"score\": 44.95, \"year\": 2014}, {\"world_rank\": 563, \"institution\": \"University of Essex\", \"country\": \"United Kingdom\", \"national_rank\": 44, \"quality_of_education\": 106, \"alumni_employment\": 335, \"quality_of_faculty\": 210, \"publications\": 710, \"influence\": 651, \"citations\": 406, \"broad_impact\": 642.0, \"patents\": 737, \"score\": 44.92, \"year\": 2014}, {\"world_rank\": 577, \"institution\": \"Plymouth University\", \"country\": \"United Kingdom\", \"national_rank\": 45, \"quality_of_education\": 355, \"alumni_employment\": 437, \"quality_of_faculty\": 210, \"publications\": 534, \"influence\": 425, \"citations\": 493, \"broad_impact\": 514.0, \"patents\": 426, \"score\": 44.88, \"year\": 2014}, {\"world_rank\": 624, \"institution\": \"Birkbeck, University of London\", \"country\": \"United Kingdom\", \"national_rank\": 46, \"quality_of_education\": 281, \"alumni_employment\": 478, \"quality_of_faculty\": 180, \"publications\": 718, \"influence\": 343, \"citations\": 493, \"broad_impact\": 569.0, \"patents\": 737, \"score\": 44.76, \"year\": 2014}, {\"world_rank\": 630, \"institution\": \"Open University (UK)\", \"country\": \"United Kingdom\", \"national_rank\": 47, \"quality_of_education\": 355, \"alumni_employment\": 478, \"quality_of_faculty\": 210, \"publications\": 613, \"influence\": 301, \"citations\": 800, \"broad_impact\": 536.0, \"patents\": 637, \"score\": 44.74, \"year\": 2014}, {\"world_rank\": 640, \"institution\": \"University of Portsmouth\", \"country\": \"United Kingdom\", \"national_rank\": 48, \"quality_of_education\": 355, \"alumni_employment\": 478, \"quality_of_faculty\": 210, \"publications\": 759, \"influence\": 697, \"citations\": 310, \"broad_impact\": 543.0, \"patents\": 637, \"score\": 44.73, \"year\": 2014}, {\"world_rank\": 645, \"institution\": \"University of Hertfordshire\", \"country\": \"United Kingdom\", \"national_rank\": 49, \"quality_of_education\": 355, \"alumni_employment\": 478, \"quality_of_faculty\": 210, \"publications\": 792, \"influence\": 390, \"citations\": 609, \"broad_impact\": 536.0, \"patents\": 637, \"score\": 44.72, \"year\": 2014}, {\"world_rank\": 663, \"institution\": \"Keele University\", \"country\": \"United Kingdom\", \"national_rank\": 50, \"quality_of_education\": 355, \"alumni_employment\": 478, \"quality_of_faculty\": 210, \"publications\": 635, \"influence\": 535, \"citations\": 406, \"broad_impact\": 569.0, \"patents\": 737, \"score\": 44.69, \"year\": 2014}, {\"world_rank\": 693, \"institution\": \"University of Kent\", \"country\": \"United Kingdom\", \"national_rank\": 51, \"quality_of_education\": 355, \"alumni_employment\": 375, \"quality_of_faculty\": 210, \"publications\": 656, \"influence\": 458, \"citations\": 609, \"broad_impact\": 663.0, \"patents\": 737, \"score\": 44.65, \"year\": 2014}, {\"world_rank\": 699, \"institution\": \"Swansea University\", \"country\": \"United Kingdom\", \"national_rank\": 52, \"quality_of_education\": 355, \"alumni_employment\": 355, \"quality_of_faculty\": 210, \"publications\": 533, \"influence\": 544, \"citations\": 609, \"broad_impact\": 703.0, \"patents\": 552, \"score\": 44.65, \"year\": 2014}, {\"world_rank\": 703, \"institution\": \"Heriot-Watt University\", \"country\": \"United Kingdom\", \"national_rank\": 53, \"quality_of_education\": 355, \"alumni_employment\": 381, \"quality_of_faculty\": 210, \"publications\": 602, \"influence\": 601, \"citations\": 609, \"broad_impact\": 690.0, \"patents\": 552, \"score\": 44.64, \"year\": 2014}, {\"world_rank\": 705, \"institution\": \"Loughborough University\", \"country\": \"United Kingdom\", \"national_rank\": 54, \"quality_of_education\": 355, \"alumni_employment\": 478, \"quality_of_faculty\": 210, \"publications\": 497, \"influence\": 778, \"citations\": 609, \"broad_impact\": 628.0, \"patents\": 637, \"score\": 44.63, \"year\": 2014}, {\"world_rank\": 707, \"institution\": \"Aston University\", \"country\": \"United Kingdom\", \"national_rank\": 55, \"quality_of_education\": 355, \"alumni_employment\": 331, \"quality_of_faculty\": 210, \"publications\": 839, \"influence\": 879, \"citations\": 493, \"broad_impact\": 739.0, \"patents\": 338, \"score\": 44.63, \"year\": 2014}, {\"world_rank\": 724, \"institution\": \"Liverpool John Moores University\", \"country\": \"United Kingdom\", \"national_rank\": 56, \"quality_of_education\": 355, \"alumni_employment\": 478, \"quality_of_faculty\": 210, \"publications\": 744, \"influence\": 421, \"citations\": 609, \"broad_impact\": 618.0, \"patents\": 737, \"score\": 44.61, \"year\": 2014}, {\"world_rank\": 735, \"institution\": \"University of Stirling\", \"country\": \"United Kingdom\", \"national_rank\": 57, \"quality_of_education\": 355, \"alumni_employment\": 334, \"quality_of_faculty\": 210, \"publications\": 804, \"influence\": 717, \"citations\": 609, \"broad_impact\": 716.0, \"patents\": 737, \"score\": 44.6, \"year\": 2014}, {\"world_rank\": 738, \"institution\": \"University of Ulster\", \"country\": \"United Kingdom\", \"national_rank\": 58, \"quality_of_education\": 355, \"alumni_employment\": 478, \"quality_of_faculty\": 210, \"publications\": 940, \"influence\": 895, \"citations\": 493, \"broad_impact\": 739.0, \"patents\": 259, \"score\": 44.6, \"year\": 2014}, {\"world_rank\": 800, \"institution\": \"Aberystwyth University\", \"country\": \"United Kingdom\", \"national_rank\": 59, \"quality_of_education\": 355, \"alumni_employment\": 478, \"quality_of_faculty\": 210, \"publications\": 818, \"influence\": 562, \"citations\": 493, \"broad_impact\": 716.0, \"patents\": 481, \"score\": 44.53, \"year\": 2014}, {\"world_rank\": 806, \"institution\": \"University of Bradford\", \"country\": \"United Kingdom\", \"national_rank\": 60, \"quality_of_education\": 355, \"alumni_employment\": 341, \"quality_of_faculty\": 210, \"publications\": 851, \"influence\": 755, \"citations\": 609, \"broad_impact\": 819.0, \"patents\": 481, \"score\": 44.52, \"year\": 2014}, {\"world_rank\": 817, \"institution\": \"Manchester Metropolitan University\", \"country\": \"United Kingdom\", \"national_rank\": 61, \"quality_of_education\": 355, \"alumni_employment\": 442, \"quality_of_faculty\": 210, \"publications\": 919, \"influence\": 679, \"citations\": 800, \"broad_impact\": 800.0, \"patents\": 481, \"score\": 44.5, \"year\": 2014}, {\"world_rank\": 822, \"institution\": \"Royal Veterinary College, University of London\", \"country\": \"United Kingdom\", \"national_rank\": 62, \"quality_of_education\": 205, \"alumni_employment\": 478, \"quality_of_faculty\": 210, \"publications\": 827, \"influence\": 551, \"citations\": 493, \"broad_impact\": 819.0, \"patents\": 737, \"score\": 44.49, \"year\": 2014}, {\"world_rank\": 825, \"institution\": \"University of Brighton\", \"country\": \"United Kingdom\", \"national_rank\": 63, \"quality_of_education\": 355, \"alumni_employment\": 478, \"quality_of_faculty\": 210, \"publications\": 860, \"influence\": 841, \"citations\": 800, \"broad_impact\": 749.0, \"patents\": 552, \"score\": 44.48, \"year\": 2014}, {\"world_rank\": 892, \"institution\": \"University of Wales, Trinity Saint David\", \"country\": \"United Kingdom\", \"national_rank\": 64, \"quality_of_education\": 355, \"alumni_employment\": 478, \"quality_of_faculty\": 210, \"publications\": 966, \"influence\": 859, \"citations\": 406, \"broad_impact\": 843.0, \"patents\": 737, \"score\": 44.4, \"year\": 2014}]}}, {\"mode\": \"vega-lite\"});\n",
       "</script>"
      ],
      "text/plain": [
       "alt.Chart(...)"
      ]
     },
     "execution_count": 140,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#12)Using Altair, create a bar chart to compare the scores of universities in the United States and the United Kingdom in 2014.\n",
    "# Filter the data for the year 2014 and universities in the United States and the United Kingdom\n",
    "us_uk_scores_2014 = df[(df['year'] == 2014) & (df['country'].isin(['United States', 'United Kingdom']))]\n",
    "\n",
    "# Create a bar chart using Altair\n",
    "bar_chart_us_uk = alt.Chart(us_uk_scores_2014).mark_bar().encode(\n",
    "    x='score:Q',\n",
    "    y='institution:N',\n",
    "    color='country:N'\n",
    ").properties(\n",
    "    title='Comparison of Scores: US vs UK (2014)'\n",
    ")\n",
    "\n",
    "bar_chart_us_uk\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "49185c28-6056-4c72-bd57-1873bef94699",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#13)How can you use matplotlib to create a stacked bar chart illustrating the distribution of universities in different countries in 2012?\n",
    "# Filter the data for the year 2012\n",
    "data_2012 = df[df['year'] == 2012]\n",
    "\n",
    "# Create a stacked bar chart using Matplotlib\n",
    "country_counts = data_2012['country'].value_counts()\n",
    "plt.figure(figsize=(12, 6))\n",
    "plt.bar(country_counts.index, country_counts.values)\n",
    "plt.xlabel('Country')\n",
    "plt.ylabel('Number of Universities')\n",
    "plt.title('Distribution of Universities in Different Countries (2012)')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "26fb3981-5cb6-441a-9ce7-1889243cd0a0",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x800 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#14)Create a heatmap using seaborn to visualize the correlation matrix of the numerical columns in the dataset.\n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "# Select numerical columns for the correlation matrix\n",
    "numerical_columns = df.select_dtypes(include=['float64', 'int64']).columns\n",
    "\n",
    "# Create the correlation matrix\n",
    "correlation_matrix = df[numerical_columns].corr()\n",
    "\n",
    "# Create a heatmap using seaborn\n",
    "plt.figure(figsize=(10, 8))\n",
    "sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=\".2f\")\n",
    "plt.title('Correlation Matrix of Numerical Columns')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "fd214021-588e-4d85-b2e4-99d9f383c5bb",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "  #altair-viz-4fcedb0f09bf4672881bbcc3b4cfd10f.vega-embed {\n",
       "    width: 100%;\n",
       "    display: flex;\n",
       "  }\n",
       "\n",
       "  #altair-viz-4fcedb0f09bf4672881bbcc3b4cfd10f.vega-embed details,\n",
       "  #altair-viz-4fcedb0f09bf4672881bbcc3b4cfd10f.vega-embed details summary {\n",
       "    position: relative;\n",
       "  }\n",
       "</style>\n",
       "<div id=\"altair-viz-4fcedb0f09bf4672881bbcc3b4cfd10f\"></div>\n",
       "<script type=\"text/javascript\">\n",
       "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
       "  (function(spec, embedOpt){\n",
       "    let outputDiv = document.currentScript.previousElementSibling;\n",
       "    if (outputDiv.id !== \"altair-viz-4fcedb0f09bf4672881bbcc3b4cfd10f\") {\n",
       "      outputDiv = document.getElementById(\"altair-viz-4fcedb0f09bf4672881bbcc3b4cfd10f\");\n",
       "    }\n",
       "    const paths = {\n",
       "      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n",
       "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n",
       "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.16.3?noext\",\n",
       "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n",
       "    };\n",
       "\n",
       "    function maybeLoadScript(lib, version) {\n",
       "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
       "      return (VEGA_DEBUG[key] == version) ?\n",
       "        Promise.resolve(paths[lib]) :\n",
       "        new Promise(function(resolve, reject) {\n",
       "          var s = document.createElement('script');\n",
       "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
       "          s.async = true;\n",
       "          s.onload = () => {\n",
       "            VEGA_DEBUG[key] = version;\n",
       "            return resolve(paths[lib]);\n",
       "          };\n",
       "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
       "          s.src = paths[lib];\n",
       "        });\n",
       "    }\n",
       "\n",
       "    function showError(err) {\n",
       "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
       "      throw err;\n",
       "    }\n",
       "\n",
       "    function displayChart(vegaEmbed) {\n",
       "      vegaEmbed(outputDiv, spec, embedOpt)\n",
       "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
       "    }\n",
       "\n",
       "    if(typeof define === \"function\" && define.amd) {\n",
       "      requirejs.config({paths});\n",
       "      require([\"vega-embed\"], displayChart, err => showError(`Error loading script: ${err.message}`));\n",
       "    } else {\n",
       "      maybeLoadScript(\"vega\", \"5\")\n",
       "        .then(() => maybeLoadScript(\"vega-lite\", \"5.16.3\"))\n",
       "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
       "        .catch(showError)\n",
       "        .then(() => displayChart(vegaEmbed));\n",
       "    }\n",
       "  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"data\": {\"name\": \"data-3480d36d55d84f54cc6b4096164679a8\"}, \"mark\": {\"type\": \"line\"}, \"encoding\": {\"color\": {\"field\": \"institution\", \"type\": \"nominal\"}, \"tooltip\": [{\"field\": \"institution\", \"type\": \"nominal\"}, {\"field\": \"score\", \"type\": \"quantitative\"}], \"x\": {\"field\": \"institution\", \"type\": \"nominal\"}, \"y\": {\"field\": \"score\", \"type\": \"quantitative\"}}, \"title\": \"Line Chart: Trend of Scores for Top 5 Universities (2014)\", \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.16.3.json\", \"datasets\": {\"data-3480d36d55d84f54cc6b4096164679a8\": [{\"world_rank\": 1, \"institution\": \"Harvard University\", \"country\": \"USA\", \"national_rank\": 1, \"quality_of_education\": 1, \"alumni_employment\": 1, \"quality_of_faculty\": 1, \"publications\": 1, \"influence\": 1, \"citations\": 1, \"broad_impact\": 1.0, \"patents\": 2, \"score\": 100.0, \"year\": 2014}, {\"world_rank\": 2, \"institution\": \"Stanford University\", \"country\": \"USA\", \"national_rank\": 2, \"quality_of_education\": 11, \"alumni_employment\": 2, \"quality_of_faculty\": 4, \"publications\": 5, \"influence\": 3, \"citations\": 3, \"broad_impact\": 4.0, \"patents\": 6, \"score\": 99.09, \"year\": 2014}, {\"world_rank\": 3, \"institution\": \"Massachusetts Institute of Technology\", \"country\": \"USA\", \"national_rank\": 3, \"quality_of_education\": 3, \"alumni_employment\": 11, \"quality_of_faculty\": 2, \"publications\": 15, \"influence\": 2, \"citations\": 2, \"broad_impact\": 2.0, \"patents\": 1, \"score\": 98.69, \"year\": 2014}, {\"world_rank\": 4, \"institution\": \"University of Cambridge\", \"country\": \"United Kingdom\", \"national_rank\": 1, \"quality_of_education\": 2, \"alumni_employment\": 10, \"quality_of_faculty\": 5, \"publications\": 10, \"influence\": 9, \"citations\": 12, \"broad_impact\": 13.0, \"patents\": 48, \"score\": 97.64, \"year\": 2014}, {\"world_rank\": 5, \"institution\": \"University of Oxford\", \"country\": \"United Kingdom\", \"national_rank\": 2, \"quality_of_education\": 7, \"alumni_employment\": 12, \"quality_of_faculty\": 10, \"publications\": 11, \"influence\": 12, \"citations\": 11, \"broad_impact\": 12.0, \"patents\": 16, \"score\": 97.51, \"year\": 2014}]}}, {\"mode\": \"vega-lite\"});\n",
       "</script>"
      ],
      "text/plain": [
       "alt.Chart(...)"
      ]
     },
     "execution_count": 145,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#15)How can you use Altair to create a line chart showing the trend of scores for the top 5 universities in 2014?\n",
    "import altair as alt\n",
    "\n",
    "# Filter the data for the year 2014 and get the top 5 universities by score\n",
    "top_5_scores_2014 = df[df['year'] == 2014].nlargest(5, 'score')\n",
    "\n",
    "# Create a line chart using Altair\n",
    "line_chart = alt.Chart(top_5_scores_2014).mark_line().encode(\n",
    "    x='institution:N',\n",
    "    y='score:Q',\n",
    "    color='institution:N',\n",
    "    tooltip=['institution', 'score']\n",
    ").properties(\n",
    "    title='Line Chart: Trend of Scores for Top 5 Universities (2014)'\n",
    ")\n",
    "\n",
    "line_chart\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "id": "993b9910-12ba-4532-9f81-f873869c5eed",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#16)Using matplotlib, create a bar chart to show the average scores for universities in each country in 2013.\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas as pd\n",
    "\n",
    "# Assuming you already have a DataFrame named 'df' with the necessary data\n",
    "\n",
    "# Filter the data for the year 2013\n",
    "scores_2013 = df[df['year'] == 2013]\n",
    "\n",
    "# Calculate average scores for each country\n",
    "average_scores_by_country = scores_2013.groupby('country')['score'].mean().reset_index()\n",
    "\n",
    "# Sort the data by average score in descending order\n",
    "average_scores_by_country = average_scores_by_country.sort_values(by='score', ascending=False)\n",
    "\n",
    "# Create a bar chart using matplotlib\n",
    "plt.figure(figsize=(12, 6))\n",
    "plt.bar(average_scores_by_country['country'], average_scores_by_country['score'], color='skyblue')\n",
    "plt.title('Average Scores for Universities in Each Country (2013)')\n",
    "plt.xlabel('Country')\n",
    "plt.ylabel('Average Score')\n",
    "plt.xticks(rotation=45, ha='right')  # Rotate x-axis labels for better visibility\n",
    "plt.tight_layout()  # Adjust layout to prevent clipping of labels\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 161,
   "id": "8b252249-37b7-4318-84b5-68b9b2bbe038",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 83.4% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 78.1% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 82.4% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 22.2% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 14.3% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 70.6% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 65.6% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 82.0% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 90.5% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 84.0% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 18.2% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 80.0% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 38.5% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 80.9% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 40.0% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 70.4% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 66.7% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 85.4% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 72.2% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 16.7% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 50.0% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 33.3% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 71.4% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 60.0% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 87.5% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 75.0% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 82.5% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 11.1% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 67.6% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 89.3% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 9.1% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n",
      "C:\\Users\\HP\\anaconda3\\Lib\\site-packages\\seaborn\\categorical.py:3544: UserWarning: 20.0% of the points cannot be placed; you may want to decrease the size of the markers or use stripplot.\n",
      "  warnings.warn(msg, UserWarning)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#17)How can you use seaborn to create a swarm plot to visualize the distribution of scores among universities in 2014?\n",
    "# Filter the data for the year 2014\n",
    "scores_2014 = df[df['year'] == 2014]\n",
    "\n",
    "# Create a swarm plot using seaborn\n",
    "plt.figure(figsize=(12, 6))\n",
    "sns.swarmplot(x='country', y='score', data=scores_2014, size=2)\n",
    "plt.title('Swarm Plot: Distribution of Scores Among Universities (2014)')\n",
    "plt.xlabel('Country')\n",
    "plt.ylabel('Score')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 155,
   "id": "8f07e76b-f6cc-4d77-81ec-47b90e9b6284",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "  #altair-viz-7ab6c83964bc46179ac97f557f6b285e.vega-embed {\n",
       "    width: 100%;\n",
       "    display: flex;\n",
       "  }\n",
       "\n",
       "  #altair-viz-7ab6c83964bc46179ac97f557f6b285e.vega-embed details,\n",
       "  #altair-viz-7ab6c83964bc46179ac97f557f6b285e.vega-embed details summary {\n",
       "    position: relative;\n",
       "  }\n",
       "</style>\n",
       "<div id=\"altair-viz-7ab6c83964bc46179ac97f557f6b285e\"></div>\n",
       "<script type=\"text/javascript\">\n",
       "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
       "  (function(spec, embedOpt){\n",
       "    let outputDiv = document.currentScript.previousElementSibling;\n",
       "    if (outputDiv.id !== \"altair-viz-7ab6c83964bc46179ac97f557f6b285e\") {\n",
       "      outputDiv = document.getElementById(\"altair-viz-7ab6c83964bc46179ac97f557f6b285e\");\n",
       "    }\n",
       "    const paths = {\n",
       "      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n",
       "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n",
       "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.16.3?noext\",\n",
       "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n",
       "    };\n",
       "\n",
       "    function maybeLoadScript(lib, version) {\n",
       "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
       "      return (VEGA_DEBUG[key] == version) ?\n",
       "        Promise.resolve(paths[lib]) :\n",
       "        new Promise(function(resolve, reject) {\n",
       "          var s = document.createElement('script');\n",
       "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
       "          s.async = true;\n",
       "          s.onload = () => {\n",
       "            VEGA_DEBUG[key] = version;\n",
       "            return resolve(paths[lib]);\n",
       "          };\n",
       "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
       "          s.src = paths[lib];\n",
       "        });\n",
       "    }\n",
       "\n",
       "    function showError(err) {\n",
       "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
       "      throw err;\n",
       "    }\n",
       "\n",
       "    function displayChart(vegaEmbed) {\n",
       "      vegaEmbed(outputDiv, spec, embedOpt)\n",
       "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
       "    }\n",
       "\n",
       "    if(typeof define === \"function\" && define.amd) {\n",
       "      requirejs.config({paths});\n",
       "      require([\"vega-embed\"], displayChart, err => showError(`Error loading script: ${err.message}`));\n",
       "    } else {\n",
       "      maybeLoadScript(\"vega\", \"5\")\n",
       "        .then(() => maybeLoadScript(\"vega-lite\", \"5.16.3\"))\n",
       "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
       "        .catch(showError)\n",
       "        .then(() => displayChart(vegaEmbed));\n",
       "    }\n",
       "  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"data\": {\"name\": \"data-2241a14c21c2435e43d34c0f726fd3b0\"}, \"mark\": {\"type\": \"rect\"}, \"encoding\": {\"color\": {\"aggregate\": \"count\", \"type\": \"quantitative\"}, \"tooltip\": [{\"field\": \"country\", \"type\": \"nominal\"}, {\"aggregate\": \"count\", \"type\": \"quantitative\"}]}, \"title\": \"Treemap: Proportion of Universities in Each Country (2012)\", \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.16.3.json\", \"datasets\": {\"data-2241a14c21c2435e43d34c0f726fd3b0\": [{\"world_rank\": 1, \"institution\": \"Harvard University\", \"country\": \"USA\", \"national_rank\": 1, \"quality_of_education\": 7, \"alumni_employment\": 9, \"quality_of_faculty\": 1, \"publications\": 1, \"influence\": 1, \"citations\": 1, \"broad_impact\": null, \"patents\": 5, \"score\": 100.0, \"year\": 2012}, {\"world_rank\": 2, \"institution\": \"Massachusetts Institute of Technology\", \"country\": \"USA\", \"national_rank\": 2, \"quality_of_education\": 9, \"alumni_employment\": 17, \"quality_of_faculty\": 3, \"publications\": 12, \"influence\": 4, \"citations\": 4, \"broad_impact\": null, \"patents\": 1, \"score\": 91.67, \"year\": 2012}, {\"world_rank\": 3, \"institution\": \"Stanford University\", \"country\": \"USA\", \"national_rank\": 3, \"quality_of_education\": 17, \"alumni_employment\": 11, \"quality_of_faculty\": 5, \"publications\": 4, \"influence\": 2, \"citations\": 2, \"broad_impact\": null, \"patents\": 15, \"score\": 89.5, \"year\": 2012}, {\"world_rank\": 4, \"institution\": \"University of Cambridge\", \"country\": \"United Kingdom\", \"national_rank\": 1, \"quality_of_education\": 10, \"alumni_employment\": 24, \"quality_of_faculty\": 4, \"publications\": 16, \"influence\": 16, \"citations\": 11, \"broad_impact\": null, \"patents\": 50, \"score\": 86.17, \"year\": 2012}, {\"world_rank\": 5, \"institution\": \"California Institute of Technology\", \"country\": \"USA\", \"national_rank\": 4, \"quality_of_education\": 2, \"alumni_employment\": 29, \"quality_of_faculty\": 7, \"publications\": 37, \"influence\": 22, \"citations\": 22, \"broad_impact\": null, \"patents\": 18, \"score\": 85.21, \"year\": 2012}, {\"world_rank\": 6, \"institution\": \"Princeton University\", \"country\": \"USA\", \"national_rank\": 5, \"quality_of_education\": 8, \"alumni_employment\": 14, \"quality_of_faculty\": 2, \"publications\": 53, \"influence\": 33, \"citations\": 26, \"broad_impact\": null, \"patents\": 101, \"score\": 82.5, \"year\": 2012}, {\"world_rank\": 7, \"institution\": \"University of Oxford\", \"country\": \"United Kingdom\", \"national_rank\": 2, \"quality_of_education\": 13, \"alumni_employment\": 28, \"quality_of_faculty\": 9, \"publications\": 15, \"influence\": 13, \"citations\": 19, \"broad_impact\": null, \"patents\": 26, \"score\": 82.34, \"year\": 2012}, {\"world_rank\": 8, \"institution\": \"Yale University\", \"country\": \"USA\", \"national_rank\": 6, \"quality_of_education\": 14, \"alumni_employment\": 31, \"quality_of_faculty\": 12, \"publications\": 14, \"influence\": 6, \"citations\": 15, \"broad_impact\": null, \"patents\": 66, \"score\": 79.14, \"year\": 2012}, {\"world_rank\": 9, \"institution\": \"Columbia University\", \"country\": \"USA\", \"national_rank\": 7, \"quality_of_education\": 23, \"alumni_employment\": 21, \"quality_of_faculty\": 10, \"publications\": 13, \"influence\": 12, \"citations\": 14, \"broad_impact\": null, \"patents\": 5, \"score\": 78.86, \"year\": 2012}, {\"world_rank\": 10, \"institution\": \"University of California, Berkeley\", \"country\": \"USA\", \"national_rank\": 8, \"quality_of_education\": 16, \"alumni_employment\": 52, \"quality_of_faculty\": 6, \"publications\": 6, \"influence\": 5, \"citations\": 3, \"broad_impact\": null, \"patents\": 16, \"score\": 78.55, \"year\": 2012}, {\"world_rank\": 11, \"institution\": \"University of Chicago\", \"country\": \"USA\", \"national_rank\": 9, \"quality_of_education\": 15, \"alumni_employment\": 26, \"quality_of_faculty\": 8, \"publications\": 34, \"influence\": 20, \"citations\": 28, \"broad_impact\": null, \"patents\": 101, \"score\": 73.82, \"year\": 2012}, {\"world_rank\": 12, \"institution\": \"Cornell University\", \"country\": \"USA\", \"national_rank\": 10, \"quality_of_education\": 21, \"alumni_employment\": 42, \"quality_of_faculty\": 14, \"publications\": 22, \"influence\": 21, \"citations\": 16, \"broad_impact\": null, \"patents\": 10, \"score\": 73.69, \"year\": 2012}, {\"world_rank\": 13, \"institution\": \"University of Pennsylvania\", \"country\": \"USA\", \"national_rank\": 11, \"quality_of_education\": 31, \"alumni_employment\": 16, \"quality_of_faculty\": 24, \"publications\": 9, \"influence\": 10, \"citations\": 8, \"broad_impact\": null, \"patents\": 9, \"score\": 73.64, \"year\": 2012}, {\"world_rank\": 14, \"institution\": \"University of Tokyo\", \"country\": \"Japan\", \"national_rank\": 1, \"quality_of_education\": 32, \"alumni_employment\": 19, \"quality_of_faculty\": 31, \"publications\": 8, \"influence\": 19, \"citations\": 23, \"broad_impact\": null, \"patents\": 3, \"score\": 69.49, \"year\": 2012}, {\"world_rank\": 15, \"institution\": \"Johns Hopkins University\", \"country\": \"USA\", \"national_rank\": 12, \"quality_of_education\": 34, \"alumni_employment\": 77, \"quality_of_faculty\": 20, \"publications\": 11, \"influence\": 9, \"citations\": 9, \"broad_impact\": null, \"patents\": 7, \"score\": 66.94, \"year\": 2012}, {\"world_rank\": 16, \"institution\": \"Swiss Federal Institute of Technology in Zurich\", \"country\": \"Switzerland\", \"national_rank\": 1, \"quality_of_education\": 26, \"alumni_employment\": 66, \"quality_of_faculty\": 11, \"publications\": 40, \"influence\": 51, \"citations\": 44, \"broad_impact\": null, \"patents\": 34, \"score\": 66.69, \"year\": 2012}, {\"world_rank\": 17, \"institution\": \"Kyoto University\", \"country\": \"Japan\", \"national_rank\": 2, \"quality_of_education\": 42, \"alumni_employment\": 38, \"quality_of_faculty\": 19, \"publications\": 25, \"influence\": 36, \"citations\": 43, \"broad_impact\": null, \"patents\": 23, \"score\": 65.76, \"year\": 2012}, {\"world_rank\": 18, \"institution\": \"Weizmann Institute of Science\", \"country\": \"Israel\", \"national_rank\": 1, \"quality_of_education\": 4, \"alumni_employment\": 101, \"quality_of_faculty\": 22, \"publications\": 101, \"influence\": 67, \"citations\": 101, \"broad_impact\": null, \"patents\": 29, \"score\": 65.09, \"year\": 2012}, {\"world_rank\": 19, \"institution\": \"University of California, Los Angeles\", \"country\": \"USA\", \"national_rank\": 13, \"quality_of_education\": 62, \"alumni_employment\": 59, \"quality_of_faculty\": 23, \"publications\": 3, \"influence\": 11, \"citations\": 6, \"broad_impact\": null, \"patents\": 13, \"score\": 64.05, \"year\": 2012}, {\"world_rank\": 20, \"institution\": \"University of California, San Diego\", \"country\": \"USA\", \"national_rank\": 14, \"quality_of_education\": 61, \"alumni_employment\": 101, \"quality_of_faculty\": 15, \"publications\": 10, \"influence\": 8, \"citations\": 10, \"broad_impact\": null, \"patents\": 22, \"score\": 63.11, \"year\": 2012}, {\"world_rank\": 21, \"institution\": \"Rockefeller University\", \"country\": \"USA\", \"national_rank\": 15, \"quality_of_education\": 1, \"alumni_employment\": 101, \"quality_of_faculty\": 16, \"publications\": 101, \"influence\": 28, \"citations\": 96, \"broad_impact\": null, \"patents\": 101, \"score\": 61.74, \"year\": 2012}, {\"world_rank\": 22, \"institution\": \"Hebrew University of Jerusalem\", \"country\": \"Israel\", \"national_rank\": 2, \"quality_of_education\": 24, \"alumni_employment\": 93, \"quality_of_faculty\": 13, \"publications\": 101, \"influence\": 91, \"citations\": 101, \"broad_impact\": null, \"patents\": 28, \"score\": 60.76, \"year\": 2012}, {\"world_rank\": 23, \"institution\": \"New York University\", \"country\": \"USA\", \"national_rank\": 16, \"quality_of_education\": 89, \"alumni_employment\": 75, \"quality_of_faculty\": 17, \"publications\": 42, \"influence\": 24, \"citations\": 34, \"broad_impact\": null, \"patents\": 62, \"score\": 60.55, \"year\": 2012}, {\"world_rank\": 24, \"institution\": \"University of California, San Francisco\", \"country\": \"USA\", \"national_rank\": 17, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 21, \"publications\": 19, \"influence\": 3, \"citations\": 13, \"broad_impact\": null, \"patents\": 33, \"score\": 59.7, \"year\": 2012}, {\"world_rank\": 25, \"institution\": \"University of Wisconsin\\u00e2\\u20ac\\u201cMadison\", \"country\": \"USA\", \"national_rank\": 18, \"quality_of_education\": 64, \"alumni_employment\": 63, \"quality_of_faculty\": 33, \"publications\": 17, \"influence\": 30, \"citations\": 21, \"broad_impact\": null, \"patents\": 21, \"score\": 59.66, \"year\": 2012}, {\"world_rank\": 26, \"institution\": \"University of Illinois at Urbana\\u00e2\\u20ac\\u201cChampaign\", \"country\": \"USA\", \"national_rank\": 19, \"quality_of_education\": 82, \"alumni_employment\": 101, \"quality_of_faculty\": 18, \"publications\": 35, \"influence\": 71, \"citations\": 39, \"broad_impact\": null, \"patents\": 44, \"score\": 59.0, \"year\": 2012}, {\"world_rank\": 27, \"institution\": \"Duke University\", \"country\": \"USA\", \"national_rank\": 20, \"quality_of_education\": 65, \"alumni_employment\": 43, \"quality_of_faculty\": 55, \"publications\": 20, \"influence\": 15, \"citations\": 12, \"broad_impact\": null, \"patents\": 20, \"score\": 58.37, \"year\": 2012}, {\"world_rank\": 28, \"institution\": \"Imperial College London\", \"country\": \"United Kingdom\", \"national_rank\": 3, \"quality_of_education\": 84, \"alumni_employment\": 73, \"quality_of_faculty\": 35, \"publications\": 26, \"influence\": 26, \"citations\": 29, \"broad_impact\": null, \"patents\": 41, \"score\": 57.53, \"year\": 2012}, {\"world_rank\": 29, \"institution\": \"University of Texas Southwestern Medical Center\", \"country\": \"USA\", \"national_rank\": 21, \"quality_of_education\": 19, \"alumni_employment\": 101, \"quality_of_faculty\": 32, \"publications\": 101, \"influence\": 43, \"citations\": 84, \"broad_impact\": null, \"patents\": 101, \"score\": 56.43, \"year\": 2012}, {\"world_rank\": 30, \"institution\": \"University of Texas at Austin\", \"country\": \"USA\", \"national_rank\": 22, \"quality_of_education\": 101, \"alumni_employment\": 78, \"quality_of_faculty\": 27, \"publications\": 41, \"influence\": 47, \"citations\": 40, \"broad_impact\": null, \"patents\": 57, \"score\": 56.18, \"year\": 2012}, {\"world_rank\": 31, \"institution\": \"University College London\", \"country\": \"United Kingdom\", \"national_rank\": 4, \"quality_of_education\": 35, \"alumni_employment\": 101, \"quality_of_faculty\": 45, \"publications\": 27, \"influence\": 23, \"citations\": 33, \"broad_impact\": null, \"patents\": 86, \"score\": 55.21, \"year\": 2012}, {\"world_rank\": 32, \"institution\": \"Osaka University\", \"country\": \"Japan\", \"national_rank\": 3, \"quality_of_education\": 77, \"alumni_employment\": 101, \"quality_of_faculty\": 44, \"publications\": 39, \"influence\": 44, \"citations\": 51, \"broad_impact\": null, \"patents\": 11, \"score\": 54.43, \"year\": 2012}, {\"world_rank\": 33, \"institution\": \"Northwestern University\", \"country\": \"USA\", \"national_rank\": 23, \"quality_of_education\": 101, \"alumni_employment\": 32, \"quality_of_faculty\": 101, \"publications\": 24, \"influence\": 25, \"citations\": 20, \"broad_impact\": null, \"patents\": 35, \"score\": 54.4, \"year\": 2012}, {\"world_rank\": 34, \"institution\": \"University of Michigan, Ann Arbor\", \"country\": \"USA\", \"national_rank\": 24, \"quality_of_education\": 68, \"alumni_employment\": 60, \"quality_of_faculty\": 101, \"publications\": 2, \"influence\": 17, \"citations\": 7, \"broad_impact\": null, \"patents\": 8, \"score\": 53.72, \"year\": 2012}, {\"world_rank\": 35, \"institution\": \"University of Toronto\", \"country\": \"Canada\", \"national_rank\": 1, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 34, \"publications\": 7, \"influence\": 14, \"citations\": 18, \"broad_impact\": null, \"patents\": 101, \"score\": 53.43, \"year\": 2012}, {\"world_rank\": 36, \"institution\": \"University of North Carolina at Chapel Hill\", \"country\": \"USA\", \"national_rank\": 25, \"quality_of_education\": 101, \"alumni_employment\": 86, \"quality_of_faculty\": 56, \"publications\": 31, \"influence\": 29, \"citations\": 31, \"broad_impact\": null, \"patents\": 29, \"score\": 53.09, \"year\": 2012}, {\"world_rank\": 37, \"institution\": \"Washington University in St. Louis\", \"country\": \"USA\", \"national_rank\": 26, \"quality_of_education\": 74, \"alumni_employment\": 62, \"quality_of_faculty\": 101, \"publications\": 32, \"influence\": 18, \"citations\": 30, \"broad_impact\": null, \"patents\": 14, \"score\": 52.9, \"year\": 2012}, {\"world_rank\": 38, \"institution\": \"University of Utah\", \"country\": \"USA\", \"national_rank\": 27, \"quality_of_education\": 92, \"alumni_employment\": 101, \"quality_of_faculty\": 41, \"publications\": 74, \"influence\": 52, \"citations\": 67, \"broad_impact\": null, \"patents\": 12, \"score\": 52.64, \"year\": 2012}, {\"world_rank\": 39, \"institution\": \"University of Washington - Seattle\", \"country\": \"USA\", \"national_rank\": 28, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 40, \"publications\": 5, \"influence\": 7, \"citations\": 5, \"broad_impact\": null, \"patents\": 101, \"score\": 52.25, \"year\": 2012}, {\"world_rank\": 40, \"institution\": \"University of California, Santa Barbara\", \"country\": \"USA\", \"national_rank\": 29, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 28, \"publications\": 68, \"influence\": 72, \"citations\": 36, \"broad_impact\": null, \"patents\": 101, \"score\": 52.15, \"year\": 2012}, {\"world_rank\": 41, \"institution\": \"McGill University\", \"country\": \"Canada\", \"national_rank\": 2, \"quality_of_education\": 70, \"alumni_employment\": 91, \"quality_of_faculty\": 54, \"publications\": 33, \"influence\": 39, \"citations\": 47, \"broad_impact\": null, \"patents\": 101, \"score\": 51.72, \"year\": 2012}, {\"world_rank\": 42, \"institution\": \"Purdue University, West Lafayette\", \"country\": \"USA\", \"national_rank\": 30, \"quality_of_education\": 95, \"alumni_employment\": 70, \"quality_of_faculty\": 49, \"publications\": 61, \"influence\": 101, \"citations\": 58, \"broad_impact\": null, \"patents\": 19, \"score\": 51.66, \"year\": 2012}, {\"world_rank\": 43, \"institution\": \"Carnegie Mellon University\", \"country\": \"USA\", \"national_rank\": 31, \"quality_of_education\": 30, \"alumni_employment\": 81, \"quality_of_faculty\": 26, \"publications\": 101, \"influence\": 101, \"citations\": 61, \"broad_impact\": null, \"patents\": 101, \"score\": 51.6, \"year\": 2012}, {\"world_rank\": 44, \"institution\": \"University of Southern California\", \"country\": \"USA\", \"national_rank\": 32, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 63, \"publications\": 46, \"influence\": 48, \"citations\": 32, \"broad_impact\": null, \"patents\": 23, \"score\": 51.38, \"year\": 2012}, {\"world_rank\": 45, \"institution\": \"University of California, Davis\", \"country\": \"USA\", \"national_rank\": 33, \"quality_of_education\": 79, \"alumni_employment\": 101, \"quality_of_faculty\": 92, \"publications\": 23, \"influence\": 40, \"citations\": 25, \"broad_impact\": null, \"patents\": 32, \"score\": 51.06, \"year\": 2012}, {\"world_rank\": 46, \"institution\": \"University of Colorado Boulder\", \"country\": \"USA\", \"national_rank\": 34, \"quality_of_education\": 83, \"alumni_employment\": 88, \"quality_of_faculty\": 48, \"publications\": 71, \"influence\": 54, \"citations\": 56, \"broad_impact\": null, \"patents\": 101, \"score\": 50.68, \"year\": 2012}, {\"world_rank\": 47, \"institution\": \"University of California, Irvine\", \"country\": \"USA\", \"national_rank\": 35, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 38, \"publications\": 59, \"influence\": 57, \"citations\": 52, \"broad_impact\": null, \"patents\": 65, \"score\": 50.64, \"year\": 2012}, {\"world_rank\": 48, \"institution\": \"University of Paris-Sud\", \"country\": \"France\", \"national_rank\": 1, \"quality_of_education\": 48, \"alumni_employment\": 101, \"quality_of_faculty\": 25, \"publications\": 73, \"influence\": 96, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 50.44, \"year\": 2012}, {\"world_rank\": 49, \"institution\": \"University of Minnesota, Twin Cities\", \"country\": \"USA\", \"national_rank\": 36, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 85, \"publications\": 18, \"influence\": 31, \"citations\": 17, \"broad_impact\": null, \"patents\": 84, \"score\": 50.3, \"year\": 2012}, {\"world_rank\": 50, \"institution\": \"University of Arizona\", \"country\": \"USA\", \"national_rank\": 37, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 88, \"publications\": 45, \"influence\": 42, \"citations\": 45, \"broad_impact\": null, \"patents\": 27, \"score\": 50.29, \"year\": 2012}, {\"world_rank\": 51, \"institution\": \"Technion \\u00e2\\u20ac\\u201c Israel Institute of Technology\", \"country\": \"Israel\", \"national_rank\": 3, \"quality_of_education\": 45, \"alumni_employment\": 89, \"quality_of_faculty\": 36, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 51, \"score\": 50.01, \"year\": 2012}, {\"world_rank\": 52, \"institution\": \"Ohio State University, Columbus\", \"country\": \"USA\", \"national_rank\": 38, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 83, \"publications\": 30, \"influence\": 50, \"citations\": 35, \"broad_impact\": null, \"patents\": 54, \"score\": 49.54, \"year\": 2012}, {\"world_rank\": 53, \"institution\": \"University of Rochester\", \"country\": \"USA\", \"national_rank\": 39, \"quality_of_education\": 41, \"alumni_employment\": 54, \"quality_of_faculty\": 101, \"publications\": 82, \"influence\": 68, \"citations\": 54, \"broad_impact\": null, \"patents\": 62, \"score\": 49.51, \"year\": 2012}, {\"world_rank\": 54, \"institution\": \"\\u00c3\\u2030cole normale sup\\u00c3\\u00a9rieure - Paris\", \"country\": \"France\", \"national_rank\": 2, \"quality_of_education\": 3, \"alumni_employment\": 61, \"quality_of_faculty\": 77, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 49.1, \"year\": 2012}, {\"world_rank\": 55, \"institution\": \"University of Florida\", \"country\": \"USA\", \"national_rank\": 40, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 96, \"publications\": 29, \"influence\": 74, \"citations\": 42, \"broad_impact\": null, \"patents\": 2, \"score\": 48.8, \"year\": 2012}, {\"world_rank\": 56, \"institution\": \"Tel Aviv University\", \"country\": \"Israel\", \"national_rank\": 4, \"quality_of_education\": 97, \"alumni_employment\": 101, \"quality_of_faculty\": 51, \"publications\": 72, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 35, \"score\": 48.76, \"year\": 2012}, {\"world_rank\": 57, \"institution\": \"Rice University\", \"country\": \"USA\", \"national_rank\": 41, \"quality_of_education\": 28, \"alumni_employment\": 53, \"quality_of_faculty\": 94, \"publications\": 101, \"influence\": 101, \"citations\": 53, \"broad_impact\": null, \"patents\": 101, \"score\": 48.76, \"year\": 2012}, {\"world_rank\": 58, \"institution\": \"Dartmouth College\", \"country\": \"USA\", \"national_rank\": 42, \"quality_of_education\": 27, \"alumni_employment\": 13, \"quality_of_faculty\": 101, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 92, \"score\": 48.5, \"year\": 2012}, {\"world_rank\": 59, \"institution\": \"Vanderbilt University\", \"country\": \"USA\", \"national_rank\": 43, \"quality_of_education\": 80, \"alumni_employment\": 72, \"quality_of_faculty\": 101, \"publications\": 50, \"influence\": 35, \"citations\": 49, \"broad_impact\": null, \"patents\": 101, \"score\": 48.44, \"year\": 2012}, {\"world_rank\": 60, \"institution\": \"University of Edinburgh\", \"country\": \"United Kingdom\", \"national_rank\": 1, \"quality_of_education\": 71, \"alumni_employment\": 101, \"quality_of_faculty\": 43, \"publications\": 64, \"influence\": 41, \"citations\": 70, \"broad_impact\": null, \"patents\": 101, \"score\": 48.43, \"year\": 2012}, {\"world_rank\": 61, \"institution\": \"\\u00c3\\u2030cole Polytechnique\", \"country\": \"France\", \"national_rank\": 3, \"quality_of_education\": 47, \"alumni_employment\": 3, \"quality_of_faculty\": 101, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 48.33, \"year\": 2012}, {\"world_rank\": 62, \"institution\": \"Boston University\", \"country\": \"USA\", \"national_rank\": 44, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 86, \"publications\": 48, \"influence\": 34, \"citations\": 37, \"broad_impact\": null, \"patents\": 101, \"score\": 48.31, \"year\": 2012}, {\"world_rank\": 63, \"institution\": \"Pierre-and-Marie-Curie University\", \"country\": \"France\", \"national_rank\": 4, \"quality_of_education\": 54, \"alumni_employment\": 101, \"quality_of_faculty\": 84, \"publications\": 36, \"influence\": 53, \"citations\": 78, \"broad_impact\": null, \"patents\": 101, \"score\": 48.26, \"year\": 2012}, {\"world_rank\": 64, \"institution\": \"Pennsylvania State University, University Park\", \"country\": \"USA\", \"national_rank\": 45, \"quality_of_education\": 101, \"alumni_employment\": 94, \"quality_of_faculty\": 101, \"publications\": 38, \"influence\": 60, \"citations\": 27, \"broad_impact\": null, \"patents\": 99, \"score\": 48.15, \"year\": 2012}, {\"world_rank\": 65, \"institution\": \"University of Geneva\", \"country\": \"Switzerland\", \"national_rank\": 2, \"quality_of_education\": 46, \"alumni_employment\": 101, \"quality_of_faculty\": 29, \"publications\": 101, \"influence\": 93, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 47.94, \"year\": 2012}, {\"world_rank\": 66, \"institution\": \"Brown University\", \"country\": \"USA\", \"national_rank\": 46, \"quality_of_education\": 49, \"alumni_employment\": 37, \"quality_of_faculty\": 65, \"publications\": 101, \"influence\": 73, \"citations\": 92, \"broad_impact\": null, \"patents\": 101, \"score\": 47.91, \"year\": 2012}, {\"world_rank\": 67, \"institution\": \"University of British Columbia\", \"country\": \"Canada\", \"national_rank\": 3, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 93, \"publications\": 28, \"influence\": 38, \"citations\": 48, \"broad_impact\": null, \"patents\": 101, \"score\": 47.74, \"year\": 2012}, {\"world_rank\": 68, \"institution\": \"University of Maryland, College Park\", \"country\": \"USA\", \"national_rank\": 47, \"quality_of_education\": 85, \"alumni_employment\": 101, \"quality_of_faculty\": 50, \"publications\": 47, \"influence\": 55, \"citations\": 41, \"broad_impact\": null, \"patents\": 101, \"score\": 47.69, \"year\": 2012}, {\"world_rank\": 69, \"institution\": \"Swiss Federal Institute of Technology in Lausanne\", \"country\": \"Switzerland\", \"national_rank\": 3, \"quality_of_education\": 101, \"alumni_employment\": 30, \"quality_of_faculty\": 82, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 74, \"score\": 47.68, \"year\": 2012}, {\"world_rank\": 70, \"institution\": \"Karolinska Institute\", \"country\": \"Sweden\", \"national_rank\": 1, \"quality_of_education\": 51, \"alumni_employment\": 101, \"quality_of_faculty\": 42, \"publications\": 84, \"influence\": 49, \"citations\": 95, \"broad_impact\": null, \"patents\": 101, \"score\": 47.61, \"year\": 2012}, {\"world_rank\": 71, \"institution\": \"University of Pittsburgh - Pittsburgh Campus\", \"country\": \"USA\", \"national_rank\": 48, \"quality_of_education\": 81, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 21, \"influence\": 32, \"citations\": 24, \"broad_impact\": null, \"patents\": 61, \"score\": 47.59, \"year\": 2012}, {\"world_rank\": 72, \"institution\": \"Rutgers University-New Brunswick\", \"country\": \"USA\", \"national_rank\": 49, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 59, \"publications\": 80, \"influence\": 83, \"citations\": 72, \"broad_impact\": null, \"patents\": 85, \"score\": 47.5, \"year\": 2012}, {\"world_rank\": 73, \"institution\": \"Texas A&M University, College Station\", \"country\": \"USA\", \"national_rank\": 50, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 46, \"publications\": 58, \"influence\": 101, \"citations\": 80, \"broad_impact\": null, \"patents\": 101, \"score\": 47.31, \"year\": 2012}, {\"world_rank\": 74, \"institution\": \"Nagoya University\", \"country\": \"Japan\", \"national_rank\": 4, \"quality_of_education\": 56, \"alumni_employment\": 101, \"quality_of_faculty\": 69, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 46, \"score\": 46.89, \"year\": 2012}, {\"world_rank\": 75, \"institution\": \"Seoul National University\", \"country\": \"South Korea\", \"national_rank\": 1, \"quality_of_education\": 101, \"alumni_employment\": 34, \"quality_of_faculty\": 101, \"publications\": 44, \"influence\": 101, \"citations\": 69, \"broad_impact\": null, \"patents\": 4, \"score\": 46.74, \"year\": 2012}, {\"world_rank\": 76, \"institution\": \"University of Manchester\", \"country\": \"United Kingdom\", \"national_rank\": 5, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 75, \"publications\": 52, \"influence\": 70, \"citations\": 63, \"broad_impact\": null, \"patents\": 101, \"score\": 46.38, \"year\": 2012}, {\"world_rank\": 77, \"institution\": \"Sapienza University of Rome\", \"country\": \"Italy\", \"national_rank\": 1, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 30, \"publications\": 70, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 46.34, \"year\": 2012}, {\"world_rank\": 78, \"institution\": \"Case Western Reserve University\", \"country\": \"USA\", \"national_rank\": 51, \"quality_of_education\": 33, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 96, \"influence\": 63, \"citations\": 65, \"broad_impact\": null, \"patents\": 101, \"score\": 46.11, \"year\": 2012}, {\"world_rank\": 79, \"institution\": \"Tohoku University\", \"country\": \"Japan\", \"national_rank\": 5, \"quality_of_education\": 53, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 49, \"influence\": 100, \"citations\": 67, \"broad_impact\": null, \"patents\": 29, \"score\": 45.82, \"year\": 2012}, {\"world_rank\": 80, \"institution\": \"Arizona State University\", \"country\": \"USA\", \"national_rank\": 52, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 70, \"publications\": 101, \"influence\": 101, \"citations\": 77, \"broad_impact\": null, \"patents\": 49, \"score\": 45.7, \"year\": 2012}, {\"world_rank\": 81, \"institution\": \"Emory University\", \"country\": \"USA\", \"national_rank\": 53, \"quality_of_education\": 101, \"alumni_employment\": 97, \"quality_of_faculty\": 101, \"publications\": 54, \"influence\": 37, \"citations\": 50, \"broad_impact\": null, \"patents\": 46, \"score\": 45.47, \"year\": 2012}, {\"world_rank\": 82, \"institution\": \"Ruprecht Karl University of Heidelberg\", \"country\": \"Germany\", \"national_rank\": 1, \"quality_of_education\": 87, \"alumni_employment\": 101, \"quality_of_faculty\": 52, \"publications\": 86, \"influence\": 58, \"citations\": 100, \"broad_impact\": null, \"patents\": 101, \"score\": 45.33, \"year\": 2012}, {\"world_rank\": 83, \"institution\": \"Ludwig Maximilian University of Munich\", \"country\": \"Germany\", \"national_rank\": 2, \"quality_of_education\": 90, \"alumni_employment\": 101, \"quality_of_faculty\": 90, \"publications\": 60, \"influence\": 45, \"citations\": 62, \"broad_impact\": null, \"patents\": 101, \"score\": 45.21, \"year\": 2012}, {\"world_rank\": 84, \"institution\": \"University of Virginia\", \"country\": \"USA\", \"national_rank\": 54, \"quality_of_education\": 101, \"alumni_employment\": 50, \"quality_of_faculty\": 101, \"publications\": 76, \"influence\": 62, \"citations\": 57, \"broad_impact\": null, \"patents\": 86, \"score\": 45.2, \"year\": 2012}, {\"world_rank\": 85, \"institution\": \"Leiden University\", \"country\": \"Netherlands\", \"national_rank\": 1, \"quality_of_education\": 88, \"alumni_employment\": 101, \"quality_of_faculty\": 76, \"publications\": 81, \"influence\": 65, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 45.13, \"year\": 2012}, {\"world_rank\": 86, \"institution\": \"Tufts University\", \"country\": \"USA\", \"national_rank\": 55, \"quality_of_education\": 60, \"alumni_employment\": 41, \"quality_of_faculty\": 101, \"publications\": 101, \"influence\": 95, \"citations\": 75, \"broad_impact\": null, \"patents\": 101, \"score\": 44.91, \"year\": 2012}, {\"world_rank\": 87, \"institution\": \"Georgia Institute of Technology\", \"country\": \"USA\", \"national_rank\": 56, \"quality_of_education\": 101, \"alumni_employment\": 67, \"quality_of_faculty\": 101, \"publications\": 79, \"influence\": 101, \"citations\": 46, \"broad_impact\": null, \"patents\": 40, \"score\": 44.71, \"year\": 2012}, {\"world_rank\": 88, \"institution\": \"University of Zurich\", \"country\": \"Switzerland\", \"national_rank\": 4, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 80, \"publications\": 101, \"influence\": 69, \"citations\": 99, \"broad_impact\": null, \"patents\": 101, \"score\": 44.51, \"year\": 2012}, {\"world_rank\": 89, \"institution\": \"University of Helsinki\", \"country\": \"Finland\", \"national_rank\": 1, \"quality_of_education\": 96, \"alumni_employment\": 101, \"quality_of_faculty\": 79, \"publications\": 62, \"influence\": 64, \"citations\": 54, \"broad_impact\": null, \"patents\": 101, \"score\": 44.44, \"year\": 2012}, {\"world_rank\": 90, \"institution\": \"Technical University of Munich\", \"country\": \"Germany\", \"national_rank\": 3, \"quality_of_education\": 52, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 91, \"influence\": 76, \"citations\": 94, \"broad_impact\": null, \"patents\": 101, \"score\": 44.32, \"year\": 2012}, {\"world_rank\": 91, \"institution\": \"University of Oslo\", \"country\": \"Norway\", \"national_rank\": 1, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 39, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 44.26, \"year\": 2012}, {\"world_rank\": 92, \"institution\": \"University of Queensland\", \"country\": \"Australia\", \"national_rank\": 1, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 67, \"influence\": 90, \"citations\": 89, \"broad_impact\": null, \"patents\": 46, \"score\": 44.18, \"year\": 2012}, {\"world_rank\": 93, \"institution\": \"University of Copenhagen\", \"country\": \"Denmark\", \"national_rank\": 1, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 60, \"publications\": 85, \"influence\": 66, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 44.15, \"year\": 2012}, {\"world_rank\": 94, \"institution\": \"University of Sydney\", \"country\": \"Australia\", \"national_rank\": 2, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 56, \"influence\": 92, \"citations\": 85, \"broad_impact\": null, \"patents\": 69, \"score\": 44.13, \"year\": 2012}, {\"world_rank\": 95, \"institution\": \"Williams College\", \"country\": \"USA\", \"national_rank\": 57, \"quality_of_education\": 18, \"alumni_employment\": 15, \"quality_of_faculty\": 101, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 43.89, \"year\": 2012}, {\"world_rank\": 96, \"institution\": \"University of Texas MD Anderson Cancer Center\", \"country\": \"USA\", \"national_rank\": 58, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 95, \"influence\": 46, \"citations\": 66, \"broad_impact\": null, \"patents\": 100, \"score\": 43.88, \"year\": 2012}, {\"world_rank\": 97, \"institution\": \"University of Nottingham\", \"country\": \"United Kingdom\", \"national_rank\": 6, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 87, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 92, \"score\": 43.79, \"year\": 2012}, {\"world_rank\": 98, \"institution\": \"University of Bristol\", \"country\": \"United Kingdom\", \"national_rank\": 7, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 78, \"publications\": 75, \"influence\": 81, \"citations\": 86, \"broad_impact\": null, \"patents\": 101, \"score\": 43.77, \"year\": 2012}, {\"world_rank\": 99, \"institution\": \"Utrecht University\", \"country\": \"Netherlands\", \"national_rank\": 2, \"quality_of_education\": 100, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 65, \"influence\": 101, \"citations\": 60, \"broad_impact\": null, \"patents\": 101, \"score\": 43.47, \"year\": 2012}, {\"world_rank\": 100, \"institution\": \"Mines ParisTech\", \"country\": \"France\", \"national_rank\": 5, \"quality_of_education\": 44, \"alumni_employment\": 4, \"quality_of_faculty\": 101, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 43.36, \"year\": 2012}]}}, {\"mode\": \"vega-lite\"});\n",
       "</script>"
      ],
      "text/plain": [
       "alt.Chart(...)"
      ]
     },
     "execution_count": 155,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#18)Create a treemap using Altair to represent the proportion of universities in each country in 2012.\n",
    "import altair as alt\n",
    "\n",
    "# Filter the data for the year 2012\n",
    "universities_2012 = df[df['year'] == 2012]\n",
    "\n",
    "# Create a treemap using Altair\n",
    "treemap = alt.Chart(universities_2012).mark_rect().encode(\n",
    "    color='count():Q',\n",
    "    tooltip=['country:N', 'count():Q'],\n",
    ").properties(\n",
    "    title='Treemap: Proportion of Universities in Each Country (2012)'\n",
    ")\n",
    "\n",
    "treemap\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "626f592e-f155-4e2f-aa44-c1d87ff25e7f",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#19)How can you use matplotlib to create a histogram showing the distribution of scores for all universities in 2014?\n",
    "# Filter the data for the year 2014\n",
    "scores_2014 = df[df['year'] == 2014]\n",
    "\n",
    "# Create a histogram using matplotlib\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.hist(scores_2014['score'], bins=20, color='lightblue', edgecolor='black')\n",
    "plt.title('Histogram: Distribution of Scores for All Universities (2014)')\n",
    "plt.xlabel('Score')\n",
    "plt.ylabel('Frequency')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 153,
   "id": "8a17ea86-3b45-4117-bbb3-60940fb826ad",
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       "  #altair-viz-932fab2988f04271afce66fa4d7249f5.vega-embed {\n",
       "    width: 100%;\n",
       "    display: flex;\n",
       "  }\n",
       "\n",
       "  #altair-viz-932fab2988f04271afce66fa4d7249f5.vega-embed details,\n",
       "  #altair-viz-932fab2988f04271afce66fa4d7249f5.vega-embed details summary {\n",
       "    position: relative;\n",
       "  }\n",
       "</style>\n",
       "<div id=\"altair-viz-932fab2988f04271afce66fa4d7249f5\"></div>\n",
       "<script type=\"text/javascript\">\n",
       "  var VEGA_DEBUG = (typeof VEGA_DEBUG == \"undefined\") ? {} : VEGA_DEBUG;\n",
       "  (function(spec, embedOpt){\n",
       "    let outputDiv = document.currentScript.previousElementSibling;\n",
       "    if (outputDiv.id !== \"altair-viz-932fab2988f04271afce66fa4d7249f5\") {\n",
       "      outputDiv = document.getElementById(\"altair-viz-932fab2988f04271afce66fa4d7249f5\");\n",
       "    }\n",
       "    const paths = {\n",
       "      \"vega\": \"https://cdn.jsdelivr.net/npm/vega@5?noext\",\n",
       "      \"vega-lib\": \"https://cdn.jsdelivr.net/npm/vega-lib?noext\",\n",
       "      \"vega-lite\": \"https://cdn.jsdelivr.net/npm/vega-lite@5.16.3?noext\",\n",
       "      \"vega-embed\": \"https://cdn.jsdelivr.net/npm/vega-embed@6?noext\",\n",
       "    };\n",
       "\n",
       "    function maybeLoadScript(lib, version) {\n",
       "      var key = `${lib.replace(\"-\", \"\")}_version`;\n",
       "      return (VEGA_DEBUG[key] == version) ?\n",
       "        Promise.resolve(paths[lib]) :\n",
       "        new Promise(function(resolve, reject) {\n",
       "          var s = document.createElement('script');\n",
       "          document.getElementsByTagName(\"head\")[0].appendChild(s);\n",
       "          s.async = true;\n",
       "          s.onload = () => {\n",
       "            VEGA_DEBUG[key] = version;\n",
       "            return resolve(paths[lib]);\n",
       "          };\n",
       "          s.onerror = () => reject(`Error loading script: ${paths[lib]}`);\n",
       "          s.src = paths[lib];\n",
       "        });\n",
       "    }\n",
       "\n",
       "    function showError(err) {\n",
       "      outputDiv.innerHTML = `<div class=\"error\" style=\"color:red;\">${err}</div>`;\n",
       "      throw err;\n",
       "    }\n",
       "\n",
       "    function displayChart(vegaEmbed) {\n",
       "      vegaEmbed(outputDiv, spec, embedOpt)\n",
       "        .catch(err => showError(`Javascript Error: ${err.message}<br>This usually means there's a typo in your chart specification. See the javascript console for the full traceback.`));\n",
       "    }\n",
       "\n",
       "    if(typeof define === \"function\" && define.amd) {\n",
       "      requirejs.config({paths});\n",
       "      require([\"vega-embed\"], displayChart, err => showError(`Error loading script: ${err.message}`));\n",
       "    } else {\n",
       "      maybeLoadScript(\"vega\", \"5\")\n",
       "        .then(() => maybeLoadScript(\"vega-lite\", \"5.16.3\"))\n",
       "        .then(() => maybeLoadScript(\"vega-embed\", \"6\"))\n",
       "        .catch(showError)\n",
       "        .then(() => displayChart(vegaEmbed));\n",
       "    }\n",
       "  })({\"config\": {\"view\": {\"continuousWidth\": 300, \"continuousHeight\": 300}}, \"data\": {\"name\": \"data-6f1347c5f42a548933450ea67d302f4b\"}, \"mark\": {\"type\": \"bar\"}, \"encoding\": {\"color\": {\"field\": \"country\", \"type\": \"nominal\"}, \"tooltip\": [{\"field\": \"institution\", \"type\": \"nominal\"}, {\"field\": \"influence\", \"type\": \"quantitative\"}], \"x\": {\"field\": \"institution\", \"type\": \"nominal\"}, \"y\": {\"field\": \"influence\", \"type\": \"quantitative\"}}, \"title\": \"Bar Chart: Influence Scores of Universities in Canada and Australia (2013)\", \"$schema\": \"https://vega.github.io/schema/vega-lite/v5.16.3.json\", \"datasets\": {\"data-6f1347c5f42a548933450ea67d302f4b\": [{\"world_rank\": 29, \"institution\": \"University of Toronto\", \"country\": \"Canada\", \"national_rank\": 1, \"quality_of_education\": 91, \"alumni_employment\": 81, \"quality_of_faculty\": 34, \"publications\": 2, \"influence\": 13, \"citations\": 12, \"broad_impact\": null, \"patents\": 101, \"score\": 56.11, \"year\": 2013}, {\"world_rank\": 47, \"institution\": \"McGill University\", \"country\": \"Canada\", \"national_rank\": 2, \"quality_of_education\": 54, \"alumni_employment\": 62, \"quality_of_faculty\": 59, \"publications\": 34, \"influence\": 42, \"citations\": 48, \"broad_impact\": null, \"patents\": 101, \"score\": 50.77, \"year\": 2013}, {\"world_rank\": 58, \"institution\": \"University of British Columbia\", \"country\": \"Canada\", \"national_rank\": 3, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 95, \"publications\": 25, \"influence\": 39, \"citations\": 39, \"broad_impact\": null, \"patents\": 100, \"score\": 48.51, \"year\": 2013}, {\"world_rank\": 92, \"institution\": \"University of Sydney\", \"country\": \"Australia\", \"national_rank\": 1, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 61, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 48, \"score\": 44.77, \"year\": 2013}, {\"world_rank\": 96, \"institution\": \"Australian National University\", \"country\": \"Australia\", \"national_rank\": 2, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 43, \"publications\": 101, \"influence\": 101, \"citations\": 101, \"broad_impact\": null, \"patents\": 101, \"score\": 44.5, \"year\": 2013}, {\"world_rank\": 97, \"institution\": \"University of Alberta\", \"country\": \"Canada\", \"national_rank\": 4, \"quality_of_education\": 101, \"alumni_employment\": 101, \"quality_of_faculty\": 101, \"publications\": 68, \"influence\": 101, \"citations\": 92, \"broad_impact\": null, \"patents\": 81, \"score\": 44.5, \"year\": 2013}]}}, {\"mode\": \"vega-lite\"});\n",
       "</script>"
      ],
      "text/plain": [
       "alt.Chart(...)"
      ]
     },
     "execution_count": 153,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#20)Using Altair, create a bar chart to compare the influence scores of universities in Canada and Australia in 2013.\n",
    "import altair as alt\n",
    "\n",
    "# Filter the data for the year 2013 and universities in Canada and Australia\n",
    "universities_ca_au_2013 = df[(df['year'] == 2013) & (df['country'].isin(['Canada', 'Australia']))]\n",
    "\n",
    "# Create a bar chart using Altair\n",
    "bar_chart = alt.Chart(universities_ca_au_2013).mark_bar().encode(\n",
    "    x='institution:N',\n",
    "    y='influence:Q',\n",
    "    color='country:N',\n",
    "    tooltip=['institution', 'influence']\n",
    ").properties(\n",
    "    title='Bar Chart: Influence Scores of Universities in Canada and Australia (2013)'\n",
    ")\n",
    "\n",
    "bar_chart"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7b8517a4-6a8b-41df-b067-ff1b02a03a07",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
